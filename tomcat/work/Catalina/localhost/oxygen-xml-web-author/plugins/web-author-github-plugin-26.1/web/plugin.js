(()=>{var Be=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var je=Be((Ue,ve)=>{var q="unimplemented abstract method";function D(){}D.prototype.commit=function(e,t,n,i,o,r,a){throw Error(q)};D.prototype.write=function(e,t,n,i,o,r){throw Error(q)};D.prototype.startMerge=function(e,t,n,i,o,r){throw Error(q)};D.prototype.endMerge=function(e,t,n){throw Error(q)};D.prototype.setUserInformation=function(e,t){throw Error(q)};D.prototype.getUserInformation=function(){throw Error(q)};D.prototype.getUserRepositories=function(e){throw Error(q)};D.prototype.getTeams=function(e){return goog.Promise.resolve([])};D.prototype.getDocument=function(e,t,n){throw Error(q)};D.prototype.getBranches=function(e,t){throw Error(q)};D.prototype.branchExists=function(e,t,n,i){N.branchExists(e,{repositoryUri:t,branch:n},i)};D.prototype.canPush=function(e,t,n){throw Error(q)};D.prototype.canFork=function(e){throw Error(q)};D.prototype.createFork=function(e,t){throw Error(q)};D.prototype.branchFromRepoToRepo=function(e,t,n,i,o){throw Error(q)};D.prototype.getUrlOfCommit=function(e,t,n,i){throw Error(q)};D.prototype.openPullRequest=function(e,t,n,i,o,r,a){throw Error(q)};D.prototype.deleteBranch=function(e,t,n){return Promise.reject(new Error(q))};(function(){"use strict";var e=typeof window=="object"?window:{},t=!e.JS_SHA1_NO_NODE_JS&&typeof process=="object"&&process.versions&&process.versions.node;t&&(e=global);var n=!e.JS_SHA1_NO_COMMON_JS&&typeof ve=="object"&&ve.exports,i=typeof define=="function"&&define.amd,o="0123456789abcdef".split(""),r=[-2147483648,8388608,32768,128],a=[24,16,8,0],s=["hex","array","digest","arrayBuffer"],u=[],h=function(c){return function(d){return new p(!0).update(d)[c]()}},_=function(){var c=h("hex");c.create=function(){return new p},c.update=function(l){return c.create().update(l)};for(var d=0;d<s.length;++d){var C=s[d];c[C]=h(C)}return c};function p(c){c?(u[0]=u[16]=u[1]=u[2]=u[3]=u[4]=u[5]=u[6]=u[7]=u[8]=u[9]=u[10]=u[11]=u[12]=u[13]=u[14]=u[15]=0,this.blocks=u):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],this.h0=1732584193,this.h1=4023233417,this.h2=2562383102,this.h3=271733878,this.h4=3285377520,this.block=this.start=this.bytes=0,this.finalized=this.hashed=!1,this.first=!0}p.prototype.update=function(c){if(!this.finalized){var d=typeof c!="string";d&&c.constructor===e.ArrayBuffer&&(c=new Uint8Array(c));for(var C,l=0,g,v=c.length||0,m=this.blocks;l<v;){if(this.hashed&&(this.hashed=!1,m[0]=this.block,m[16]=m[1]=m[2]=m[3]=m[4]=m[5]=m[6]=m[7]=m[8]=m[9]=m[10]=m[11]=m[12]=m[13]=m[14]=m[15]=0),d)for(g=this.start;l<v&&g<64;++l)m[g>>2]|=c[l]<<a[g++&3];else for(g=this.start;l<v&&g<64;++l)C=c.charCodeAt(l),C<128?m[g>>2]|=C<<a[g++&3]:C<2048?(m[g>>2]|=(192|C>>6)<<a[g++&3],m[g>>2]|=(128|C&63)<<a[g++&3]):C<55296||C>=57344?(m[g>>2]|=(224|C>>12)<<a[g++&3],m[g>>2]|=(128|C>>6&63)<<a[g++&3],m[g>>2]|=(128|C&63)<<a[g++&3]):(C=65536+((C&1023)<<10|c.charCodeAt(++l)&1023),m[g>>2]|=(240|C>>18)<<a[g++&3],m[g>>2]|=(128|C>>12&63)<<a[g++&3],m[g>>2]|=(128|C>>6&63)<<a[g++&3],m[g>>2]|=(128|C&63)<<a[g++&3]);this.lastByteIndex=g,this.bytes+=g-this.start,g>=64?(this.block=m[16],this.start=g-64,this.hash(),this.hashed=!0):this.start=g}return this}},p.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var c=this.blocks,d=this.lastByteIndex;c[16]=this.block,c[d>>2]|=r[d&3],this.block=c[16],d>=56&&(this.hashed||this.hash(),c[0]=this.block,c[16]=c[1]=c[2]=c[3]=c[4]=c[5]=c[6]=c[7]=c[8]=c[9]=c[10]=c[11]=c[12]=c[13]=c[14]=c[15]=0),c[15]=this.bytes<<3,this.hash()}},p.prototype.hash=function(){var c=this.h0,d=this.h1,C=this.h2,l=this.h3,g=this.h4,v,m,R,S=this.blocks;for(m=16;m<80;++m)R=S[m-3]^S[m-8]^S[m-14]^S[m-16],S[m]=R<<1|R>>>31;for(m=0;m<20;m+=5)v=d&C|~d&l,R=c<<5|c>>>27,g=R+v+g+1518500249+S[m]<<0,d=d<<30|d>>>2,v=c&d|~c&C,R=g<<5|g>>>27,l=R+v+l+1518500249+S[m+1]<<0,c=c<<30|c>>>2,v=g&c|~g&d,R=l<<5|l>>>27,C=R+v+C+1518500249+S[m+2]<<0,g=g<<30|g>>>2,v=l&g|~l&c,R=C<<5|C>>>27,d=R+v+d+1518500249+S[m+3]<<0,l=l<<30|l>>>2,v=C&l|~C&g,R=d<<5|d>>>27,c=R+v+c+1518500249+S[m+4]<<0,C=C<<30|C>>>2;for(;m<40;m+=5)v=d^C^l,R=c<<5|c>>>27,g=R+v+g+1859775393+S[m]<<0,d=d<<30|d>>>2,v=c^d^C,R=g<<5|g>>>27,l=R+v+l+1859775393+S[m+1]<<0,c=c<<30|c>>>2,v=g^c^d,R=l<<5|l>>>27,C=R+v+C+1859775393+S[m+2]<<0,g=g<<30|g>>>2,v=l^g^c,R=C<<5|C>>>27,d=R+v+d+1859775393+S[m+3]<<0,l=l<<30|l>>>2,v=C^l^g,R=d<<5|d>>>27,c=R+v+c+1859775393+S[m+4]<<0,C=C<<30|C>>>2;for(;m<60;m+=5)v=d&C|d&l|C&l,R=c<<5|c>>>27,g=R+v+g-1894007588+S[m]<<0,d=d<<30|d>>>2,v=c&d|c&C|d&C,R=g<<5|g>>>27,l=R+v+l-1894007588+S[m+1]<<0,c=c<<30|c>>>2,v=g&c|g&d|c&d,R=l<<5|l>>>27,C=R+v+C-1894007588+S[m+2]<<0,g=g<<30|g>>>2,v=l&g|l&c|g&c,R=C<<5|C>>>27,d=R+v+d-1894007588+S[m+3]<<0,l=l<<30|l>>>2,v=C&l|C&g|l&g,R=d<<5|d>>>27,c=R+v+c-1894007588+S[m+4]<<0,C=C<<30|C>>>2;for(;m<80;m+=5)v=d^C^l,R=c<<5|c>>>27,g=R+v+g-899497514+S[m]<<0,d=d<<30|d>>>2,v=c^d^C,R=g<<5|g>>>27,l=R+v+l-899497514+S[m+1]<<0,c=c<<30|c>>>2,v=g^c^d,R=l<<5|l>>>27,C=R+v+C-899497514+S[m+2]<<0,g=g<<30|g>>>2,v=l^g^c,R=C<<5|C>>>27,d=R+v+d-899497514+S[m+3]<<0,l=l<<30|l>>>2,v=C^l^g,R=d<<5|d>>>27,c=R+v+c-899497514+S[m+4]<<0,C=C<<30|C>>>2;this.h0=this.h0+c<<0,this.h1=this.h1+d<<0,this.h2=this.h2+C<<0,this.h3=this.h3+l<<0,this.h4=this.h4+g<<0},p.prototype.hex=function(){this.finalize();var c=this.h0,d=this.h1,C=this.h2,l=this.h3,g=this.h4;return o[c>>28&15]+o[c>>24&15]+o[c>>20&15]+o[c>>16&15]+o[c>>12&15]+o[c>>8&15]+o[c>>4&15]+o[c&15]+o[d>>28&15]+o[d>>24&15]+o[d>>20&15]+o[d>>16&15]+o[d>>12&15]+o[d>>8&15]+o[d>>4&15]+o[d&15]+o[C>>28&15]+o[C>>24&15]+o[C>>20&15]+o[C>>16&15]+o[C>>12&15]+o[C>>8&15]+o[C>>4&15]+o[C&15]+o[l>>28&15]+o[l>>24&15]+o[l>>20&15]+o[l>>16&15]+o[l>>12&15]+o[l>>8&15]+o[l>>4&15]+o[l&15]+o[g>>28&15]+o[g>>24&15]+o[g>>20&15]+o[g>>16&15]+o[g>>12&15]+o[g>>8&15]+o[g>>4&15]+o[g&15]},p.prototype.toString=p.prototype.hex,p.prototype.digest=function(){this.finalize();var c=this.h0,d=this.h1,C=this.h2,l=this.h3,g=this.h4;return[c>>24&255,c>>16&255,c>>8&255,c&255,d>>24&255,d>>16&255,d>>8&255,d&255,C>>24&255,C>>16&255,C>>8&255,C&255,l>>24&255,l>>16&255,l>>8&255,l&255,g>>24&255,g>>16&255,g>>8&255,g&255]},p.prototype.array=p.prototype.digest,p.prototype.arrayBuffer=function(){this.finalize();var c=new ArrayBuffer(20),d=new DataView(c);return d.setUint32(0,this.h0),d.setUint32(4,this.h1),d.setUint32(8,this.h2),d.setUint32(12,this.h3),d.setUint32(16,this.h4),c};var f=_();window.sha1=f,n?ve.exports=f:(e.sha1=f,i&&define(function(){return f}))})();(function(){var e={COMMIT_STATUS_TITLE_:{en_US:"Commit status",de_DE:"Commit-Status",fr_FR:"Statut du commit",ja_JP:"\u30B3\u30DF\u30C3\u30C8\u72B6\u614B",nl_NL:"Status vastleggen",zh_CN:"\u63D0\u4EA4\u72B6\u6001"},NOT_AUTHORIZED_TO_ACCESS_REPO_:{en_US:"Not authorized to access the repository.",de_DE:"Nicht autorisiert auf das Repository zuzugreifen.",fr_FR:"Non autoris\xE9 \xE0 acc\xE9der au d\xE9p\xF4t.",ja_JP:"\u30EA\u30DD\u30B8\u30C8\u30EA\u3078\u306E\u30A2\u30AF\u30BB\u30B9\u3092\u627F\u8A8D\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002",nl_NL:"Geen toegang tot de opslagplaats.",zh_CN:"\u672A\u6388\u6743\u8BBF\u95EE\u5B58\u50A8\u5E93\u3002"},REQUESTED_FILE_NOT_FOUND_:{en_US:"The requested file was not found.",de_DE:"Die angeforderte Datei wurde nicht gefunden.",fr_FR:"Le fichier demand\xE9 est introuvable.",ja_JP:"\u8981\u6C42\u3055\u308C\u305F\u30D5\u30A1\u30A4\u30EB\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3067\u3057\u305F\u3002",nl_NL:"Het aangevraagde bestand is niet gevonden.",zh_CN:"\u627E\u4E0D\u5230\u8BF7\u6C42\u7684\u6587\u4EF6\u3002"},ERROR_:{en_US:"Error",de_DE:"Fehler",fr_FR:"Erreur",ja_JP:"\u30A8\u30E9\u30FC",nl_NL:"Fout",zh_CN:"\u9519\u8BEF"},GIT_PULL_TITLE_:{en_US:"{$APP_NAME} Pull Request",de_DE:"{$APP_NAME} Pull-Request",fr_FR:"Pull Request {$APP_NAME}",ja_JP:"{$APP_NAME}\u306E\u30D7\u30EB\u8981\u6C42",nl_NL:"Pull-aanvraag voor {$APP_NAME}",zh_CN:"{$APP_NAME} \u5408\u5E76\u8BF7\u6C42"},WEB_AUTHOR_NAME_:{en_US:"Oxygen XML Web Author"},GIT_DEFAULT_COMMIT_MESSAGE_:{en_US:"Committing with {$APP_NAME}",de_DE:"Committen mit {$APP_NAME}",fr_FR:"Commit effectu\xE9 avec {$APP_NAME}",ja_JP:"{$APP_NAME}\u3092\u4F7F\u3063\u3066\u30B3\u30DF\u30C3\u30C8\u4E2D",nl_NL:"Vastleggen met {$APP_NAME}",zh_CN:"\u4F7F\u7528{$APP_NAME}\u63D0\u4EA4"},GIT_COMMIT_:{en_US:"Commit",ja_JP:"\u30B3\u30DF\u30C3\u30C8",nl_NL:"Vastleggen",zh_CN:"\u63D0\u4EA4"},GIT_COMMIT_ON_REPOSITORY_:{en_US:"Commit on Git repository",de_DE:"In Git repository committen",fr_FR:"Commit sur le d\xE9p\xF4t Git",ja_JP:"Git\u30EA\u30DD\u30B8\u30C8\u30EA\u4E0A\u3067\u30B3\u30DF\u30C3\u30C8\u3059\u308B",nl_NL:"Vastleggen in Git-opslagplaats",zh_CN:"\u5728Git\u5B58\u50A8\u5E93\u4E0A\u63D0\u4EA4"},CANCEL_:{en_US:"Cancel",de_DE:"Abbrechen",fr_FR:"Annuler",ja_JP:"\u30AD\u30E3\u30F3\u30BB\u30EB",nl_NL:"Annuleer",zh_CN:"\u53D6\u6D88"},COMMIT_ON_GIT_:{en_US:"Commit on Git",de_DE:"In Git committen",fr_FR:"Commit sur Git",ja_JP:"Git\u4E0A\u3067\u30B3\u30DF\u30C3\u30C8\u3059\u308B",nl_NL:"Vastleggen in Git",zh_CN:"\u5728Git\u4E0A\u63D0\u4EA4"},COMMIT_ON_NEW_BRANCH_:{en_US:"Commit on a new branch",de_DE:"Auf einen neuen Branch committen",fr_FR:"Commit sur une nouvelle branche",ja_JP:"\u65B0\u3057\u3044\u5206\u5C90\u4E0A\u3067\u30B3\u30DF\u30C3\u30C8\u3059\u308B",nl_NL:"Vastleggen in een nieuwe vertakking",zh_CN:"\u5728\u65B0\u5206\u652F\u4E0A\u63D0\u4EA4"},CREATE_PULL_REQUEST_AUTOMATICALLY_:{en_US:"Create pull request automatically.",de_DE:"Automatisch einen Pull-Request erstellen.",fr_FR:"Cr\xE9er automatiquement le Pull Request.",ja_JP:"\u81EA\u52D5\u7684\u306B\u30D7\u30EB\u8981\u6C42\u3092\u4F5C\u6210\u3057\u307E\u3059\u3002",nl_NL:"Maak de pull-aanvraag automatisch.",zh_CN:"\u81EA\u52A8\u521B\u5EFA\u5408\u5E76\u8BF7\u6C42\u3002"},GIT_OPEN_DIALOG_WITH_SHORTCUT_:{en_US:"Open this dialog with {$SHORTCUT}",de_DE:"Diesen Dialog mit {$SHORTCUT} \xF6ffnen",fr_FR:"Ouvrir ce dialogue avec {$SHORTCUT}",ja_JP:"\u3053\u306E\u30C0\u30A4\u30A2\u30ED\u30B0\u3092{$SHORTCUT}\u3092\u4F7F\u3063\u3066\u958B\u304F",nl_NL:"Dit dialoogvenster openen met {$SHORTCUT}",zh_CN:"\u7528{$SHORTCUT}\u6253\u5F00\u6B64\u5BF9\u8BDD\u6846"},COMMIT_MESSAGE_:{en_US:"Commit message",de_DE:"Eincheck-Nachricht",fr_FR:"Message de commit",ja_JP:"\u30B3\u30DF\u30C3\u30C8\u30E1\u30C3\u30BB\u30FC\u30B8",nl_NL:"Incheckbericht",zh_CN:"\u63D0\u4EA4\u6D88\u606F"},BRANCH_:{en_US:"Branch",de_DE:"Zweig",fr_FR:"Branche",ja_JP:"\u30D6\u30E9\u30F3\u30C1",zh_CN:"\u5206\u652F"},COMMIT_ON_BRANCH_:{en_US:"Commit on branch",de_DE:"Auf Branch committen",fr_FR:"Commit sur une branche",ja_JP:"\u5206\u5C90\u4E0A\u3067\u30B3\u30DF\u30C3\u30C8\u3059\u308B",nl_NL:"Vastleggen in vertakking",zh_CN:"\u5728\u5206\u652F\u4E0A\u63D0\u4EA4"},COMMIT_NO_WRITE_ACCESS_:{en_US:"You are trying to commit a file in a repository where you do not have access. Continuing will commit this file to a new branch in your fork. You can then send a pull request.",de_DE:"Sie versuchen eine Datei in ein Repository zu committen, f\xFCr das Sie keinen Zugang besitzen. Wenn Sie fortfahren, wird die Datei auf einem neuen Zweig in Ihrem Fork committet. Sie k\xF6nnen anschlie\xDFend einen Pull-Request senden.",fr_FR:"Vous essayez de faire le commit d'un fichier dans un d\xE9p\xF4t auquel vous n'avez pas acc\xE8s. Si vous continuez, le commit de ce fichier sera effectu\xE9 dans une nouvelle branche de votre fork. Vous pourrez alors envoyer un pull request.",ja_JP:"\u30A2\u30AF\u30BB\u30B9\u6A29\u306E\u306A\u3044\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u30D5\u30A1\u30A4\u30EB\u3092\u30B3\u30DF\u30C3\u30C8\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307E\u3059\u3002\u7D9A\u884C\u3059\u308B\u3068\u3001\u30D5\u30A9\u30FC\u30AF\u5185\u306E\u65B0\u3057\u3044\u5206\u5C90\u306B\u3053\u306E\u30D5\u30A1\u30A4\u30EB\u304C\u30B3\u30DF\u30C3\u30C8\u3055\u308C\u307E\u3059\u3002\u305D\u306E\u5F8C\u3001\u30D7\u30EB\u8981\u6C42\u3092\u9001\u4FE1\u3067\u304D\u307E\u3059\u3002",nl_NL:"U probeert een bestand vast te leggen in een opslagplaats waartoe u geen toegang hebt. Als u doorgaat, wordt dit bestand vastgelegd in een nieuwe vertakking van uw structuur. Vervolgens kunt u een pull-aanvraag verzenden.",zh_CN:"\u60A8\u6B63\u5728\u63D0\u4EA4\u6587\u6863\u7ED9\u60A8\u6CA1\u6709\u8BBF\u95EE\u6743\u9650\u7684\u8D44\u6599\u5E93. \u7EE7\u7EED\u64CD\u4F5C\u5C06\u63D0\u4EA4\u8BE5\u6587\u4EF6\u5230\u60A8fork\u4E0B\u521B\u5EFA\u5206\u652F.\u540C\u65F6\u60A8\u53EF\u4EE5\u53D1\u9001PULL\u8BF7\u6C42\u83B7\u5F97\u6B64\u6587\u4EF6."},OK_:{en_US:"OK",zh_CN:"\u786E\u8BA4"},CHOOSE_PREVIOUSLY_ENTERED_COMMENT_:{en_US:"Choose a previously entered message",de_DE:"W\xE4hlen Sie eine zuvor eingegebene Nachricht",fr_FR:"Choisissez un message pr\xE9c\xE9demment saisi",ja_JP:"\u4EE5\u524D\u306B\u5165\u529B\u3057\u305F\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u9078\u629E\u3059\u308B",nl_NL:"Een eerder ingevoerd bericht kiezen",zh_CN:"\u9009\u62E9\u4E4B\u524D\u8F93\u5165\u7684\u6D88\u606F"},FILE_EDITED_SINCE_OPENED_:{en_US:"The file you want to commit has been edited since you opened it.",de_DE:"Die zu committende Datei wurde nach dem \xD6ffnen bearbeitet.",fr_FR:"Le fichier du commit a \xE9t\xE9 \xE9dit\xE9 depuis la derni\xE8re fois que vous l'avez ouvert.",ja_JP:"\u30B3\u30DF\u30C3\u30C8\u3059\u308B\u30D5\u30A1\u30A4\u30EB\u306F\u3001\u3042\u306A\u305F\u304C\u958B\u3044\u3066\u304B\u3089\u7DE8\u96C6\u3055\u308C\u3066\u3044\u307E\u3059\u3002",nl_NL:"Het bestand dat u wilt vastleggen, is bewerkt sinds u het hebt geopend.",zh_CN:"\u8981\u63D0\u4EA4\u7684\u6587\u4EF6\u81EA\u6253\u5F00\u6587\u4EF6\u540E\u5DF2\u5BF9\u5176\u8FDB\u884C\u7F16\u8F91\u3002"},COMMIT_SUCCESSFUL_ON_BRANCH_:{en_US:"Commit successful on branch {$BRANCH_NAME}.",de_DE:"Commit erfolgreich auf Branch {$BRANCH_NAME}.",fr_FR:"Succ\xE8s du commit sur la branche {$BRANCH_NAME}.",ja_JP:"\u5206\u5C90{$BRANCH_NAME}\u4E0A\u3067\u6B63\u5E38\u306B\u30B3\u30DF\u30C3\u30C8\u3055\u308C\u307E\u3057\u305F\u3002",nl_NL:"Vastleggen in de vertakking {$BRANCH_NAME} is voltooid.",zh_CN:"\u5728\u5206\u652F{$BRANCH_NAME}\u4E0A\u63D0\u4EA4\u6210\u529F\u3002"},COMMIT_FAILED_:{en_US:"Commit failed",de_DE:"Commit fehlgeschlagen",fr_FR:"\xC9chec du commit",ja_JP:"\u30B3\u30DF\u30C3\u30C8\u306B\u5931\u6557\u3057\u307E\u3057\u305F",nl_NL:"Vastleggen is mislukt",zh_CN:"\u63D0\u4EA4\u5931\u8D25"},FAILED_TO_RETRIEVE_DOCUMENT_CONTENT_:{en_US:"Failed to retrieve document content, please try again.",de_DE:"Abfrage des Dokumentinhalts fehlgeschlagen, bitte erneut versuchen.",fr_FR:"\xC9chec de r\xE9cup\xE9ration du contenu du document, veuillez r\xE9essayer.",ja_JP:"\u30C9\u30AD\u30E5\u30E1\u30F3\u30C8\u30B3\u30F3\u30C6\u30F3\u30C4\u306E\u53D6\u5F97\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002\u518D\u8A66\u884C\u3057\u3066\u304F\u3060\u3055\u3044\u3002",nl_NL:"Ophalen van documentcontent is mislukt; probeer het opnieuw.",zh_CN:"\u68C0\u7D22\u6587\u6863\u5185\u5BB9\u5931\u8D25\uFF0C\u8BF7\u91CD\u8BD5\u3002"},CONNECTION_ERROR_:{en_US:"Connection error",de_DE:"Verbindungsfehler",fr_FR:"Erreur de connexion",ja_JP:"\u63A5\u7D9A\u30A8\u30E9\u30FC",nl_NL:"Verbindingsfout",zh_CN:"\u8FDE\u63A5\u9519\u8BEF"},COULD_NOT_CREATE_NEW_BRANCH_:{en_US:"Could not create a new branch",de_DE:"Konnte keinen neuen Branch erstellen",fr_FR:"Impossible de cr\xE9er une nouvelle branche",ja_JP:"\u65B0\u3057\u3044\u5206\u5C90\u3092\u4F5C\u6210\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F",nl_NL:"Kan geen nieuwe vertakking maken",zh_CN:"\u65E0\u6CD5\u521B\u5EFA\u65B0\u5206\u652F"},FAILED_TO_FORK_REPOSITORY_:{en_US:"Failed to fork repository.",de_DE:"Repository konnte nicht geforkt werden.",fr_FR:"\xC9chec de la cr\xE9ation du fork du d\xE9p\xF4t.",ja_JP:"\u30EA\u30DD\u30B8\u30C8\u30EA\u306E\u30D5\u30A9\u30FC\u30AF\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002",nl_NL:"Vertakken van de opslagplaats is mislukt.",zh_CN:"\u65E0\u6CD5fork\u5B58\u50A8\u5E93\u3002"},PULL_REQUEST_TITLE_:{en_US:"Pull request title",de_DE:"Titel des Pull-Requests",fr_FR:"Titre du Pull Request",ja_JP:"\u30D7\u30EB\u8981\u6C42\u306E\u30BF\u30A4\u30C8\u30EB",nl_NL:"Titel van pull-aanvraag",zh_CN:"\u8BF7\u6C42\u6807\u9898"},MESSAGE_:{en_US:"Message",de_DE:"Nachricht",ja_JP:"\u30E1\u30C3\u30BB\u30FC\u30B8",nl_NL:"Melding",zh_CN:"\u6D88\u606F"},COULD_NOT_COMMIT_ON_FORK_REPO_:{en_US:"Could not commit on the forked repository.",de_DE:"Konnte nicht in das geforkte Repository committen.",fr_FR:"Commit impossible  sur le fork du d\xE9p\xF4t.",ja_JP:"\u30D5\u30A9\u30FC\u30AF\u3055\u308C\u305F\u30EA\u30DD\u30B8\u30C8\u30EA\u4E0A\u3067\u30B3\u30DF\u30C3\u30C8\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002",nl_NL:"Kan niet vastleggen in de vertakte opslagplaats.",zh_CN:"\u65E0\u6CD5\u5728\u5206\u652F\u5B58\u50A8\u5E93\u4E0A\u63D0\u4EA4\u3002"},NEW_ORG_NEEDS_AUTHORIZATION_:{en_US:"Commit failed. Oxygen XML Web Author must be {$ANCHOR_START}granted access{$ANCHOR_END} to the organization that owns this repository. Then, try again.",de_DE:"Commit fehlgeschlagen. Sie m\xFCssen Oxygen XML Web Author {$ANCHOR_START}Zugang gew\xE4hren{$ANCHOR_END} zu der Organisation, die das Repository besitzt. Versuchen Sie es anschlie\xDFend erneut.",fr_FR:"Le commit a \xE9chou\xE9e. Oxygen XML Web Author doit avoir un {$ANCHOR_START}acc\xE8s autoris\xE9{$ANCHOR_END} \xE0 l'organisation qui poss\xE8de ce d\xE9p\xF4t. Ensuite, essayez \xE0 nouveau.",ja_JP:"\u30B3\u30DF\u30C3\u30C8\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002Oxygen XML Web Author \u306F\u3001\u3053\u306E\u30EA\u30DD\u30B8\u30C8\u30EA\u3092\u6240\u6709\u3059\u308B\u7D44\u7E54\u3078\u306E {$ ANCHOR_START} \u8A31\u53EF\u3055\u308C\u305F\u30A2\u30AF\u30BB\u30B9 {$ ANCHOR_END} \u3067\u3042\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002\u305D\u306E\u5F8C\u3001\u518D\u8A66\u884C\u3057\u3066\u304F\u3060\u3055\u3044\u3002",nl_NL:"Vastleggen is mislukt. Oxygen XML Web Author moet {$ANCHOR_START}toegang krijgen{$ANCHOR_END} tot de organisatie die eigenaar is van deze opslagplaats. Probeer het vervolgens opnieuw.",zh_CN:"\u63D0\u4EA4\u5931\u8D25. Oxygen XML Web Author \u9700\u8981 {$ANCHOR_START}\u5206\u914D\u6743\u9650\u7ED9\u62E5\u6709\u6B64\u8D44\u6599\u5E93\u7684\u7EC4\u7EC7{$ANCHOR_END}  ,\u5206\u914D\u5B8C\u6210\u540E\uFF0C\u8BF7\u91CD\u8BD5."},COMMIT_SUCCESSFUL_PULL_FAILED_:{en_US:"Commit successful on branch {$BRANCH_NAME} but pull request creation failed.",de_DE:"Commit auf Branch {$BRANCH_NAME} erfolgreich, aber Erstellung des Pull-Requests fehlgeschlagen.",fr_FR:"Commit r\xE9ussi sur la branche {$BRANCH_NAME} mais \xE9chec de la cr\xE9ation du pull request.",ja_JP:"\u5206\u5C90{$BRANCH_NAME}\u4E0A\u3067\u6B63\u5E38\u306B\u30B3\u30DF\u30C3\u30C8\u3055\u308C\u307E\u3057\u305F\u304C\u3001\u30D7\u30EB\u8981\u6C42\u306E\u4F5C\u6210\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002",nl_NL:"Vastleggen in de vertakking {$BRANCH_NAME} is voltooid, maar maken van de pull-aanvraag is mislukt.",zh_CN:"\u5728\u5206\u652F{$BRANCH_NAME}\u4E0A\u63D0\u4EA4\u6210\u529F\uFF0C\u4F46\u521B\u5EFA\u5408\u5E76\u8BF7\u6C42\u5931\u8D25\u3002"},PULL_REQUEST_:{en_US:"Pull request",de_DE:"Pull-Request",ja_JP:"\u30D7\u30EB\u8981\u6C42",nl_NL:"Pull-aanvraag",zh_CN:"\u5408\u5E76\u8BF7\u6C42"},PULL_REQUEST_SUCCESSFUL_:{en_US:"{$PULL_REQUEST} created successfully",de_DE:"{$PULL_REQUEST} erfolgreich erstellt",fr_FR:"{$PULL_REQUEST} cr\xE9\xE9 avec succ\xE8s",ja_JP:"{$PULL_REQUEST}\u304C\u3001\u6B63\u5E38\u306B\u4F5C\u6210\u3055\u308C\u307E\u3057\u305F\u3002",nl_NL:"{$PULL_REQUEST} is gemaakt",zh_CN:"{$PULL_REQUEST}\u521B\u5EFA\u6210\u529F"},NOT_AUTHORIZED_:{en_US:"Not authorized.",de_DE:"Nicht berechtigt.",fr_FR:"Non autoris\xE9.",ja_JP:"\u627F\u8A8D\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002",nl_NL:"Niet bevoegd.",zh_CN:"\u672A\u7ECF\u6388\u6743\u3002"},COMMIT_STATUS_MERGE_RELOAD_:{en_US:"The editor will reload to retrieve all the merged changes.",de_DE:"Der Editor wird neu geladen, um alle gemergten \xC4nderung abzufragen.",fr_FR:"L'\xE9diteur va recharger pour r\xE9cup\xE9rer toutes les modifications fusionn\xE9es.",ja_JP:"\u3053\u306E\u30A8\u30C7\u30A3\u30BF\u30FC\u306F\u30EA\u30ED\u30FC\u30C9\u3057\u3001\u7D50\u5408\u3055\u308C\u305F\u5909\u66F4\u5185\u5BB9\u3092\u3059\u3079\u3066\u53D6\u5F97\u3057\u307E\u3059\u3002",nl_NL:"De editor wordt opnieuw geladen om alle samengevoegde wijzigingen op te halen.",zh_CN:"\u7F16\u8F91\u5668\u5C06\u91CD\u65B0\u52A0\u8F7D\u4EE5\u68C0\u7D22\u6240\u6709\u5408\u5E76\u7684\u66F4\u6539\u3002"},COMMIT_STATUS_BRANCH_RELOAD_:{en_US:"The editor will reload the content of the file from the new branch.",de_DE:"Der Editor wird den Inhalt der Datei vom neuen Branch neu laden.",fr_FR:"L'\xE9diteur va recharger le contenu du fichier depuis la nouvelle branche.",ja_JP:"\u3053\u306E\u30A8\u30C7\u30A3\u30BF\u306F\u65B0\u3057\u3044\u30D6\u30E9\u30F3\u30C1\u304B\u3089\u30D5\u30A1\u30A4\u30EB\u306E\u30B3\u30F3\u30C6\u30F3\u30C4\u3092\u30EA\u30ED\u30FC\u30C9\u3057\u307E\u3059\u3002",nl_NL:"De editor laadt de inhoud van het bestand opnieuw vanuit de nieuwe vertakking.",zh_CN:"\u7F16\u8F91\u5668\u5C06\u4ECE\u65B0\u5206\u652F\u91CD\u65B0\u52A0\u8F7D\u6587\u4EF6\u5185\u5BB9\u3002"},COMMIT_SUCCESSFUL_PULL_FAILED_EXTENDED_:{en_US:"Commit successful on branch {$BRANCH_NAME}. {$LINE_BREAK}However, creating the pull request failed. You will need to do it manually.",de_DE:"Commit auf Branch {$BRANCH_NAME} erfolgreich. {$LINE_BREAK}Jedoch konnte kein Pull-Request erstellt werden. Sie m\xFCssen ihn manuell erstellen.",fr_FR:"Commit r\xE9ussi sur la branche {$BRANCH_NAME}. {$LINE_BREAK}Cependant, la cr\xE9ation du pull request a \xE9chou\xE9e. Vous devrez le faire manuellement.",ja_JP:"\u5206\u5C90{$BRANCH_NAME}\u4E0A\u3067\u6B63\u5E38\u306B\u30B3\u30DF\u30C3\u30C8\u3055\u308C\u307E\u3057\u305F\u3002{$LINE_BREAK}\u3057\u304B\u3057\u3001\u30D7\u30EB\u8981\u6C42\u306E\u4F5C\u6210\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002\u624B\u52D5\u3067\u884C\u3046\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002",nl_NL:"Vastleggen in de vertakking {$BRANCH_NAME} is voltooid. {$LINE_BREAK}Het maken van de pull-aanvraag is echter mislukt. U zult dit handmatig moeten doen.",zh_CN:"\u5728\u5206\u652F{$BRANCH_NAME}\u4E0A\u63D0\u4EA4\u6210\u529F\u3002{$LINE_BREAK}\u4F46\u662F\u521B\u5EFA\u5408\u540C\u8BF7\u6C42\u5931\u8D25\u3002\u4F60\u9700\u8981\u624B\u52A8\u64CD\u4F5C\u3002"},COMMIT_SUCCESSFUL_:{en_US:"Commit successful",de_DE:"Commit erfolgreich",fr_FR:"Commit r\xE9ussi",ja_JP:"\u6B63\u5E38\u306B\u30B3\u30DF\u30C3\u30C8\u3055\u308C\u307E\u3057\u305F",nl_NL:"Vastleggen voltooid",zh_CN:"\u63D0\u4EA4\u6210\u529F"},FAILED_TO_CREATE_FILE_ON_FORK_:{en_US:"Failed to create file on the forked repository.",de_DE:"Erstellung einer Datei im geforkten Repository fehlgeschlagen.",fr_FR:"\xC9chec de la cr\xE9ation du fichier sur le fork du d\xE9p\xF4t.",ja_JP:"\u30D5\u30A9\u30FC\u30AF\u3055\u308C\u305F\u30EA\u30DD\u30B8\u30C8\u30EA\u4E0A\u3067\u306E\u30D5\u30A1\u30A4\u30EB\u4F5C\u6210\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002",nl_NL:"Maken van het bestand in de vertakte opslagplaats is mislukt.",zh_CN:"\u65E0\u6CD5\u5728\u5206\u53C9\u5B58\u50A8\u5E93\u4E0A\u521B\u5EFA\u6587\u4EF6\u3002"},REPOSITORY_NOT_FOUND_:{en_US:"Repository not found",de_DE:"Repository nicht gefunden",fr_FR:"D\xE9p\xF4t introuvable",ja_JP:"\u30EA\u30DD\u30B8\u30C8\u30EA\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093",nl_NL:"Opslagplaats niet gevonden",zh_CN:"\u627E\u4E0D\u5230\u5B58\u50A8\u5E93"},MERGE_WITH_CONFLICTS_:{en_US:"Someone else has edited this file since you last opened it and there are conflicts.",de_DE:"Jemand hat diese Datei bearbeitet, nachdem Sie sie ge\xF6ffnet haben und es gibt Konflikte.",fr_FR:"Quelqu'un d'autre a \xE9dit\xE9 ce fichier depuis la derni\xE8re fois que vous l'avez ouvert et il y a des conflits.",ja_JP:"\u3042\u306A\u305F\u304C\u6700\u5F8C\u306B\u958B\u3044\u3066\u304B\u3089\u3001\u540D\u524D\u672A\u767B\u9332\u30E6\u30FC\u30B6\u30FC\u304C\u3053\u306E\u30D5\u30A1\u30A4\u30EB\u3092\u7DE8\u96C6\u3057\u3001\u7AF6\u5408\u304C\u3042\u308A\u307E\u3059\u3002",nl_NL:"Iemand anders heeft dit bestand bewerkt sinds u het voor het laatst opende, en er zijn conflicten.",zh_CN:"\u81EA\u4E0A\u6B21\u6253\u5F00\u6B64\u6587\u4EF6\u4EE5\u6765\uFF0C\u5176\u4ED6\u4EBA\u5DF2\u5BF9\u5176\u8FDB\u884C\u4E86\u7F16\u8F91\uFF0C\u5E76\u4E14\u5B58\u5728\u51B2\u7A81\u3002"},MERGE_CLEAN_:{en_US:"Someone else has edited this file since you last opened it.",de_DE:"Jemand hat diese Datei bearbeitet, nachdem Sie sie ge\xF6ffnet haben.",fr_FR:"Quelqu'un d'autre a \xE9dit\xE9 ce fichier depuis la derni\xE8re fois que vous l'avez ouvert.",ja_JP:"\u3042\u306A\u305F\u304C\u6700\u5F8C\u306B\u958B\u3044\u3066\u304B\u3089\u3001\u540D\u524D\u672A\u767B\u9332\u30E6\u30FC\u30B6\u30FC\u304C\u3053\u306E\u30D5\u30A1\u30A4\u30EB\u3092\u7DE8\u96C6\u3057\u307E\u3057\u305F\u3002",nl_NL:"Iemand anders heeft dit bestand bewerkt sinds u het voor het laatst opende.",zh_CN:"\u81EA\u4E0A\u6B21\u6253\u5F00\u6B64\u6587\u4EF6\u4EE5\u6765\uFF0C\u5176\u4ED6\u4EBA\u5DF2\u5BF9\u5176\u8FDB\u884C\u4E86\u7F16\u8F91\u3002"},CLICK_HERE_THEN_CHOOSE_:{en_US:"{$ANCHOR_START}Click here{$ANCHOR_END} to see the changes. Afterwards, choose one of the following",de_DE:"Um die \xC4nderungen zu sehen, {$ANCHOR_START}hier klicken{$ANCHOR_END}. W\xE4hlen Sie anschlie\xDFend eine der folgenden",fr_FR:"{$ANCHOR_START}Cliquez ici{$ANCHOR_END} pour voir les diff\xE9rences. Ensuite, choisissez l'une des options suivantes",ja_JP:"{$ANCHOR_START}\u3053\u3053\u3092\u30AF\u30EA\u30C3\u30AF\u3057\u3066{$ANCHOR_END}\u3001\u5909\u66F4\u3092\u78BA\u8A8D\u3057\u307E\u3059\u3002\u305D\u306E\u5F8C\u3001\u6B21\u306E\u3044\u305A\u308C\u304B\u3092\u9078\u629E\u3057\u307E\u3059",nl_NL:"{$ANCHOR_START}Klik hier{$ANCHOR_END} om de wijzigingen weer te geven. Kies daarna een van de volgende opties",zh_CN:"{$ANCHOR_START}\u5355\u51FB\u6B64\u5904{$ANCHOR_END}\u67E5\u770B\u66F4\u6539\u3002\u7136\u540E\uFF0C\u9009\u62E9\u4E0B\u5217\u9009\u9879\u4E4B\u4E00"},MERGE_AND_COMMIT_TITLE_:{en_US:"All changes will be merged into one file and committed afterwards.",de_DE:"Alle \xC4nderungen werden in eine Datei gemerged und anschlie\xDFend committet.",fr_FR:"Toutes les modifications seront fusionn\xE9es en un seul fichier et dans un commit par la suite.",ja_JP:"\u3059\u3079\u3066\u306E\u5909\u66F4\u304C\u30011\u3064\u306E\u30D5\u30A1\u30A4\u30EB\u306B\u30DE\u30FC\u30B8\u3055\u308C\u3001\u305D\u306E\u5F8C\u3001\u30B3\u30DF\u30C3\u30C8\u3055\u308C\u307E\u3059\u3002",nl_NL:"Alle wijzigingen worden samengevoegd tot \xE9\xE9n bestand en na afloop vastgelegd.",zh_CN:"\u6240\u6709\u66F4\u6539\u90FD\u5C06\u5408\u5E76\u5230\u4E00\u4E2A\u6587\u4EF6\u4E2D\uFF0C\u7136\u540E\u63D0\u4EA4\u3002"},MERGE_AND_COMMIT_:{en_US:"Merge and commit",de_DE:"Mergen und committen",fr_FR:"Fusion et commit",ja_JP:"\u30DE\u30FC\u30B8\u304A\u3088\u3073\u30B3\u30DF\u30C3\u30C8",nl_NL:"Samenvoegen en vastleggen",zh_CN:"\u5408\u5E76\u5E76\u63D0\u4EA4"},COMMIT_ON_NEW_BRANCH_TITLE_:{en_US:"A new branch will be created and this document will be committed on that branch.",de_DE:"Ein neuer Branch wird erstellt und dieses Dokument wird auf diesen Branch committet.",fr_FR:"Une nouvelle branche sera cr\xE9\xE9e et un commit avec ce document sera fait sur cette branche.",ja_JP:"\u65B0\u3057\u3044\u5206\u5C90\u304C\u4F5C\u6210\u3055\u308C\u3001\u3053\u306E\u30C9\u30AD\u30E5\u30E1\u30F3\u30C8\u306F\u3001\u305D\u306E\u5206\u5C90\u4E0A\u3067\u30B3\u30DF\u30C3\u30C8\u3055\u308C\u307E\u3059\u3002",nl_NL:"Er wordt een nieuwe vertakking gemaakt en dit document wordt vastgelegd in die vertakking.",zh_CN:"\u5C06\u521B\u5EFA\u4E00\u4E2A\u65B0\u5206\u652F\uFF0C\u5E76\u5728\u8BE5\u5206\u652F\u4E0A\u63D0\u4EA4\u6B64\u6587\u6863\u3002"},GIT_OVERWRITE_CHANGES_TITLE_:{en_US:"Only your changes will be committed, discarding any other changes.",de_DE:"Nur Ihre \xC4nderungen werden committet, alle anderen \xC4nderungen werden verworfen.",fr_FR:"Un commit avec vos modifications seulement sera effectu\xE9, les autres seront rejet\xE9es.",ja_JP:"\u3042\u306A\u305F\u306E\u5909\u66F4\u306E\u307F\u304C\u30B3\u30DF\u30C3\u30C8\u3055\u308C\u3001\u4ED6\u306E\u5909\u66F4\u306F\u7834\u68C4\u3055\u308C\u307E\u3059\u3002",nl_NL:"Alleen uw wijzigingen worden vastgelegd, alle andere wijzigingen worden verwijderd.",zh_CN:"\u5C06\u4EC5\u63D0\u4EA4\u60A8\u7684\u66F4\u6539\uFF0C\u4ECE\u800C\u653E\u5F03\u4EFB\u4F55\u5176\u4ED6\u66F4\u6539\u3002"},GIT_OVERWRITE_CHANGES_:{en_US:"Commit only my changes",de_DE:"Nur meine \xC4nderungen committen",fr_FR:"Effectuer un commit avec mes modifications seulement",ja_JP:"\u79C1\u306E\u5909\u66F4\u306E\u307F\u3092\u30B3\u30DF\u30C3\u30C8\u3059\u308B",nl_NL:"Alleen mijn wijzigingen vastleggen",zh_CN:"\u4EC5\u63D0\u4EA4\u6211\u7684\u66F4\u6539"},COMMIT_MAY_HAVE_CONFLICTS_:{en_US:"The commit may have conflicts.",de_DE:"Der Commit k\xF6nnte Konflikte haben.",fr_FR:"Le commit peut avoir des conflits.",ja_JP:"\u30B3\u30DF\u30C3\u30C8\u304C\u7AF6\u5408\u3059\u308B\u53EF\u80FD\u6027\u304C\u3042\u308A\u307E\u3059\u3002",nl_NL:"Er zijn mogelijk conflicten voor het vastleggen.",zh_CN:"\u63D0\u4EA4\u53EF\u80FD\u6709\u51B2\u7A81\u3002"},MERGE_DIFFERENT_BRANCH_:{en_US:"There is a previous version of this file that is different than the version you are trying to commit.",de_DE:"Es ist eine andere Version dieser Datei vorhanden, die sich von der Version unterscheidet, die Sie committen m\xF6chten.",fr_FR:"Il y a une pr\xE9c\xE9dente version de ce fichier diff\xE9rente de la version que vous essayez de livrer.",ja_JP:"\u3053\u306E\u30D5\u30A1\u30A4\u30EB\u306B\u306F\u3001\u3042\u306A\u305F\u304C\u30B3\u30DF\u30C3\u30C8\u3092\u8A66\u307F\u3066\u3044\u308B\u30D0\u30FC\u30B8\u30E7\u30F3\u3068\u306F\u7570\u306A\u308B\u4EE5\u524D\u306E\u30D0\u30FC\u30B8\u30E7\u30F3\u304C\u3042\u308A\u307E\u3059\u3002",nl_NL:"Er is een eerdere versie van dit bestand die afwijkt van de versie die u probeert door te voeren.",zh_CN:"\u6B64\u6587\u4EF6\u7684\u4EE5\u524D\u7248\u672C\u4E0E\u60A8\u5C1D\u8BD5\u63D0\u4EA4\u7684\u7248\u672C\u4E0D\u540C\u3002"},DIFF_LATEST_VERSION_:{en_US:"Latest version",de_DE:"Letzte Version",fr_FR:"Derni\xE8re version",ja_JP:"\u6700\u65B0\u306E\u30D0\u30FC\u30B8\u30E7\u30F3",nl_NL:"Nieuwste versie",zh_CN:"\u6700\u65B0\u7248\u672C"},CLONING_FIRST_TIME_:{en_US:"Cloning repository. The first time might take a while.",de_DE:"Klone Repository. Das erste mal k\xF6nnte eine Weile dauern.",fr_FR:"Clonage du d\xE9p\xF4t. La premi\xE8re fois peut prendre un certain temps.",ja_JP:"\u30EA\u30DD\u30B8\u30C8\u30EA\u3092\u8907\u88FD\u3057\u3066\u3044\u307E\u3059\u3002\u521D\u3081\u3066\u306E\u5834\u5408\u3001\u5C11\u3057\u6642\u9593\u304C\u304B\u304B\u308B\u3053\u3068\u304C\u3042\u308A\u307E\u3059\u3002",nl_NL:"Opslagplaats klonen. De eerste keer kan dit even duren.",zh_CN:"\u514B\u9686\u5B58\u50A8\u5E93\u3002\u7B2C\u4E00\u6B21\u53EF\u80FD\u9700\u8981\u4E00\u6BB5\u65F6\u95F4\u3002"},EDIT_GIT_REPO_AND_BRANCH_:{en_US:"Edit Git repository and branch",de_DE:"Git-Repository und Branch bearbeiten",fr_FR:"\xC9diter le d\xE9p\xF4t Git et les branches",ja_JP:"Git\u30EA\u30DD\u30B8\u30C8\u30EA\u304A\u3088\u3073\u5206\u5C90\u3092\u7DE8\u96C6\u3059\u308B",nl_NL:"Git-opslagplaats en vertakking bewerken",zh_CN:"\u7F16\u8F91Git\u5B58\u50A8\u5E93\u548C\u5206\u652F"},DISCONNECT_:{en_US:"Disconnect",de_DE:"Trennen",fr_FR:"D\xE9connexion",ja_JP:"\u5207\u65AD",nl_NL:"Verbinding verbreken",zh_CN:"\u65AD\u5F00\u8FDE\u63A5"},GIT_REPOSITORY_:{en_US:"Git repository",de_DE:"Git-Repository",fr_FR:"D\xE9p\xF4t Git",ja_JP:"Git\u30EA\u30DD\u30B8\u30C8\u30EA",nl_NL:"Git-opslagplaats",zh_CN:"Git\u5B58\u50A8\u5E93"},GIT_ENTER_REPO_URL_:{en_US:"Enter the Git repository URL",de_DE:"Git-Repository-URL eingeben",fr_FR:"Entrez l'URL du d\xE9p\xF4t Git",ja_JP:"Git\u30EA\u30DD\u30B8\u30C8\u30EAURL\u3092\u5165\u529B\u3059\u308B",nl_NL:"De URL voor de Git-opslagplaats invoeren",zh_CN:"\u8F93\u5165Git\u5B58\u50A8\u5E93URL"},GIT_ENTER_OR_CHOOSE_REPO_URL_:{en_US:"Enter or choose the Git repository URL",de_DE:"Git-Repository-URL eingeben oder ausw\xE4hlen",fr_FR:"Entrer ou choisir l'URL du d\xE9p\xF4t Git",ja_JP:"Git\u30EA\u30DD\u30B8\u30C8\u30EAURL\u3092\u5165\u529B\u307E\u305F\u306F\u9078\u629E\u3059\u308B",nl_NL:"De URL voor de Git-opslagplaats invoeren of kiezen",zh_CN:"\u8F93\u5165\u6216\u9009\u62E9Git\u5B58\u50A8\u5E93URL"},NO_REPOSITORY_CHOSEN_:{en_US:"No repository chosen",de_DE:"Kein Repository ausgew\xE4hlt",fr_FR:"Aucun d\xE9p\xF4t choisi",ja_JP:"\u30EA\u30DD\u30B8\u30C8\u30EA\u304C\u9078\u629E\u3055\u308C\u3066\u3044\u307E\u305B\u3093",nl_NL:"Geen opslagplaats gekozen",zh_CN:"\u672A\u9009\u62E9\u5B58\u50A8\u5E93"},CONNECT_:{en_US:"Connect",de_DE:"Verbinden",fr_FR:"Connexion",ja_JP:"\u63A5\u7D9A",nl_NL:"Verbind",zh_CN:"\u8FDE\u63A5"},LANGUAGE_:{en_US:"Language",de_DE:"Sprache",fr_FR:"Langue",ja_JP:"\u8A00\u8A9E",nl_NL:"Taal",zh_CN:"\u8BED\u8A00"},FAILED_TO_OPEN_REPO_:{en_US:"Failed to open repository",de_DE:"\xD6ffnen des Repositories fehlgeschlagen",fr_FR:"\xC9chec de l'ouverture du d\xE9p\xF4t",ja_JP:"\u30EA\u30DD\u30B8\u30C8\u30EA\u306E\u30AA\u30FC\u30D7\u30F3\u306B\u5931\u6557\u3057\u307E\u3057\u305F",nl_NL:"Openen van de opslagplaats is mislukt",zh_CN:"\u65E0\u6CD5\u6253\u5F00\u5B58\u50A8\u5E93"},FAILED_TO_GET_USER_INFO_:{en_US:"Failed to retrieve user information.",de_DE:"Abrufen der Benutzerinformationen fehlgeschlagen.",fr_FR:"\xC9chec de r\xE9cup\xE9ration des informations de l'utilisateur.",ja_JP:"\u30E6\u30FC\u30B6\u30FC\u60C5\u5831\u306E\u53D6\u5F97\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002",nl_NL:"Ophalen van gebruikersinformatie is mislukt.",zh_CN:"\u68C0\u7D22\u7528\u6237\u4FE1\u606F\u5931\u8D25\u3002"},FAILED_TO_GET_USER_REPOS_:{en_US:"Failed to retrieve user repositories.",de_DE:"Abrufen der Benutzer-Repositories fehlgeschlagen.",fr_FR:"\xC9chec de r\xE9cup\xE9ration des d\xE9p\xF4t utilisateur.",ja_JP:"\u30E6\u30FC\u30B6\u30FC\u30EA\u30DD\u30B8\u30C8\u30EA\u306E\u53D6\u5F97\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002",nl_NL:"Ophalen van opslagplaatsen van de gebruiker is mislukt.",zh_CN:"\u68C0\u7D22\u7528\u6237\u5B58\u50A8\u5E93\u5931\u8D25\u3002"},FAILED_TO_GET_USER_TEAMS_:{en_US:"Failed to retrieve the team names that the user is assigned to.",de_DE:"Konnte die Team-Namen nicht ermitteln, denen der Benutzer zugewiesen ist.",fr_FR:"Impossible de r\xE9cup\xE9rer les noms des \xE9quipes auxquelles l'utilisateur est affect\xE9.",ja_JP:"\u30E6\u30FC\u30B6\u30FC\u304C\u5272\u308A\u5F53\u3066\u3089\u308C\u3066\u3044\u308B\u30C1\u30FC\u30E0\u540D\u3092\u53D6\u5F97\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002",nl_NL:"Ophalen van de teamnamen waaraan de gebruiker is toegewezen, is mislukt.",zh_CN:"\u65E0\u6CD5\u83B7\u53D6\u7528\u6237\u6307\u5B9A\u7684\u56E2\u961F\u4FE1\u606F."},FAILED_TO_GET_BRANCHES_:{en_US:"Failed to retrieve branches.",de_DE:"Abfrage der Branches fehlgeschlagen.",fr_FR:"\xC9chec de r\xE9cup\xE9ration des branches.",ja_JP:"\u5206\u5C90\u306E\u53D6\u5F97\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002",nl_NL:"Ophalen van vertakkingen is mislukt.",zh_CN:"\u68C0\u7D22\u5206\u652F\u5931\u8D25\u3002"},COMMIT_TO_NEW_BRANCH_ERROR_:{en_US:"Error while committing to new branch.",de_DE:"Fehler beim Committen auf einen neuen Branch.",fr_FR:"Erreur lors du commit sur la nouvelle branche.",ja_JP:"\u65B0\u3057\u3044\u5206\u5C90\u3092\u30B3\u30DF\u30C3\u30C8\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F\u3002",nl_NL:"Fout tijdens vastleggen in nieuwe vertakking.",zh_CN:"\u63D0\u4EA4\u5230\u65B0\u5206\u652F\u65F6\u51FA\u9519\u3002"},INVALID_DESTINATION_BRANCH_:{en_US:"Invalid destination branch",de_DE:"Ung\xFCltiger Ziel-Branch",fr_FR:"Branche de destination invalide",ja_JP:"\u7121\u52B9\u306A\u540C\u671F\u5148\u5206\u5C90\u3067\u3059",nl_NL:"Ongeldige doelvertakking",zh_CN:"\u65E0\u6548\u7684\u76EE\u6807\u5206\u652F"},PULL_REQUEST_FAILED_:{en_US:"Failed to create pull request.",de_DE:"Erstellung des Pull-Requests fehlgeschlagen.",fr_FR:"\xC9chec de cr\xE9ation du pull request.",ja_JP:"\u30D7\u30EB\u8981\u6C42\u306E\u4F5C\u6210\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002",nl_NL:"Maken van pull-aanvraag is mislukt.",zh_CN:"\u65E0\u6CD5\u521B\u5EFA\u5408\u5E76\u8BF7\u6C42\u3002"},GIT_CONNECT_DIALOG_TITLE_:{en_US:"Git Connect",de_DE:"Git Verbinden",fr_FR:"Connexion Git",ja_JP:"Git\u63A5\u7D9A",nl_NL:"Git Verbinden",zh_CN:"Git\u8FDE\u63A5"},REPO_NEED_AUTH_:{en_US:"You must connect to access {$REPO}",de_DE:"Sie m\xFCssen sich verbinden, um auf {$REPO} zuzugreifen",fr_FR:"Vous devez vous connecter pour acc\xE9der \xE0 {$REPO}",ja_JP:"{$REPO}\u306B\u30A2\u30AF\u30BB\u30B9\u3059\u308B\u305F\u3081\u306B\u306F\u63A5\u7D9A\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059",nl_NL:"U moet verbinden om toegang te krijgen tot {$REPO}",zh_CN:"\u60A8\u5FC5\u987B\u8FDE\u63A5\u624D\u80FD\u8BBF\u95EE{$REPO}"},CONNECT_TO_ACCESS_REPOSITORIES_:{en_US:"Connect to access Git repositories.",de_DE:"Verbinden Sie sich, um auf Git-Repositories zuzugreifen.",fr_FR:"Se connecter pour acc\xE9der aux d\xE9p\xF4ts Git.",ja_JP:"Git\u30EA\u30DD\u30B8\u30C8\u30EA\u306B\u30A2\u30AF\u30BB\u30B9\u3059\u308B\u305F\u3081\u306B\u63A5\u7D9A\u3057\u307E\u3059\u3002",nl_NL:"Verbind om toegang te krijgen tot Git-repositories.",zh_CN:"\u8FDE\u63A5\u4EE5\u8BBF\u95EEGit\u4ED3\u5E93\u3002"},CONNECT_WITH_TOOLTIP_:{en_US:"Click to connect using your {$WITH} account",de_DE:"Klicken Sie, um sich mit Ihrem {$WITH}-Konto zu verbinden",fr_FR:"Cliquez pour vous connecter en utilisant votre compte {$WITH}.",ja_JP:"{$WITH}\u30A2\u30AB\u30A6\u30F3\u30C8\u3092\u4F7F\u7528\u3057\u3066\u63A5\u7D9A\u3059\u308B\u306B\u306F\u30AF\u30EA\u30C3\u30AF\u3057\u307E\u3059",nl_NL:"Klik om te verbinden met uw {$WITH}-account",zh_CN:"\u70B9\u51FB\u4F7F\u7528\u60A8\u7684{$WITH}\u8D26\u6237\u8FDE\u63A5"},CONNECT_WITH_:{en_US:"Connect with {$WITH}",de_DE:"Verbinden mit {$WITH}",fr_FR:"Se connecter avec {$WITH}",ja_JP:"{$WITH}\u3067\u63A5\u7D9A",nl_NL:"Verbinden met {$WITH}",zh_CN:"\u7528{$WITH}\u8FDE\u63A5"},CONNECT_USER_PASS_TOOLTIP_:{en_US:"Click to connect using the username and password for your Git repository.",de_DE:"Klicken Sie, um sich mit dem Benutzernamen und Passwort f\xFCr Ihr Git-Repository zu verbinden.",fr_FR:"Cliquez pour vous connecter en utilisant le nom d'utilisateur et le mot de passe de votre d\xE9p\xF4t Git.",ja_JP:"Git\u30EA\u30DD\u30B8\u30C8\u30EA\u306E\u30E6\u30FC\u30B6\u30FC\u540D\u3068\u30D1\u30B9\u30EF\u30FC\u30C9\u3092\u4F7F\u7528\u3057\u3066\u63A5\u7D9A\u3059\u308B\u306B\u306F\u30AF\u30EA\u30C3\u30AF\u3057\u307E\u3059\u3002",nl_NL:"Klik om te verbinden met de gebruikersnaam en het wachtwoord voor uw Git-repository.",zh_CN:"\u70B9\u51FB\u4F7F\u7528\u60A8\u7684Git\u4ED3\u5E93\u7684\u7528\u6237\u540D\u548C\u5BC6\u7801\u8FDE\u63A5\u3002"},CONNECT_USER_PASS_:{en_US:"Connect with username and password",de_DE:"Mit Benutzername und Passwort verbinden",fr_FR:"Se connecter avec un nom d'utilisateur et un mot de passe",ja_JP:"\u30E6\u30FC\u30B6\u30FC\u540D\u3068\u30D1\u30B9\u30EF\u30FC\u30C9\u3067\u63A5\u7D9A",nl_NL:"Verbinden met gebruikersnaam en wachtwoord",zh_CN:"\u7528\u7528\u6237\u540D\u548C\u5BC6\u7801\u8FDE\u63A5"},USERNAME_:{en_US:"Username",de_DE:"Benutzername",fr_FR:"Nom d'utilisateur",ja_JP:"\u30E6\u30FC\u30B6\u30FC\u540D",nl_NL:"Gebruikersnaam",zh_CN:"\u7528\u6237\u540D"},PASSWORD_:{en_US:"Password",de_DE:"Passwort",fr_FR:"Mot de passe",ja_JP:"\u30D1\u30B9\u30EF\u30FC\u30C9",nl_NL:"Wachtwoord",zh_CN:"\u5BC6\u7801"},EMAIL_TO_SIGN_COMMITS_:{en_US:"The email is used to sign the commits.",de_DE:"Die E-Mail-Adresse wird verwendet, um Commits zu signieren.",fr_FR:"L'e-mail est utilis\xE9 pour signer les commits.",ja_JP:"\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\u306F\u3001\u30B3\u30DF\u30C3\u30C8\u306B\u30B5\u30A4\u30F3\u3059\u308B\u305F\u3081\u306B\u4F7F\u7528\u3055\u308C\u307E\u3059\u3002",nl_NL:"Het e-mailadres dat is gebruikt om de vastleggingen te ondertekenen.",zh_CN:"\u7535\u5B50\u90AE\u4EF6\u7528\u4E8E\u7B7E\u7F72\u63D0\u4EA4\u3002"},EMAIL_:{en_US:"Email",de_DE:"E-Mail",fr_FR:"E-mail",ja_JP:"\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9",nl_NL:"E-mail",zh_CN:"\u7535\u5B50\u90AE\u4EF6"},OPTIONAL_:{en_US:"Optional",de_DE:"Fakultativ",fr_FR:"Facultatif",ja_JP:"\u30AA\u30D7\u30B7\u30E7\u30F3",nl_NL:"Optioneel",zh_CN:"\u53EF\u9009"},GH_PLUGIN_BAD_CONFIG_:{en_US:"The Git plugin is not configured properly. If you are the administrator of the application make sure the Client ID and the Client Secret are properly set in the {$ANCHOR_START}Administration Page{$ANCHOR_END}.",de_DE:"Das Git-Plugin wurde nicht korrekt konfiguriert. Wenn Sie der Administrator der Anwendung sind, pr\xFCfen Sie, ob Client-ID und Client-Secret auf der {$ANCHOR_START}Administratorseite{$ANCHOR_END} korrekt sind.",fr_FR:"Le plugin Git n'est pas correctement configur\xE9. Si vous \xEAtes l'administrateur de l'application assurez-vous que l'ID Client et que le Secret Client sont correctement d\xE9finis dans la {$ANCHOR_START}Page d'administration{$ANCHOR_END}.",ja_JP:"Git\u30D7\u30E9\u30B0\u30A4\u30F3\u304C\u3001\u9069\u5207\u306B\u69CB\u6210\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002\u3042\u306A\u305F\u304C\u30A2\u30D7\u30EA\u30B1\u30FC\u30B7\u30E7\u30F3\u306E\u7BA1\u7406\u8005\u3067\u3042\u308B\u5834\u5408\u3001\u30AF\u30E9\u30A4\u30A2\u30F3\u30C8ID\u304A\u3088\u3073\u30AF\u30E9\u30A4\u30A2\u30F3\u30C8\u30B7\u30FC\u30AF\u30EC\u30C3\u30C8\u8A2D\u5B9A\u304C\u3001{$ANCHOR_START}\u7BA1\u7406\u30DA\u30FC\u30B8{$ANCHOR_END}\u3067\u9069\u5207\u306B\u8A2D\u5B9A\u3055\u308C\u3066\u3044\u308B\u3053\u3068\u3092\u78BA\u8A8D\u3057\u3066\u304F\u3060\u3055\u3044\u3002",nl_NL:"De Git-plug-in is niet correct geconfigureerd. Als u de beheerder van het programma bent, controleert u of de client-ID en het clientgeheim correct zijn ingesteld op de {$ANCHOR_START}beheerpagina{$ANCHOR_END}.",zh_CN:"Git\u63D2\u4EF6\u914D\u7F6E\u4E0D\u6B63\u786E\u3002\u5982\u679C\u60A8\u662F\u5E94\u7528\u7A0B\u5E8F\u7684\u7BA1\u7406\u5458\uFF0C\u8BF7\u786E\u4FDD\u5728{$ANCHOR_START}\u7BA1\u7406\u9875{$ANCHOR_END}\u4E2D\u6B63\u786E\u8BBE\u7F6E\u4E86\u5BA2\u6237\u7AEFID\u548C\u5BA2\u6237\u7AEF\u5BC6\u94A5\u3002"},CONNECT_WITH_DIFFERENT_USER_:{en_US:"Connect as a different user",de_DE:"Als anderer Benutzer verbinden",fr_FR:"Se connecter en tant qu'utilisateur diff\xE9rent",ja_JP:"\u5225\u306E\u30E6\u30FC\u30B6\u30FC\u3068\u3057\u3066\u63A5\u7D9A",nl_NL:"Verbinden als een andere gebruiker",zh_CN:"\u4F5C\u4E3A\u4E0D\u540C\u7684\u7528\u6237\u8FDE\u63A5"},AUTH_FAILED_:{en_US:"Authentication failed",de_DE:"Anmeldung fehlgeschlagen",fr_FR:"Authentification \xE9chou\xE9e",ja_JP:"\u8A8D\u8A3C\u5931\u6557",nl_NL:"Verificatie mislukt",zh_CN:"\u8EAB\u4EFD\u9A8C\u8BC1\u5931\u8D25"},ANONYMOUS_:{en_US:"Anonymous",de_DE:"Anonym",fr_FR:"Anonyme",ja_JP:"\u533F\u540D",nl_NL:"Anoniem",zh_CN:"\u533F\u540D"},CONNECTED_AS_:{en_US:"Connected as {$USER_NAME}",de_DE:"Verbunden als {$USER_NAME}",fr_FR:"Connect\xE9 en tant que {$USER_NAME}",ja_JP:"{$USER_NAME}\u3068\u3057\u3066\u63A5\u7D9A",nl_NL:"Verbonden als {$USER_NAME}",zh_CN:"\u4F5C\u4E3A{$USER_NAME}\u8FDE\u63A5"},VIEW_ON_:{en_US:"View on {$SITE}",de_DE:"Zeige auf {$SITE}",fr_FR:"Voir sur {$SITE}",ja_JP:"{$SITE}\u3067\u8868\u793A\u3059\u308B",nl_NL:"Weergeven op {$SITE}",zh_CN:"\u5728{$SITE}\u4E0A\u67E5\u770B"},VIEW_ON_DESCRIPTION_:{en_US:"View the current document on {$SITE}",de_DE:"Zeige Dokument auf {$SITE}",fr_FR:"Voir le document actuel sur {$SITE}",ja_JP:"\u73FE\u5728\u306E\u30C9\u30AD\u30E5\u30E1\u30F3\u30C8\u3092{$ SITE}\u3067\u8868\u793A\u3059\u308B",nl_NL:"Het huidige document weergeven op {$SITE}",zh_CN:"\u5728{$SITE}\u4E0A\u67E5\u770B\u5F53\u524D\u6587\u6863"},READ_ONLY_:{en_US:"The document is in read-only mode because you do not have write permissions for this file.",de_DE:"Das Dokument ist schreibgesch\xFCtzt, weil Sie keine Schreibrechte f\xFCr diese Datei besitzen.",fr_FR:"Le document est en mode lecture seule car vous n'avez pas les droits d'\xE9criture pour ce fichier.",ja_JP:"\u3053\u306E\u30D5\u30A1\u30A4\u30EB\u306B\u5BFE\u3059\u308B\u66F8\u304D\u8FBC\u307F\u6A29\u9650\u304C\u306A\u3044\u305F\u3081\u3001\u30C9\u30AD\u30E5\u30E1\u30F3\u30C8\u306F\u8AAD\u307F\u53D6\u308A\u5C02\u7528\u30E2\u30FC\u30C9\u306B\u306A\u3063\u3066\u3044\u307E\u3059\u3002",nl_NL:"Het document bevindt zich in de modus alleen-lezen omdat u geen schrijfrechten hebt voor dit bestand.",zh_CN:"\u8BE5\u6587\u6863\u662F\u53EA\u8BFB\u6587\u6863\u56E0\u4E3A\u60A8\u6CA1\u6709\u4FEE\u6539\u6B64\u6587\u6863\u7684\u6743\u9650."},DOCUMENT_INFORMATION_:{en_US:"Document Information",de_DE:"Dokumentinformation",fr_FR:"Informations du Document",ja_JP:"\u30C9\u30AD\u30E5\u30E1\u30F3\u30C8\u60C5\u5831",nl_NL:"Documentinformatie",zh_CN:"\u6587\u4EF6\u4FE1\u606F"},REPOSITORY_:{en_US:"Repository",de_DE:"Ablage",fr_FR:"D\xE9p\xF4t",ja_JP:"\u30EC\u30DD\u30B8\u30C8\u30EA",nl_NL:"Opslagplaats",zh_CN:"\u5B58\u50A8\u5E93"},PATH_:{en_US:"Path",de_DE:"Pfad",fr_FR:"Chemin",ja_JP:"\u30D1\u30B9",nl_NL:"Pad",zh_CN:"\u8DEF\u5F84"},COULD_NOT_OPEN_FILE_REPO_ACCESS_:{en_US:"Could not open the file. Make sure the repository owner gave you access.",de_DE:"Konnte Datei nicht \xF6ffnen. Pr\xFCfen Sie, ob der Besitzer des Repositories Ihnen die Zugangsberechtigungen erteilt hat.",fr_FR:"Impossible d'ouvrir le fichier. Assurez-vous que le propri\xE9taire du d\xE9p\xF4t vous en a donn\xE9 l'acc\xE8s.",ja_JP:"\u30D5\u30A1\u30A4\u30EB\u3092\u958B\u3051\u307E\u305B\u3093\u3067\u3057\u305F\u3002\u30EA\u30DD\u30B8\u30C8\u30EA\u6240\u6709\u8005\u304C\u3042\u306A\u305F\u306B\u30A2\u30AF\u30BB\u30B9\u3092\u8A31\u53EF\u3057\u3066\u3044\u308B\u3053\u3068\u3092\u78BA\u8A8D\u3057\u3066\u304F\u3060\u3055\u3044\u3002",nl_NL:"Kan het bestand niet openen. Controleer of de eigenaar van de opslagplaats u toegang heeft gegeven.",zh_CN:"\u65E0\u6CD5\u6253\u5F00\u6587\u4EF6\u3002\u786E\u4FDD\u5B58\u50A8\u5E93\u6240\u6709\u8005\u6388\u4E88\u60A8\u8BBF\u95EE\u6743\u9650\u3002"},GIT_ERROR_:{en_US:"Git error.",de_DE:"Git-Fehler.",fr_FR:"Erreur Git.",ja_JP:"Git\u30A8\u30E9\u30FC\u3002",nl_NL:"Git-fout.",zh_CN:"Git\u9519\u8BEF\u3002"}};sync.Translation.addTranslations(e)})();var V="::usr.name",Z="::usr.email",J={CLEAN:"CLEAN",IDENTICAL:"IDENTICAL",WITH_CONFLICTS:"WITH_CONFLICTS"},be={OK:"OK",MERGE:"MERGE",FAIL:"FAIL"},re=!0,Ie=!0,Ae=!1,O,A=tr(msgs.COMMIT_STATUS_TITLE_);function Ee(e){var t,n,i,o,r="";if(e.indexOf("github://getFileList")===0){if(t=e.match(/^github:\/\/getFileList\/([^/]+)\/([^/]+)\/(.*)$/),!t)return;n=decodeURIComponent(t[1]),i=decodeURIComponent(t[2]),o=t[3]}else if(e.indexOf("github://getFileContent")===0){if(t=e.match(/github:\/\/getFileContent\/([^/]+)\/([^/]+)\/*([^/]*)\/*(.*)/),!t)return;var a=t[1],s=t[2];n="https://github.com/"+a+"/"+s,i=decodeURIComponent(t[3]),o=t[4],r="gh"}else if(e.match(/^https?:\/\/(?:www\.)?github\.com/)){if(t=e.match(/^https?:\/\/(?:www\.)?github.com\/([^/]+)\/([^/]+)\/*(?:blob|tree|edit)\/*([^/]*)\/*(.*)/),!t)return;n="https://github.com/"+t[1]+"/"+t[2],i=t[3],o=t[4],r="gh"}else if(e.match(/^https?:\/\/raw.githubusercontent.com/)){if(t=e.match(/^https?:\/\/raw.githubusercontent.com\/([^/]+)\/([^/]+)\/*([^/]*)\/*(.*)/),!t)return;n="https://github.com/"+t[1]+"/"+t[2],i=t[3],o=t[4],r="gh"}else if(e.match(/^git([^:]*):\/\/.*/))return e;return"git"+r+"://"+encodeURIComponent(n)+"/"+encodeURIComponent(i)+"/"+o}function Ce(e){return e.match(/git[^:]*:\/\//)||e.indexOf("github://")===0?!0:e.match(/^https?:\/\/.*/)?e.indexOf("github.com")!==-1||e.indexOf("raw.githubusercontent.com")!==-1:!1}function Ne(e,t){var n=O.repositoryUri,i=O.filePath.split("/").map(encodeURIComponent).join("/"),o=e.documentCommit,r="git"+j(t);return r+"://"+encodeURIComponent(n)+"/"+encodeURIComponent(o)+"/"+i}function U(e,t,n){t(e===401||e===403?{status:401,message:tr(msgs.NOT_AUTHORIZED_TO_ACCESS_REPO_)}:e===404?{status:404,message:tr(msgs.REQUESTED_FILE_NOT_FOUND_)}:{status:e,message:n||tr(msgs.ERROR_)})}function we(e){var t=E.USERPASS;switch(e){case"gh":t=E.GITHUB;break;case"bb":t=E.BITBUCKET;break;case"bbsv":t=E.BITBUCKET_SERVER;break;case"gl":t=E.GITLAB;break;case"gle":t=E.GITLAB_E;break}return t}function Oe(e){switch(e){case E.USERPASS:return"Git";case E.GITHUB:return"GitHub";case E.BITBUCKET:return"Bitbucket";case E.BITBUCKET_SERVER:return"Bitbucket Server";case E.GITLAB:case E.GITLAB_E:return"GitLab"}}function H(e){switch(e){case E.GITHUB:return"gh.ac";case E.BITBUCKET:return"bb.ac";case E.BITBUCKET_SERVER:return"bbsv.ac";case E.GITLAB:return"gl.ac";case E.GITLAB_E:return"gle.ac";case E.USERPASS:return"up.ac"}}function _e(e){var t=e.lastIndexOf("#");t!==-1&&(e=e.substring(0,t));var n=new goog.Uri(e),i=n.getPath(),o=i.split("/");o[0]===""&&(o=o.slice(1));var r,a,s,u;if(e.match(/git[^:]*:\/\//)){var h=e.match(/^git[^:]*:\/\/([^/]+)\/([^/]+)\/(.*)/);return r=decodeURIComponent(h[1]),a=r.match(/^(?:https?:\/\/[^/]+\/([^/]+)\/([^/]+))?/),s=decodeURIComponent(h[2]),u=h[3].split("/").map(decodeURIComponent).join("/"),{user:a[1],repo:a[2],branch:s,filePath:u,repositoryUri:r}}else if(e.indexOf("github://getFileList")===0){a=decodeURIComponent(o[0]).match(/\/([^/]+)\/([^/]+)\/?$/);var _=e.match(/github:\/\/getFileList\/([^/]+)\/([^/]+)\/(.+)/);return r=decodeURIComponent(_[1]),s=decodeURIComponent(_[2]),u=_[3].split("/").map(decodeURIComponent).join("/"),{user:a[1],repo:a[2],branch:s,filePath:u,repositoryUri:r}}else return{user:o[0],repo:o[1],branch:decodeURIComponent(o[2]),filePath:o.slice(3).map(decodeURIComponent).join("/"),repositoryUri:"https://github.com/"+o[0]+"/"+o[1]}}function Y(e){switch(e){case E.GITHUB:return!!sync.options.PluginsOptions.getClientOption("gh.properly");case E.BITBUCKET:return!!sync.options.PluginsOptions.getClientOption("bb.properly");case E.BITBUCKET_SERVER:return!!sync.options.PluginsOptions.getClientOption("bbsv.properly");case E.GITLAB:return!!sync.options.PluginsOptions.getClientOption("gl.properly");case E.GITLAB_E:return!!sync.options.PluginsOptions.getClientOption("gle.properly");default:return!0}}function Pe(){return window.location.href.includes("editReferencesInPlace=true")}function ke(e){return new goog.Promise(function(t){setTimeout(t,e)})}function x(e){this.htmlElement=null,this.onCheckboxChange_=this.onCheckboxChange_.bind(this),this.onTextInputChange_=this.onTextInputChange_.bind(this);var t=this.getInitialState_(e);if(t.visible){var n=goog.dom.createDom;this.checkbox_=n("input",{id:"gh-signoff-checkbox",type:"checkbox"}),t.checked&&this.checkbox_.setAttribute("checked","checked"),this.checkbox_.addEventListener("change",this.onCheckboxChange_),this.textInput_=n("input",{type:"text",value:t.value}),t.checked||this.textInput_.setAttribute("disabled","disabled"),this.textInput_.addEventListener("change",this.onTextInputChange_),this.htmlElement=n("div","gh-signoff",this.checkbox_,n("label",{for:"gh-signoff-checkbox"},"Signed-off-by: "),this.textInput_)}}x.prototype.dispose=function(){this.htmlElement&&(this.checkbox_.removeEventListener("change",this.onCheckboxChange_),this.textInput_.removeEventListener("change",this.onTextInputChange_)),this.checkbox_=null,this.textInput_=null,this.htmlElement=null};x.FEATURE_KEY="git.showSignOffTrailer";x.CHECKBOX_KEY="git.signOffTrailerInitialChecked";x.TEXTINPUT_KEY="git.signOffTrailerInitialText";x.prototype.isEnabled=function(){return!!this.htmlElement};x.prototype.isChecked=function(){var e=!1;return this.htmlElement&&(e=this.checkbox_.checked),e};x.prototype.getValue=function(){var e="";return this.htmlElement&&(e=this.textInput_.value),e};x.prototype.getInitialState_=function(e){var t={visible:!1,checked:!0,value:""};if(sync.options.PluginsOptions.getClientOption(x.FEATURE_KEY)==="on"){t.visible=!0;try{var n=localStorage.getItem(x.CHECKBOX_KEY);n!=="true"&&n!==null&&(t.checked=!1);var i=localStorage.getItem(x.TEXTINPUT_KEY);i?t.value=i:t.value=this.getSingedOffByDefaultValue_(e)}catch(o){console.warn(o)}}return t};x.prototype.getSingedOffByDefaultValue_=function(e){var t=F(e),n,i;try{n=localStorage.getItem(t+V),i=localStorage.getItem(t+Z),(i==="undefined"||i==="null")&&(i="")}catch(o){console.warn(o)}return n?n+(i?" <"+i+">":""):""};x.prototype.onCheckboxChange_=function(){var e=this.htmlElement.querySelector("input[type=text]");this.isChecked()?e.removeAttribute("disabled"):e.setAttribute("disabled","disabled");try{localStorage.setItem(x.CHECKBOX_KEY,""+this.isChecked())}catch(t){console.warn(t)}};x.prototype.onTextInputChange_=function(){try{var e=this.getValue();e?localStorage.setItem(x.TEXTINPUT_KEY,e):localStorage.removeItem(x.TEXTINPUT_KEY)}catch(t){console.warn(t)}};var pe=null;workspace.serviceLoader.loadServices(sync.internal_api.DiffApi).then(([e])=>pe=e);function P(e,t){D.call(this),this.accessToken_=e,this.refresher_=t,this.baseApiUri_="https://api.bitbucket.org/2.0",this.branchNamesToHashes_={}}goog.inherits(P,D);P.prototype.commit=function(e,t,n,i,o,r,a){var s=this;s.getDocument(e,t,n,function(_,p){if(_)return h(_);r===null||p.documentSha===r.documentSha?u(e,t,n,i,o,function(f){if(f)return h(f);s.getDocument(e,t,n,function(c,d){if(c)return h(c);a({type:"ok",documentInfo:d})})}):a({type:"merge",mergeParams:{ancestor:r.documentContent,left:i,right:p.documentContent},latestDocumentInfo:p})});function u(_,p,f,c,d,C){var l=ee(_),g=l.username,v=l.repo,m=encodeURIComponent(f)+"="+encodeURIComponent(c)+"&message="+encodeURIComponent(d)+"&branch="+encodeURIComponent(p);goog.net.XhrIo.send(s.baseApiUri_+"/repositories/"+g+"/"+v+"/src",function(R){var S=R.target,I=S.getStatus();if(I===201)C(null);else{var b=S.getResponseJson();C({status:I,message:b.error.message})}},"POST",m,{Authorization:fe(s.accessToken_),"Content-Type":"application/x-www-form-urlencoded"})}function h(_){_.status===500&&_.message.indexOf("You're not allowed to write to this repository")!==-1&&(_.status=401),_.status===401?a({type:"no-access",error:_}):a({type:"fail",error:_})}};P.prototype.write=function(e,t,n,i,o,r){this.commit(e,t,n,i,o,null,r)};P.prototype.startMerge=function(e,t,n,i,o,r){i.repositoryUri=e,N.merge("",i,function(a){var s=a.getStatus();if(s===200){var u=a.getResponseText(),h=a.getResponseHeader(N.merge.RET_HEADER);h===J.CLEAN||h===J.IDENTICAL?r(null,{diffUrl:null,mergedFile:u,repositoryUri:e,branch:t,path:n,message:o}):r(null,{diffUrl:null})}else r({status:s,message:tr(msgs.ERROR_)}),console.error(a.getResponseText())})};P.prototype.endMerge=function(e,t,n){var i=e.repositoryUri,o=e.branch,r=e.path,a=e.message,s=e.mergedFile;this.commit(i,o,r,s,a,t,n)};P.prototype.setUserInformation=function(e,t){};P.prototype.getUserInformation=sync.util.promise.promisify(function(e){this.api_("/user",function(t){var n=t.getStatus();if(n===200){var i=t.getResponseJson(),o=i.display_name||i.nickname,r=i.username;e(null,{user:o||r,email:null,userName_:r})}else n===401?this.retryAfterRefresh_(this.getUserInformation.bind(this,e),e):U(n,e)})});P.prototype.getUserRepositories=function(e){var t=5,n=[];this.api_("/repositories?role=member&fields=next,values.full_name",function i(o){var r=o.getStatus();if(r===200){var a=o.getResponseJson(),s=a.next;if(a instanceof Array||(a=a.values),a=a.map(function(u){return"https://bitbucket.org/"+u.full_name}),n=n.concat(a),s&&--t>0)return this.raw_(s,i);e(null,n)}else r===401?this.retryAfterRefresh_(this.getUserRepositories.bind(this,e),e):n.length>0?e(null,n):U(r,e)})};P.prototype.getBranchHashOrName=function(e){return this.branchNamesToHashes_[e]||e};P.prototype.getDocument=sync.util.promise.promisify(function(e,t,n,i){var o=this,r=ee(e),a=r.username,s=r.repo;n=n.split("/").map(encodeURIComponent).join("/"),t.indexOf("/")!==-1?this.api_("/repositories/"+a+"/"+s+"/refs/branches/"+t+"?fields=target.hash",function(h){var _=h.getStatus();if(_===200){var p=h.getResponseJson(),f=p.target.hash;u(f),this.branchNamesToHashes_[t]=f}else _===401?this.retryAfterRefresh_(this.getDocument.bind(this,e,t,n,i),i):U(_,i)}):u(t);function u(h){var _="/repositories/"+a+"/"+s+"/src/"+h+"/"+n,p=_+"?format=meta&fields=type,commit.hash",f=_+"?_t="+new Date().getTime();o.api_(p,function(c){var d=c.getStatus();if(d===200){var C=c.getResponseJson();C.type==="commit_file"&&o.api_(f,function(l){if(l.getStatus()===200){var g=l.getResponseText(),v=sha1.create();v.update("blob "+g.length+"\0"+g);var m=v.hex(),R=C.commit.hash;i(null,{documentSha:m,documentContent:g,commitSha:R})}else U(d,i)})}else d===401?o.retryAfterRefresh_(o.getDocument.bind(o,e,h,n,i),i):U(d,i)})}});P.prototype.getBranches=function(e,t){var n=ee(e),i=n.username,o=n.repo;this.api_("/repositories/"+i+"/"+o+"/refs/branches?fields=next,values.name&_t="+new Date().getTime(),function r(a){var s=a.getStatus();if(s===200){var u=a.getResponseJson(),h=u.next;u instanceof Array||(u=u.values),u=u.map(function(_){return _.name}),h&&this.raw_(h,r),t(null,u)}else s===401?this.retryAfterRefresh_(this.getBranches.bind(this,e,t),t):U(s,t)})};P.prototype.canPush=function(e,t,n){var i=ee(e),o=i.username,r=i.repo,a=[];this.api_("/repositories/"+o+"?role=contributor&fields=values.full_name,next",function(s,u){var h=o+"/"+r,_=s.getStatus();if(_===goog.net.HttpStatus.OK){var p=s.getResponseJson();if(goog.isArray(p.values)&&(a=goog.array.concat(a,p.values)),u){var f=goog.array.find(a,function(c){return c.full_name===h});n(!!f)}}else _===401?this.retryAfterRefresh_(this.canPush.bind(this,e,n),n):n(void 0)})};P.prototype.canFork=function(e){e(!0)};P.prototype.createFork=sync.util.promise.promisify(function(e,t){var n=this,i=ee(e),o=i.username,r=i.repo;(function a(s){n.api_("/repositories/"+o+"/"+r+"/forks","POST",{},function(u){var h=u.getStatus();switch(h){case 201:var _=u.getResponseJson(),p="https://bitbucket.org/"+_.full_name;t(null,p);break;case 401:n.retryAfterRefresh_(n.createFork.bind(n,e,t),t);break;case 400:var f=u.getResponseText();if(f.indexOf("You already have a repository with this name.")!==-1){n.getUserInformation(function(c,d){if(c)return t(c);var C=d.userName_,l="https://bitbucket.org/"+C+"/"+r;t(null,l)});break}default:if(h===0&&--s>0)return a(s);U(h,t);break}})})(3)});P.prototype.branchFromRepoToRepo=function(e,t,n,i,o){var r={repositoryUri:n,newBranch:i,sourceRepositoryUri:e,sourceBranch:t},a=this;N.createBranch("bb",r,function(s){var u=s.getStatus();if(u===200)switch(s.getResponseHeader(N.createBranch.RET_HEADER)){case N.createBranch.RET_SUCCESS:o(null,i);break;case N.createBranch.RET_ERROR:default:U(500,o,s.getResponseText());break}else u===401?a.retryAfterRefresh_(a.branchFromRepoToRepo.bind(a,e,t,n,i,o),o):U(u,o)})};P.prototype.getUrlOfCommit=function(e,t,n){var i=ee(e);n("https://bitbucket.org/"+i.username+"/"+i.repo+"/commits/"+t)};P.prototype.openPullRequest=sync.util.promise.promisify(function(e,t,n,i,o,r,a){var s=ee(e),u=ee(t);this.api_("/repositories/"+u.username+"/"+u.repo+"/pullrequests","POST",{title:r,description:o,source:{branch:{name:n},repository:{full_name:s.username+"/"+s.repo}},destination:{branch:{name:i}},close_source_branch:!1},function(h){var _=h.getStatus();if(_===201){var p=h.getResponseJson(),f=p.links&&p.links.html?p.links.html.href:null;a(null,f)}else _===401?this.retryAfterRefresh_(this.openPullRequest.bind(this,e,t,n,i,o,r,a),a):U(_,a)})});P.prototype.api_=function(e,t,n,i){var o=this;arguments.length===2?(i=t,t="GET"):n&&(n=JSON.stringify(n)),function r(a){goog.net.XhrIo.send(a,function(s){var u=s.target;if(u.isSuccess())try{var h=u.getResponseJson();if(typeof h.next=="string"){i.call(o,u,!1),r(h.next);return}}catch{}i.call(o,u,!0)},t,n,{Authorization:fe(o.accessToken_),"Content-Type":"application/json"})}(this.baseApiUri_+e)};P.prototype.raw_=function(e,t){var n=this;goog.net.XhrIo.send(e,function(i){var o=i.target;t.call(n,o)},null,null,{Authorization:fe(n.accessToken_)})};function ee(e){var t=e.match(/(?:([^/]+)\/([^/]+)\/?)?$/),n=t[2];return n.endsWith(".git")&&(n=n.slice(0,-4)),{username:t[1],repo:n}}P.prototype.retryAfterRefresh_=function(e,t){var n=this;this.refresher_(function(i){i?(n.accessToken_=i,e()):t({status:401,message:tr(msgs.NOT_AUTHORIZED_TO_ACCESS_REPO_)})})};function fe(e){var t;if(e.indexOf("<oxy>")!==-1){var n=e.split("<oxy>"),i=sync.util.encodeB64(n[0]+":"+n[1]);t="Basic "+i}else t="Bearer "+e;return t}P.prototype.deleteBranch=function(e,t,n){let i=this;return new Promise((o,r)=>{goog.net.XhrIo.send(i.baseApiUri_+"/repositories/"+e+"/"+t+"/refs/branches/"+n,function(a){let s=a.target,u=s.getStatus();u===204?o():r({status:u,message:s.getResponseJson()})},"DELETE",null,{Authorization:fe(i.accessToken_)})})};function k(){D.call(this),this.apiUrl_="../plugins-dispatcher/gitapi/"+j(E.BITBUCKET_SERVER)}goog.inherits(k,D);k.prototype.getUserInformation=sync.util.promise.promisify(function(e){var t="/getuserinfo",n=this.apiUrl_+t;goog.net.XhrIo.send(n,function(i){var o=i.target,r=o.getStatus();if(r===200){var a=o.getResponseJson();e(null,{user:a.displayName,email:a.email})}else{var s=o.getResponseText();U(r,e,s)}})});k.prototype.getUserRepositories=function(e){var t="/getuserrepos",n=this.apiUrl_+t;goog.net.XhrIo.send(n,function(i){var o=i.target,r=o.getStatus();if(r===200){var a=o.getResponseJson();e(null,a)}else{var s=o.getResponseText();U(r,e,s)}})};k.prototype.getBranches=function(e,t){var n="/getbranches",i="?repositoryUri="+encodeURIComponent(e),o=this.apiUrl_+n+i;goog.net.XhrIo.send(o,function(r){var a=r.target,s=a.getStatus();if(s===200){var u=a.getResponseJson();t(null,u)}else{var h=a.getResponseText();U(s,t,h)}})};k.prototype.getDocument=function(e,t,n){return new goog.Promise(goog.bind(function(i,o){var r="/getdocument",a="?repositoryUri="+encodeURIComponent(e)+"&branch="+encodeURIComponent(t)+"&path="+encodeURIComponent(n)+"&_t="+new Date().getTime(),s=this.apiUrl_+r+a;goog.net.XhrIo.send(s,function(u){var h=u.target,_=h.getStatus();if(_===200){var p=h.getResponseJson();i({documentSha:p.contentSha,documentContent:p.content,commitSha:p.commitSha})}else{var f=h.getResponseText();U(_,o,f)}})},this))};k.prototype.canPush=function(e,t,n){var i="/canpush",o="?repositoryUri="+encodeURIComponent(e)+"&branch="+encodeURIComponent(t),r=this.apiUrl_+i+o;goog.net.XhrIo.send(r,function(a){var s=a.target,u=s.getStatus();if(u===200){var h=s.getResponseJson(),_=h[0],p=void 0;n(_,p)}else n(void 0)})};k.prototype.canFork=function(e){e(!1)};k.prototype.createFork=function(e,t){};k.prototype.commit=function(e,t,n,i,o,r,a){var s="/commit",u=this.apiUrl_+s,h={repositoryUri:e,branch:t,path:n,content:i,message:o,docInfo:r};goog.net.XhrIo.send(u,function(_){var p=_.target,f=p.getResponseHeader(N.commit.RET_HEADER),c=p.getStatus();switch(f){case N.commit.RET_OK:var d=p.getResponseJson();a({type:f,documentInfo:{documentSha:d.fileSha,commitSha:d.commitSha,documentContent:i}});break;case N.commit.RET_MERGE:var C=p.getResponseHeader(N.merge.RET_HEADER),l=p.getResponseHeader(N.commit.LATEST_SHA_HEADER),g=p.getResponseText();a({type:f,mergeParams:{mergeType:C,latestCommitSha:l,mergedFileContent:g},latestDocumentInfo:{commitSha:l,documentContent:g}});break;default:var v=p.getResponseText();v.includes("Check your branch permissions")&&(c=401,v="The branch "+v,v=v.replace("refs/heads/","")),a({type:f,error:{status:c,message:v}})}},"POST",JSON.stringify(h),{"X-Requested-With":"g"})};k.prototype.getUrlOfCommit=function(e,t,n,i){var o=e.match(/^(.*?)\/scm\/([^/]+)\/([^/]+).git/),r=o[1],a=o[2],s=o[3],u;i?u=r+"/projects/"+a+"/repos/"+s+"/compare/commits?targetBranch="+i+"&sourceBranch="+t:u=r+"/projects/"+a+"/repos/"+s+"/commits/"+t,n(u)};k.prototype.startMerge=function(e,t,n,i,o,r){var a=i.mergeType;a===J.CLEAN?r(null,{diffUrl:null,latestCommitSha:i.latestCommitSha,mergedFile:i.mergedFileContent,repositoryUri:e,branch:t,path:n,message:o}):r(null,{diffUrl:null})};k.prototype.endMerge=function(e,t,n){var i=e.repositoryUri,o=e.branch,r=e.path,a=e.mergedFile,s=e.message;t.commitSha=e.latestCommitSha,this.commit(i,o,r,a,s,t,n)};k.prototype.branchExists=function(e,t,n,i){var o="/branchexists",r="?repositoryUri="+encodeURIComponent(t)+"&branch="+encodeURIComponent(n),a=this.apiUrl_+o+r;goog.net.XhrIo.send(a,function(s){i(s.target)})};k.prototype.write=function(e,t,n,i,o,r){this.commit(e,t,n,i,o,null,r)};k.prototype.openPullRequest=sync.util.promise.promisify(function(e,t,n,i,o,r,a){var s="/pullrequest",u=this.apiUrl_+s,h={sourceRepositoryUri:e,destinationRepositoryUri:t,sourceBranch:n,destinationBranch:i,pullRequestMessage:o,pullRequestTitle:r};goog.net.XhrIo.send(u,function(_){var p=_.target,f=p.getStatus();if(f===200){var c=p.getResponseText();a(null,c)}else{var d=p.getResponseText();U(f,a,d)}},"POST",JSON.stringify(h),{"X-Requested-With":"g"})});k.prototype.setUserInformation=function(e,t){};var Re=class extends Error{};function T(e,t,n,i,o,r,a,s){sync.actions.Action.call(this,{keyStrokeStr:s}),this.eventTarget_=new goog.events.EventTarget,this.editor_=e,this.gitAccessProvider_=t,this.fileLocation_=n,this.loginManager_=i,this.errorReporter_=o,this.currentDocument_=r,this.credentialsStore_=a,typeof t().getGithub=="function"&&(this.github=t().getGithub(),this.repo=t().getGithubRepo_(n.repositoryUri)),this.branch=n.branch,this.filePath=n.filePath,this.dialog=null,this.iconWrapper=null,this.status="none",this.temporaryDisabled=!1,this.actionPerformedCallback_=null,this.savedCommitMessage_="",this.signOffTrailer_=null,this.retrieveLastCommitMessages_()}goog.inherits(T,sync.actions.Action);T.SHORTCUT="M1 S";T.ID="Git/Commit";T.DEFAULT_PULL_TITLE=tr(msgs.GIT_PULL_TITLE_,{$APP_NAME:tr(msgs.WEB_AUTHOR_NAME_)});T.DEFAULT_COMMIT_MESSAGE=tr(msgs.GIT_DEFAULT_COMMIT_MESSAGE_,{$APP_NAME:tr(msgs.WEB_AUTHOR_NAME_)});T.COMMIT_ON_NEW_BRANCH_ID="createBranch";T.MERGE_AND_COMMIT_ID="commitAnyway";T.KEEP_ONLY_MY_CHANGES_ID="overwriteChanges";T.DIALOG_WIDTH=650;T.prototype.getContent=function(e){this.editor_.getXmlContent(e)};T.prototype.isEnabled=function(){var e=!0,t=this.editor_.getEditingSupport();if(t.getType()===sync.api.Editor.EditorTypes.AUTHOR){var n=t.getConcurrentEditingManager();n.getRoomType()==="sharedSession"&&!n.isCreator()&&(e=!1)}return e};T.prototype.renderLargeIcon=function(){var e=goog.dom.createDom("div","github-icon-octocat-large"),t="";return this.gitAccessProvider_()instanceof B?t="LogoToolbar.png":this.gitAccessProvider_()instanceof P?t="bitbucket_logo_dark.png":this.gitAccessProvider_()instanceof y?this.gitAccessProvider_().isOnPremise()?t="Gitlab_onpremise24.png":t="Gitlab24.png":t="Git-logo-white24.png",e.style.backgroundImage='url("'+sync.util.computeHdpiIcon("../plugin-resources/github-static/"+t)+'")',this.iconWrapper=goog.dom.createDom("div","github-icon-wrapper",e),this.iconWrapper};T.prototype.renderSmallIcon=function(){var e=goog.dom.createDom("div","github-icon-octocat-small"),t="";return this.gitAccessProvider_()instanceof B?t="CommitToolbar.png":this.gitAccessProvider_()instanceof P||this.gitAccessProvider_()instanceof k?t="bitbucket_logo_dark.png":this.gitAccessProvider_()instanceof y?this.gitAccessProvider_().isOnPremise()?t="gitlab-mono.png":t="gitlab.png":t="Git-logo24.png",e.style.backgroundImage='url("'+sync.util.computeHdpiIcon("../plugin-resources/github-static/"+t)+'")',this.iconWrapper=goog.dom.createDom("div","github-icon-wrapper",e),this.iconWrapper};T.prototype.getDisplayName=function(){return tr(msgs.GIT_COMMIT_)};T.prototype.getDescription=function(){return tr(msgs.GIT_COMMIT_ON_REPOSITORY_)};T.prototype.updateInputValue_=function(e,t,n){e.style.backgroundColor="rgb(255,255,208)",setTimeout(function(){e.style.backgroundColor="rgb(255,255,255)",e.value=t,n()},400)};T.prototype.retrieveLastCommitMessages_=function(){if(this.editor_&&this.editor_.getActionsManager){var e=this.editor_.getActionsManager().invokeOperation("com.oxygenxml.examples.webauthorgitapi.RetrieveCommitMessagesHistoryOperation",{});e&&e.then(t=>{let n=JSON.parse(t);Array.isArray(n)?window.lastUsedCommitMessages_=n:window.lastUsedCommitMessages_=[]})}};T.prototype.getDialog=function(){var e=390,t=workspace.createDialog();t.setButtonConfiguration([{key:"ok",caption:tr(msgs.GIT_COMMIT_)},{key:"cancel",caption:tr(msgs.CANCEL_)}]);var n={id:"gh-commit-sh-check",type:"checkbox"},i;try{i=localStorage.getItem("github.shortcut")}catch(g){console.warn(g)}(i&&i==="true"||!i)&&(n.checked="checked");var o=goog.userAgent.MAC||goog.userAgent.IPAD||goog.userAgent.IPHONE?"\u2318":"Ctrl";t.setTitle(tr(msgs.COMMIT_ON_GIT_));var r=goog.dom.createDom,a=sync.options.PluginsOptions.getClientOption("git.enableNewBranch")==="on";if(a){var s=r("div");s.appendChild(r("input",{style:"height:initial",type:"radio",name:"branchy",id:"gh-new-branch",value:"newBranch"})),s.append(r("label",{for:"gh-new-branch"},tr(msgs.COMMIT_ON_NEW_BRANCH_))),s.appendChild(r("div","gh-patch-branch",r("span","oxy-spinner gh-patch-branch-spinner"))),this.gitAccessProvider_()instanceof $||s.appendChild(r("label",{style:"margin-top:5px;",class:"access-pull-req"},r("input",{checked:"checked",name:"doPull",type:"checkbox"}),tr(msgs.CREATE_PULL_REQUEST_AUTOMATICALLY_)))}this.signOffTrailer_=new x(this.gitAccessProvider_),this.signOffTrailer_.isEnabled()&&(e+=37);var u=r("div","github-commit-dialog sync-legacy-line-height",r("label","github-commit-shortcut",r("input",n),tr(msgs.GIT_OPEN_DIALOG_WITH_SHORTCUT_,{$SHORTCUT:o+"+S"})),r("section","gh-commit-message-details",r("h1",null,tr(msgs.COMMIT_MESSAGE_)),r("textarea",{id:"commit-msg-txt-area",placeholder:T.DEFAULT_COMMIT_MESSAGE,value:this.savedCommitMessage_,className:"github-input",name:"message",rows:"4",autofocus:"autofocus"}),r("select","commit-history"),this.signOffTrailer_.htmlElement),r("section","gh-branch-details",r("h1",null,tr(msgs.BRANCH_)),r("label",{id:"gh-default-branch-wrapper",style:"display:block"},r("input",{style:"height:initial;"+(s?"":"display:none;"),type:"radio",name:"branchy",value:"defaultBranch",id:"gh-default-branch",checked:"checked"}),tr(msgs.COMMIT_ON_BRANCH_)+": ",r("span",{style:"color:#337ab7"},this.branch)),s)),h=u.querySelector('[name="message"]');goog.events.listen(h,goog.events.EventType.INPUT,goog.bind(function(){this.savedCommitMessage_=h.value},this));var _=h.value.length;h.setSelectionRange(_,_);var p=t.getElement();p.appendChild(u);var f=goog.bind(function(g){goog.dom.classlist.contains(t.getElement().querySelector("#gh-default-branch-wrapper"),"disabled")?g.preventDefault():(t.setPreferredSize(T.DIALOG_WIDTH,e),this.temporaryDisabled=!1)},this),c=goog.bind(function(){t.setPreferredSize(T.DIALOG_WIDTH,e+65);var g,v=goog.bind(function(m,R){this.temporaryDisabled=!0,this.checkIfBranchExists_(O.repositoryUri,m,goog.bind(function(S,I){if(!t.dialog.isDisposed()){var b;S?(console.error(S),b=""):b=I.availableName;var w=t.getElement().querySelector(".gh-patch-branch");if(w)if(w.childNodes.length===1){var G=goog.dom.createDom("input",{value:b,type:"text"});if(b){var K;goog.events.listen(G,goog.events.EventType.INPUT,goog.bind(function(){var ie=Date.now();g=ie,this.temporaryDisabled=!0,clearTimeout(K),K=setTimeout(function(){t.dialog.isDisposed()||(goog.dom.classlist.add(w.firstChild,"oxy-spinner"),v(G.value,ie))},500)},this))}w.appendChild(G),goog.dom.classlist.remove(w.firstChild,"oxy-spinner"),this.temporaryDisabled=!1}else{if(g!==R)return;var X=w.lastChild;X.value!==b?this.updateInputValue_(X,b,goog.bind(function(){this.temporaryDisabled=!1,goog.dom.classlist.remove(w.firstChild,"oxy-spinner")},this)):(this.temporaryDisabled=!1,goog.dom.classlist.remove(w.firstChild,"oxy-spinner"))}}},this))},this);g=Date.now(),this.branch.match(/^.*-patch(-\d+)?$/)?v(this.branch,g):v(this.branch+"-patch",g)},this),d=t.getElement().querySelector("#gh-default-branch");goog.events.listen(d,goog.events.EventType.CLICK,f);var C=t.getElement().querySelector("#gh-new-branch");C&&goog.events.listen(C,goog.events.EventType.CHANGE,c);var l=t.getElement().querySelector("#gh-commit-sh-check");return goog.events.listen(l,goog.events.EventType.CLICK,goog.bind(function(g){this.editor_.getActionsManager().setActionShortcut(T.ID,g.target.checked?T.SHORTCUT:null);try{localStorage.setItem("github.shortcut",g.target.checked)}catch{}},this)),this.dialog=t,this.setupCtrlEnterCommit_(),this.setupCommitHistory_()&&(e+=37),Ie===!1&&(d.disabled=!0,C.checked=!0,c(),goog.dom.classlist.add(t.getElement().querySelector("#gh-default-branch-wrapper"),"disabled")),t.setPreferredSize(T.DIALOG_WIDTH,e),t};T.prototype.getNoAccessDialog=function(){var e=goog.dom.createDom,t=workspace.createDialog(),n=440;t.setButtonConfiguration([{key:"ok",caption:tr(msgs.GIT_COMMIT_)},{key:"cancel",caption:tr(msgs.CANCEL_)}]),t.setTitle(tr(msgs.COMMIT_ON_GIT_)),this.signOffTrailer_=new x(this.gitAccessProvider_),this.signOffTrailer_.isEnabled()&&(n+=37);var i=e("div","github-commit-dialog sync-legacy-line-height",e("div","gh-access-commit-info-prolog",tr(msgs.COMMIT_NO_WRITE_ACCESS_)),e("div","gh-commit-message-details",e("h1",null,tr(msgs.COMMIT_MESSAGE_)+":"),e("textarea",{placeholder:T.DEFAULT_COMMIT_MESSAGE,className:"github-input",name:"message",rows:"4",autofocus:"autofocus"}),e("select","commit-history"),this.signOffTrailer_.htmlElement,e("label",{style:"margin-top:10px;display:block"},e("input",{name:"doPull",type:"checkbox",style:"height:initial"}),tr(msgs.CREATE_PULL_REQUEST_AUTOMATICALLY_))));return t.getElement().appendChild(i),this.dialog=t,this.setupCtrlEnterCommit_(),this.setupCommitHistory_()&&(n+=37),t.setPreferredSize(T.DIALOG_WIDTH,n),t};T.prototype.setupCtrlEnterCommit_=function(){var e=goog.events.listen(this.dialog.getElement().querySelector("textarea[name=message]"),goog.events.EventType.KEYUP,goog.bind(function(t){t.keyCode===goog.events.KeyCodes.ENTER&&t.ctrlKey&&(goog.events.unlistenByKey(e),t.stopPropagation(),this.dialog.dispatchEvent(new goog.ui.Dialog.Event("ok",tr(msgs.OK_))))},this))};T.prototype.setupCommitHistory_=function(){var e=window.lastUsedCommitMessages_,t=this.dialog.getElement().querySelector(".commit-history");if(e&&e.length>0){t.style.display="initial",goog.dom.removeChildren(t),t.add(goog.dom.createDom("option",null,tr(msgs.CHOOSE_PREVIOUSLY_ENTERED_COMMENT_)));for(var n=0;n<e.length;n++)t.add(goog.dom.createDom("option",null,""+e[n]));return goog.events.listen(t,goog.events.EventType.CHANGE,goog.bind(function(){t.selectedIndex!==0&&(this.dialog.getElement().querySelector("textarea[name=message]").value=t.options[t.selectedIndex].text)},this)),!0}else return t.style.display="none",!1};window.lastUsedCommitMessages_=[];T.prototype.tryCommit=function(e,t){var n=this;e.branchExists&&e.hasOwnProperty("content")&&this.getLatestFileVersion(e.branch,n.repo,function(i,o){if(e.branchAlreadyExists)i==="not found"?n.repo.createFile(n.ctx.branch,n.filePath,n.ctx.content,n.ctx.message,function(r,a){if(r)return t(r);n.currentDocument_.update(a.content.sha,a.commit.sha,e.content),n.branch=e.branch,t(null,{branch:n.branch,headUrl:a.commit.html_url})}):i?t(i):n.startMergingCommit_(n.repo,e,o.content,t,!0);else{if(i)return t(i);o.sha===n.currentDocument_.getDocumentSha()?n.repo.commitToHead(e.branch,n.filePath,e.content,e.message,function(r,a){if(r)return t(r);n.currentDocument_.update(a.blobSha,a.sha,e.content),n.branch=e.branch,Github.apiRequest("GET",a.head.url,null,function(s,u){if(s)return t();t(null,{branch:n.branch,headUrl:u.html_url})})}):n.startMergingCommit_(n.repo,e,o.content,t)}})};T.prototype.startMergingCommit_=function(e,t,n,i,o){var r=this,a={ancestor:r.currentDocument_.getInitialDocument(),left:t.content,right:n};N.merge(j(this.gitAccessProvider_),a,function(s){var u=s.getStatus();if(u===200){var h=s.getResponseText(),_=s.getResponseHeader(N.merge.RET_HEADER);_===J.CLEAN||_===J.IDENTICAL?e.createCommit(t.branch,r.filePath,h,t.message,goog.bind(r.onCommitCreated_,r,e,o,_,i)):e.createCommit(t.branch,r.filePath,t.content,t.message,function(p,f){if(p)return i(p);e.compare(f.head.sha,f.sha,function(c,d){if(c)return i(c);i({error:409,message:tr(msgs.FILE_EDITED_SINCE_OPENED_),diff:d,commit:f,autoMergeResult:{resultType:_,differentBranch:o}})})})}else u>=100&&e.createCommit(t.branch,r.filePath,t.content,t.message,function(p,f){if(p)return i(p);e.compare(f.head.sha,f.sha,function(c,d){if(c)return i(c);i({error:409,message:tr(msgs.FILE_EDITED_SINCE_OPENED_),diff:d,commit:f,autoMergeResult:{differentBranch:o}})})})})};T.prototype.onCommitCreated_=function(e,t,n,i,o,r){if(o)return i(o);e.compare(this.currentDocument_.getDocumentCommit(),r.sha,function(a,s){if(a)return i(a);i({error:409,message:tr(msgs.FILE_EDITED_SINCE_OPENED_),diff:s,commit:r,autoMergeResult:{resultType:n,differentBranch:t}})})};T.prototype.finalizeCommit_=function(e,t,n,i,o){var r=this;i?(this.setStatus("none"),this.errorReporter_.showError(A,tr(msgs.COMMIT_FAILED_),sync.api.Dialog.ButtonConfiguration.OK),this.registerActionPerformedEnd(this.errorReporter_)):(r.currentDocument_.update(o.blobSha,o.sha,n),this.branch=t,this.repo=e,Github.apiRequest("GET",o.head.url,null,function(a,s){var u;if(a)u=tr(msgs.COMMIT_SUCCESSFUL_ON_BRANCH_,{$BRANCH_NAME:goog.string.htmlEscape(t)});else{var h=s.html_url;u=trDom(msgs.COMMIT_SUCCESSFUL_ON_BRANCH_,{$BRANCH_NAME:goog.dom.createDom("a",{target:"_blank",href:h},t)})}r.setStatus("success"),r.errorReporter_.showError(A,u,sync.api.Dialog.ButtonConfiguration.OK),goog.events.listenOnce(r.errorReporter_.errDialog.dialog,goog.ui.Dialog.EventType.SELECT,goog.bind(r.handleReloadOnNewBranch,r,!0,null,null))}))};T.prototype.finalizeCommitOnFork_=function(e,t,n,i,o){var r=this;r.currentDocument_.update(e.blobSha,e.sha,r.ctx.content),r.previousBranch=r.branch,r.branch=t,r.repo=n,Github.apiRequest("GET",e.head.url,null,function(a,s){var u,h=null;if(a||(h=s.html_url),o.doPullRequest){r.openPullRequest_(n,i,t,o,h);return}a?u=tr(msgs.COMMIT_SUCCESSFUL_ON_BRANCH_,{$BRANCH_NAME:goog.string.htmlEscape(r.ctx.branch)}):u=trDom(msgs.COMMIT_SUCCESSFUL_ON_BRANCH_,{$BRANCH_NAME:goog.dom.createDom("a",{target:"_blank",href:h},t)}),r.setStatus("success"),r.errorReporter_.showError(A,u,sync.api.Dialog.ButtonConfiguration.OK),goog.events.listenOnce(r.errorReporter_.errDialog.dialog,goog.ui.Dialog.EventType.SELECT,goog.bind(r.handleReloadOnNewBranch,r,!0,t,r.getGitHubBaseUrl_()+n.getUser()+"/"+n.getRepo()))})};T.prototype.getLatestFileVersion=function(e,t,n){t.getContents(e,this.filePath,function(i,o){if(i)return n(i);n(null,{sha:o.sha,content:sync.util.decodeB64(o.content)})})};T.prototype.performCommit=function(e,t){var n=this;this.setStatus("loading"),e.branch&&e.branch!==this.branch?(e.branchExists=!1,this.createBranch_(n.repo,e,function(i){i?(e.branchExists=!1,t(i)):(n.branch=e.branch,e.branchExists=!0,n.tryCommit(e,t))})):(e.branchExists=!0,n.tryCommit(e,t))};T.prototype.gatherCommitParameters_=function(e,t,n,i){var o=this;this.getContent(function(r,a){if(r){o.setStatus("none"),o.errorReporter_.showError(A,tr(msgs.FAILED_TO_RETRIEVE_DOCUMENT_CONTENT_),sync.api.Dialog.ButtonConfiguration.OK);return}var s=F(o.gitAccessProvider_),u,h;try{u=localStorage.getItem(s+V),h=localStorage.getItem(s+Z)}catch(_){console.warn(_)}i({repositoryUri:o.fileLocation_.repositoryUri,sourceBranch:o.fileLocation_.branch,filePath:o.fileLocation_.filePath,destinationBranch:e,freshDestinationBranch:"",newFileContent:a,commitMessage:t,committer:u,email:h,initialSha:o.currentDocument_.getDocumentSha(),initialContent:o.currentDocument_.getInitialDocument(),doPullRequest:n,merged:!1})})};T.prototype.getSingedOffByTrailer_=function(){var e=F(this.gitAccessProvider_),t,n;try{t=localStorage.getItem(e+V),n=localStorage.getItem(e+Z),(n==="undefined"||n==="null")&&(n="")}catch(i){console.warn(i)}return t?t+(n?" <"+n+">":""):""};T.prototype.performCommitJGit_=function(e,t){var n=this;N.commit(j(this.gitAccessProvider_),e,function(i){var o=i.getStatus();if(o===200){var r=i.getResponseHeader(N.commit.RET_HEADER);switch(r){case N.commit.RET_OK:var a=i.getResponseText().split(";;"),s=a[0],u=a[1];t(r,{commitSha:s,fileSha:u});break;case N.commit.RET_MERGE:var h=i.getResponseHeader(N.commit.MERGE_RESULT_HEADER),_=i.getResponseHeader(N.commit.LATEST_SHA_HEADER),p=i.getResponseText();t(r,{mergeResultType:h,mergedString:p,latestSha:_});break;default:var f=i.getResponseText();t(r,{errorMessage:f});break}}else o===401?(n.setStatus("none"),n.loginManager_.showMessage(i.getResponseText(),!0,function(c){n.setStatus("loading"),n.gitAccessProvider_=c,n.performCommitJGit_(e,t)},F(n.gitAccessProvider_),e.repositoryUri,!0)):t("connection-error",{errorMessage:tr(msgs.CONNECTION_ERROR_)})})};T.prototype.performWriteJGit_=function(e,t){var n=this;N.write(j(this.gitAccessProvider_),e,function(i){var o=i.getStatus();if(o===200){var r=i.getResponseHeader(N.write.RET_HEADER);if(r===N.write.RET_OK){var a=i.getResponseText().split(";;"),s=a[0],u=a[1];t(r,{commitSha:s,fileSha:u})}else{var h=i.getResponseText();t(r,{errorMessage:h})}}else o===401?(n.setStatus("none"),n.loginManager_.showMessage(i.getResponseText(),!0,function(_){n.setStatus("loading"),n.gitAccessProvider_=_,n.performWriteJGit_(e,t)},F(n.gitAccessProvider_),e.repositoryUri,!0)):t("connection-error",{errorMessage:tr(msgs.CONNECTION_ERROR_)})})};T.prototype.commitJGitFinalized_=function(e,t,n){switch(t){case"ok":this.currentDocument_.update(n.fileSha,n.commitSha,e.newFileContent),this.gitAccessProvider_().getUrlOfCommit(e.repositoryUri,this.currentDocument_.getDocumentCommit(),goog.bind(function(u){this.setStatus("success");var h=u?goog.dom.createDom("a",{target:"_blank",href:u},e.destinationBranch):e.destinationBranch;this.errorReporter_.showError(A,goog.dom.createDom("span",{id:"github-commit-success-indicator"},trDom(msgs.COMMIT_SUCCESSFUL_ON_BRANCH_,{$BRANCH_NAME:h})),sync.api.Dialog.ButtonConfiguration.OK),this.markEditorAsSaved(this.errorReporter_),goog.events.listenOnce(this.errorReporter_.errDialog.dialog,goog.ui.Dialog.EventType.SELECT,goog.bind(this.handleReloadOnNewBranch,this,e.merged,e.destinationBranch,e.repositoryUri))},this));break;case"merge":var i={overwrite:!0,branch:!0};n.mergeResultType===J.CLEAN&&(i.merge=!0);var o={autoMergeResult:{differentBranch:e.sourceBranch!==e.destinationBranch,resultType:n.mergeResultType},diff:{}},r=this.createMergeDialog_(o,i);this.setStatus("none");for(var a=r.querySelectorAll("#gh-commit-diag-content > .gh-commit-diag-choice"),s=0;s<a.length;s++)a[s].addEventListener("click",goog.bind(this.handleCommitIsNotAFastForwardJGit_,this,e,n,a[s].getAttribute("id")));break;case"no-access":this.gitAccessProvider_().canFork(goog.bind(function(u){if(u)this.gatherForkDetails_(e);else{this.setStatus("none");var h=[];sync.options.PluginsOptions.getClientOption("git.usingEnforcedCredentials")==="true"?h=[{key:"no",caption:tr(msgs.CANCEL_)}]:h=[{key:"switch-user",caption:tr(msgs.LOGIN_WITH_DIFFERENT_USER_)},{key:"no",caption:tr(msgs.CANCEL_)}],this.errorReporter_.showError(A,tr(msgs.COMMIT_FAILED_)+": "+n.errorMessage,h),this.errorReporter_.onSelect(goog.bind(function(_){_==="switch-user"&&this.loginManager_.authenticateUser(goog.nullFunction,F(this.gitAccessProvider_),null,!0),this.actionPerformedEnd()},this))}},this));break;default:this.setStatus("none"),this.errorReporter_.showError(A,tr(msgs.COMMIT_FAILED_)+": "+n.errorMessage,sync.api.Dialog.ButtonConfiguration.OK),this.registerActionPerformedEnd(this.errorReporter_);break}};T.prototype.gatherBranchingDetails_=function(e){var t=this,n=t.ctx.branch,i=t.getNewBranchSuffix_();t.checkIfBranchExists_(e.repositoryUri,n+i,function(o,r){if(o)t.setStatus("none"),t.errorReporter_.showError(A,tr(msgs.COULD_NOT_CREATE_NEW_BRANCH_),sync.api.Dialog.ButtonConfiguration.OK),t.registerActionPerformedEnd(t.errorReporter_);else{var a=r.availableName;n=a.substring(0,n.length),i=a.substring(n.length);var s=goog.dom.createDom,u=s("div","gh_pull_diag",s("div","gh-commit-info-prolog",s("div","gh-fork-info",tr(msgs.BRANCH_)+": ",s("span",{id:"gh-fork-branch-name",contentEditable:"true"},n),s("span","gh-branch-name-suffix",i))));t.setStatus("none"),t.errorReporter_.showError(A,u,[{key:"yes",caption:tr(msgs.COMMIT_ON_NEW_BRANCH_)},{key:"no",caption:tr(msgs.CANCEL_)}]),t.errorReporter_.errDialog.dialog.listenOnce(goog.ui.Dialog.EventType.SELECT,function(h){if(h.key==="yes"){var _=t.errorReporter_.errDialog.getElement(),p=_.querySelector("span#gh-fork-branch-name").textContent;if(p||(p=n),e.destinationBranch=p+i,!(t.gitAccessProvider_()instanceof B))t.setStatus("loading"),t.performWriteJGit_(e,goog.bind(t.finalizeFork_,t,e,{forkedRepositoryUri:e.repositoryUri,sourceRepositoryUri:e.repositoryUri,destinationBranch:e.destinationBranch,sourceBranch:e.sourceBranch},!1,null,null));else{t.setStatus("loading");var f=e.repositoryUri.match(/([^/]+)\/([^/]+)\/?$/),c=f[1],d=f[2],C=t.github.getRepo(c,d);t.ctx.branch=e.destinationBranch,t.createBranch_(C,t.ctx,function(l){l?(t.setStatus("none"),t.errorReporter_.showError(A,tr(msgs.COULD_NOT_CREATE_NEW_BRANCH_),sync.api.Dialog.ButtonConfiguration.OK),t.registerActionPerformedEnd(t.errorReporter_)):t.commitToForkedRepo_(C,e.destinationBranch,{pullTitle:null,pullMessage:null,doPullRequest:!1})})}}else t.actionPerformedEnd()})}})};T.prototype.gatherForkDetails_=function(e){var t=this;if(t.github&&re===!0)return t.showAuthorizeNewOrganizationDialog_();e||(e=t.commitParameters);var n=t.ctx.branch,i=t.getNewBranchSuffix_();t.checkIfBranchExists_(e.repositoryUri,n+i,function(o,r){if(o)t.errorReporter_.showError(A,tr(msgs.FAILED_TO_FORK_REPOSITORY_),sync.api.Dialog.ButtonConfiguration.OK),t.registerActionPerformedEnd(t.errorReporter_);else{var a=r.availableName;n=a.substring(0,n.length),i=a.substring(n.length);var s=goog.dom.createDom,u=s("input",{type:"checkbox",id:"gh-pullRequest",name:"pullRequest",value:"pullRequest"});u.setAttribute("checked","");var h=s("input",{type:"text",name:"pullTitle",placeholder:T.DEFAULT_PULL_TITLE}),_=s("input",{type:"text",name:"pullMessage",placeholder:T.DEFAULT_COMMIT_MESSAGE,value:t.ctx.message}),p=s("span",{id:"gh-fork-branch-name",contentEditable:"true"},n),f=s("div","gh_pull_diag",s("div","gh-commit-info-prolog",tr(msgs.COMMIT_NO_WRITE_ACCESS_),s("div","gh-fork-info",tr(msgs.BRANCH_)+": ",p,s("span","gh-branch-name-suffix",i))),u,s("label",{for:"gh-pullRequest"},tr(msgs.CREATE_PULL_REQUEST_AUTOMATICALLY_)),s("div","gh-pull-info",s("label","",tr(msgs.PULL_REQUEST_TITLE_)+": ",h),s("label","",tr(msgs.MESSAGE_)+": ",_)));t.setStatus("none"),t.errorReporter_.showError(A,f,[{key:"yes",caption:tr(msgs.GIT_COMMIT_)},{key:"no",caption:tr(msgs.CANCEL_)}]),t.errorReporter_.errDialog.dialog.listenOnce(goog.ui.Dialog.EventType.SELECT,function(c){if(c.key==="yes"){var d=u.checked,C=h.value,l=_.value,g=p.textContent;g||(g=n),t.doFork(g+i,function(v,m){var R=tr(msgs.COULD_NOT_COMMIT_ON_FORK_REPO_);if(v)t.setStatus("none"),t.errorReporter_.showError(A,R,sync.api.Dialog.ButtonConfiguration.OK),t.registerActionPerformedEnd(t.errorReporter_);else if(e.repositoryUri=m.forkedRepositoryUri,e.destinationBranch=m.destinationBranch,!(t.gitAccessProvider_()instanceof B))t.performCommitJGit_(e,goog.bind(t.finalizeFork_,t,e,m,d,C,l));else{var S=e.repositoryUri.match(/([^/]+)\/([^/]+)\/?$/),I=S[1],b=S[2],w=t.github.getRepo(I,b);t.commitToForkedRepo_(w,e.destinationBranch,{pullTitle:C,pullMessage:l,doPullRequest:d})}})}else t.actionPerformedEnd()})}})};T.prototype.showAuthorizeNewOrganizationDialog_=function(){var e=trDom(msgs.NEW_ORG_NEEDS_AUTHORIZATION_,{$ANCHOR_START:{end:"$ANCHOR_END",node:goog.dom.createDom("a",{target:"_blank",href:this.getGitHubBaseUrl_()+"settings/connections/applications/"+sync.options.PluginsOptions.getClientOption("github.client_id")})}});this.setStatus("none"),this.errorReporter_.showError(A,e,sync.api.Dialog.ButtonConfiguration.OK),this.registerActionPerformedEnd(this.errorReporter_)};T.prototype.finalizeFork_=function(e,t,n,i,o,r,a){var s=this,u=t.forkedRepositoryUri,h=t.sourceRepositoryUri,_=t.destinationBranch,p=t.sourceBranch;r==="ok"?n?this.gitAccessProvider_().openPullRequest(u,h,_,p,o,i,function(c,d){if(c)s.gitAccessProvider_().getUrlOfCommit(u,a.commitSha,function(l){s.setStatus("none"),s.currentDocument_.update(a.fileSha,a.commitSha,e.newFileContent);var g=l?'<a target="_blank" href="'+l+'">'+_+"</a> ":g;s.errorReporter_.showError(A,tr(msgs.COMMIT_SUCCESSFUL_PULL_FAILED_,{$BRANCH_NAME:g}),sync.api.Dialog.ButtonConfiguration.OK),f()});else{s.setStatus("none");var C=d?'<a target="_blank" href="'+d+'">'+tr(msgs.PULL_REQUEST_)+"</a>":tr(msgs.PULL_REQUEST_);s.errorReporter_.showError(A,tr(msgs.PULL_REQUEST_SUCCESSFUL_,{$PULL_REQUEST:C}),sync.api.Dialog.ButtonConfiguration.OK),s.currentDocument_.update(a.fileSha,a.commitSha,e.newFileContent),f()}}):this.gitAccessProvider_().getUrlOfCommit(u,a.commitSha,function(c){s.setStatus("none");var d=c?'<a target="_blank" href="'+c+'">'+_+"</a>":_;s.errorReporter_.showError(A,tr(msgs.COMMIT_SUCCESSFUL_ON_BRANCH_,{$BRANCH_NAME:d}),sync.api.Dialog.ButtonConfiguration.OK),s.currentDocument_.update(a.fileSha,a.commitSha,e.newFileContent),f()}):(this.setStatus("none"),s.errorReporter_.showError(A,tr(msgs.COMMIT_FAILED_)+": "+a.errorMessage,sync.api.Dialog.ButtonConfiguration.OK),s.registerActionPerformedEnd(s.errorReporter_));function f(){goog.events.listenOnce(s.errorReporter_.errDialog.dialog,goog.ui.Dialog.EventType.SELECT,goog.bind(s.handleReloadOnNewBranch,s,e.merged,e.destinationBranch,e.repositoryUri))}};T.prototype.checkIfBranchExists_=sync.util.promise.promisify(function(e,t,n){this.gitAccessProvider_().branchExists(j(this.gitAccessProvider_),e,t,function(i){var o=i.getStatus();if(o===200){var r=i.getResponseHeader(N.branchExists.RET_HEADER);switch(r){case N.branchExists.RET_SUCCESS:var a=i.getResponseText();a=JSON.parse(a),n(null,{branchExists:a.branchExists,availableName:a.nextAvailable});break;case N.branchExists.RET_ERROR:n({status:500,message:i.getResponseText()});break}}else n(o===401?{status:401,message:tr(msgs.NOT_AUTHORIZED_)}:{status:500,message:tr(msgs.CONNECTION_ERROR_)})})});T.prototype.createBranch_=function(e,t,n){e.branch(this.branch,t.branch,goog.bind(function(i){i=this.getBranchingError_(i,t),i&&i.error===404?e.createRef({ref:"refs/heads/"+t.branch,sha:this.branch},goog.bind(function(o){o=this.getBranchingError_(o,t),n(o)},this)):n(i)},this))};T.prototype.detailsProvided=function(e){if(e==="ok"){var t=this.retrieveCommitContext();this.ctx=t,typeof this.gitAccessProvider_().getGithub=="function"?this.gatherCommitParameters_(t.branch,t.message,t.doPullRequest,goog.bind(function(n){this.commitParameters=n,this.previousBranch=this.branch,t.content=n.newFileContent,this.performCommit(t,goog.bind(this.decideIfPullRequestAfterCommitForGitHub,this,goog.bind(this.commitFinalized,this),t))},this)):this.gitAccessProvider_()instanceof $?(this.setStatus("loading"),this.gatherCommitParameters_(t.branch,t.message,t.doPullRequest,goog.bind(function(n){this.performCommitJGit_(n,goog.bind(this.commitJGitFinalized_,this,n))},this))):(this.setStatus("loading"),this.gatherCommitParameters_(t.branch,t.message,t.doPullRequest,goog.bind(this.startCommit,this)))}};T.prototype.retrieveCommitContext=function(){var e=this.dialog.getElement(),t=sync.util.getURLParameter("gh-notify"),n=sync.util.getURLParameter("gh-issue"),i=e.querySelector('[name="message"]').value||T.DEFAULT_COMMIT_MESSAGE;if(this.addCommitMessageToHistory_(i),this.signOffTrailer_.isEnabled()&&this.signOffTrailer_.isChecked()){var o=this.signOffTrailer_.getValue();o&&(i+=`

Signed-off-by: `+o)}var r=!1,a,s=e.querySelector("#gh-default-branch");if(s)if(s.checked)a=this.branch;else{a=e.querySelector(".gh-patch-branch input").value;var u=e.querySelector('[name="doPull"]');u&&(r=u.checked)}else{var u=e.querySelector('[name="doPull"]');u&&(r=u.checked)}var h={message:(t?"@"+t+" ":"")+(n?"#"+n+" ":"")+i,branch:a,doPullRequest:r};return h.branch||(h.branch=this.branch),h};T.prototype.startCommit=function(e){var t=e.repositoryUri,n=e.sourceBranch,i=e.destinationBranch,o=e.newFileContent,r=e.filePath,a=e.commitMessage,s={commitSha:this.currentDocument_.getDocumentCommit(),documentSha:this.currentDocument_.getDocumentSha(),documentContent:this.currentDocument_.getInitialDocument()};n!==i?this.gitAccessProvider_().branchFromRepoToRepo(t,n,t,i,goog.bind(function(u,h){if(u)return this.handleGenericError_(t,u);e.doPullRequest?this.doCommit_(t,h,o,r,a,s,goog.bind(this.doPullRequestAfterCommit,this,a,t,n)):this.doCommit_(t,h,o,r,a,s)},this)):this.doCommit_(t,i,o,r,a,s)};T.prototype.decideIfPullRequestAfterCommitForGitHub=function(e,t,n,i){if(n){e(n);return}t.doPullRequest?this.openPullRequest_(this.repo,this.repo,i.branch,{pullTitle:this.pullRequestTitleFromCommitMessage_(t.message),pullMessage:"",doPullRequest:!0},i.headUrl):e(null,i)};T.prototype.doCommit_=function(e,t,n,i,o,r,a){var s=this,u=a||s.handleCommitResultOk_.bind(s);s.gitAccessProvider_().commit(e,t,i,n,o,r,function(h){switch(h.type){case"ok":u(e,t,h);break;case"merge":s.gitAccessProvider_().startMerge(e,t,i,h.mergeParams,o,function(_,p){if(_)return s.handleGenericError_(e,_);(function f(c){s.setStatus("none"),s.createMergeDialogNEW_(c.mergedFile,c.diffUrl).then(function(d){switch(d){case T.MERGE_AND_COMMIT_ID:s.setStatus("loading"),function l(g,v){s.gitAccessProvider_().endMerge(g,v,function(m){switch(m.type){case"ok":u(e,t,m,!0);break;case"merge":s.gitAccessProvider_().startMerge(e,t,i,m.mergeParams,o,function(R,S){if(R)return s.handleGenericError_(e,R);S.mergedFile?l(S,m.latestDocumentInfo):f(S)});break;case"no-access":s.handleNoAccess_(e,m.error);break;case"fail":s.handleGenericError_(e,m.error);break}})}(c,r);break;case T.COMMIT_ON_NEW_BRANCH_ID:s.setStatus("loading");var C=t;C.match(/-patch$/)||(C+="-patch"),s.checkIfBranchExists_(e,C,function(l,g){if(l)return s.handleGenericError_(e,l);var v=g.availableName;s.gitAccessProvider_().branchFromRepoToRepo(e,t,e,v,function(m,R){if(m)return s.handleGenericError_(e,m);s.gitAccessProvider_().write(e,R,i,n,o,function(S){switch(S.type){case"ok":u(e,R,S);break;case"no-access":s.handleNoAccess_(e,S.error);break;case"fail":s.handleGenericError_(e,S.error);break}})})});break;case T.KEEP_ONLY_MY_CHANGES_ID:s.setStatus("loading"),s.gitAccessProvider_().write(e,t,i,n,o,function(l){switch(l.type){case"ok":u(e,t,l);break;case"no-access":s.handleNoAccess_(e,l.error);break;case"fail":s.handleGenericError_(e,l.error);break}});break}})})(p)});break;case"no-access":s.handleNoAccess_(e,h.error);break;case"fail":s.handleGenericError_(e,h.error);break}})};T.prototype.handleCommitResultOk_=function(e,t,n,i){var o=this,r=n.documentInfo;o.currentDocument_.update(r.documentSha,r.commitSha,r.documentContent),o.gitAccessProvider_().getUrlOfCommit(e,r.commitSha,function(a){if(a)var s=goog.dom.createDom("a",{target:"_blank",href:a},t);o.showSuccessDialog_(e,t,s,i),o.setStatus("success"),o.markEditorAsSaved(o.errorReporter_)})};T.prototype.showSuccessDialog_=function(e,t,n,i){var o=goog.dom.createDom,r=this,a=workspace.createDialog();a.setTitle(A),a.setButtonConfiguration(sync.api.Dialog.ButtonConfiguration.OK);var s=!0,u=tr(msgs.COMMIT_SUCCESSFUL_ON_BRANCH_).split("{$BRANCH_NAME}"),h=o("div",null,u[0],n||t,u[1]),_;i?_=o("div",null,tr(msgs.COMMIT_STATUS_MERGE_RELOAD_)):O.branch!==t||O.repositoryUri!==e?_=o("div",null,tr(msgs.COMMIT_STATUS_BRANCH_RELOAD_)):s=!1,a.getElement().appendChild(o("div",{style:"text-align:center",class:"sync-legacy-line-height"},h,_)),a.onSelect(goog.bind(function(){if(this.actionPerformedEnd(),a.dispose(),s){var p=j(r.gitAccessProvider_),f=O.filePath.split("/").map(encodeURIComponent).join("/"),c="git"+p+"://"+encodeURIComponent(e)+"/"+encodeURIComponent(t)+"/"+f,d=this.getEditorUrlParameters_();workspace.openLink(new sync.api.Editor.LinkOpenedEvent(c,!1,d,sync.api.Editor.LinkOpenedEvent.Target.SELF))}},this)),a.show()};T.prototype.handleGenericError_=function(e,t){var n=this;if(n.setStatus("none"),t.status===401)return n.handleNoAccess_(e,t);console.error("Commit error: ",t);var i=tr(msgs.COMMIT_FAILED_);t&&t.message&&(i=t.message),n.errorReporter_.showError(A,i,sync.api.Dialog.ButtonConfiguration.OK),n.registerActionPerformedEnd(n.errorReporter_)};T.prototype.handleNoAccess_=function(e,t){var n=this;n.setStatus("none");var i=workspace.createDialog();i.setPreferredSize(500,null);var o=[];sync.options.PluginsOptions.getClientOption("git.usingEnforcedCredentials")==="true"&&F(this.gitAccessProvider_)===E.USERPASS?o=[{key:"no",caption:tr(msgs.CANCEL_)}]:o=[{key:"switch",caption:tr(msgs.LOGIN_WITH_DIFFERENT_USER_)},{key:"cancel",caption:tr(msgs.CANCEL_)}],i.setButtonConfiguration(o),i.setTitle(A),i.getElement().appendChild(goog.dom.createDom("div",{style:"text-align:center;min-width:350px",class:"sync-legacy-line-height"},t.message)),i.onSelect(function(r){r==="switch"&&n.loginManager_.authenticateUser(goog.nullFunction,F(n.gitAccessProvider_),e,!0),i.dispose(),n.actionPerformedEnd()}),i.show()};T.prototype.noAccessDetailsProvided=function(e){e==="ok"&&(this.ctx=this.retrieveCommitContext(),this.gitAccessProvider_()instanceof B?this.gatherCommitParameters_(this.ctx.branch,this.ctx.message,this.ctx.doPullRequest,goog.bind(function(t){this.commitParameters=t,this.ctx.content=t.newFileContent,this.branch.match(/^.*-patch(-\d+)?$/)||(this.ctx.branch+="-patch"),this.doFork(this.ctx.branch,goog.bind(function(n,i){if(n){console.error(n),this.errorReporter_.showError(A,tr(msgs.COMMIT_FAILED_),sync.api.Dialog.ButtonConfiguration.OK),this.setStatus("none"),this.actionPerformedEnd();return}t.repositoryUri=i.forkedRepositoryUri,t.destinationBranch=i.destinationBranch;var o=t.repositoryUri.match(/([^/]+)\/([^/]+)\/?$/),r=o[1],a=o[2],s=this.github.getRepo(r,a);this.commitToForkedRepo_(s,t.destinationBranch,{pullTitle:this.pullRequestTitleFromCommitMessage_(this.ctx.message),pullMessage:"",doPullRequest:this.ctx.doPullRequest})},this))},this)):(this.setStatus("loading"),this.gatherCommitParameters_(this.ctx.branch,this.ctx.message,this.ctx.doPullRequest,goog.bind(function(t){var n=this,i=t.repositoryUri,o=t.sourceBranch,r=t.destinationBranch,a=t.newFileContent,s=t.filePath,u=t.commitMessage,h={commitSha:n.currentDocument_.getDocumentCommit(),documentSha:n.currentDocument_.getDocumentSha(),documentContent:n.currentDocument_.getInitialDocument()};n.gitAccessProvider_().createFork(i,function(_,p){if(_)return n.handleGenericError_(i,_);var f=r;f.match(/-patch$/)||(f+="-patch"),n.checkIfBranchExists_(p,f,function(c,d){if(c)return n.handleGenericError_(p,c);var C=d.availableName;n.gitAccessProvider_().branchFromRepoToRepo(i,o,p,C,function(l,g){if(l)return n.handleGenericError_(p,l);var v;n.ctx.doPullRequest&&(v=goog.bind(n.doPullRequestAfterCommit,n,u,i,o)),n.doCommit_(p,g,a,s,u,h,v)})})})},this))))};T.prototype.doPullRequestAfterCommit=function(e,t,n,i,o,r,a){var s=r.documentInfo;this.currentDocument_.update(s.documentSha,s.commitSha,s.documentContent);var u=this.pullRequestTitleFromCommitMessage_(e),h="";this.gitAccessProvider_().openPullRequest(i,t,o,n,h,u,goog.bind(function(_,p){_?this.handleErrorAfterPullRequest(i,o,r,a):this.handleSuccessAfterPullRequest(p,a),goog.events.listenOnce(this.errorReporter_.errDialog.dialog,goog.ui.Dialog.EventType.SELECT,goog.bind(this.handleReloadOnNewBranch,this,!0,o,i))},this))};T.prototype.handleErrorAfterPullRequest=function(e,t,n,i){this.gitAccessProvider_().getUrlOfCommit(e,n.documentInfo.commitSha,goog.bind(function(o){this.setStatus("success");var r=goog.dom.createDom,a=o?r("a",{target:"_blank",href:o},t):t,s=trDom(msgs.COMMIT_SUCCESSFUL_PULL_FAILED_EXTENDED_,{$BRANCH_NAME:a,$LINE_BREAK:r("br")},!0),u=i?tr(msgs.COMMIT_STATUS_MERGE_RELOAD_):tr(msgs.COMMIT_STATUS_BRANCH_RELOAD_);s.appendChild(r("div",null,u)),this.errorReporter_.showError(A,s,sync.api.Dialog.ButtonConfiguration.OK),this.registerActionPerformedEnd(this.errorReporter_)},this))};T.prototype.handleSuccessAfterPullRequest=function(e,t){this.setStatus("success");var n=goog.dom.createDom,i=e?n("a",{target:"_blank",href:e},tr(msgs.PULL_REQUEST_)):tr(msgs.PULL_REQUEST_),o=trDom(msgs.PULL_REQUEST_SUCCESSFUL_,{$PULL_REQUEST:i},!0),r=t?tr(msgs.COMMIT_STATUS_MERGE_RELOAD_):tr(msgs.COMMIT_STATUS_BRANCH_RELOAD_);o.appendChild(n("div",null,r)),this.errorReporter_.showError(A,o,sync.api.Dialog.ButtonConfiguration.OK),this.registerActionPerformedEnd(this.errorReporter_)};T.prototype.getBranchingError_=function(e,t){return e&&e.error===422&&e.request.responseText.indexOf("Reference already exists")!==-1&&(e=null,t.branchAlreadyExists=!0),e};T.prototype.addCommitMessageToHistory_=function(e){if(!!e){window.lastUsedCommitMessages_||(window.lastUsedCommitMessages_=[]);var t=window.lastUsedCommitMessages_,n=t.indexOf(e);n===-1||t.splice(n,1),t.unshift(e),t.length>10&&t.pop()}};T.prototype.commitFinalized=function(e,t){if(e)this.handleErrors(e);else{this.markEditorAsSaved(this.errorReporter_),this.setStatus("success");var n=goog.dom.createDom,i;t?i=n("span",{id:"github-commit-success-indicator"},trDom(msgs.COMMIT_SUCCESSFUL_ON_BRANCH_,{$BRANCH_NAME:n("a",{target:"_blank",href:t.headUrl},t.branch)})):i=n("span",{id:"github-commit-success-indicator"},tr(msgs.COMMIT_SUCCESSFUL_)),this.errorReporter_.showError(A,i,sync.api.Dialog.ButtonConfiguration.OK),goog.events.listenOnce(this.errorReporter_.errDialog.dialog,goog.ui.Dialog.EventType.SELECT,goog.bind(this.handleReloadOnNewBranch,this,!1,null,null))}};T.prototype.markEditorAsSaved=function(e){this.editor_.setDirty(!1),this.editor_.getActionsManager().invokeOperation("WebappMarkAsSavedOperation",{},e?function(){setTimeout(function(){var t=e.errDialog;t&&t.isVisible()&&e.errDialog.focus()},50)}:goog.nullFunction)};T.prototype.handleReloadOnNewBranch=function(e,t,n){this.actionPerformedEnd();var i=O.branch,o=O.repositoryUri;if(t||(t=this.branch),n||(n=o),t!==i||o!==n){var r=j(this.gitAccessProvider_),a=O.filePath.split("/").map(encodeURIComponent).join("/"),s="git"+r+"://"+encodeURIComponent(n)+"/"+encodeURIComponent(t)+"/"+a;this.editor_.setDirty(!1);var u=this.getEditorUrlParameters_();this.editor_.openLink(new sync.api.Editor.LinkOpenedEvent(s,!1,u,sync.api.Editor.LinkOpenedEvent.Target.SELF))}else e&&(this.editor_.setDirty(!1),window.location.reload())};T.prototype.getEditorUrlParameters_=function(){var e=goog.array.clone(sync.options.WorkspaceOptions.EDITOR_SPECIFIC_PARAMS);goog.array.remove(e,"url"),goog.array.remove(e,"roomId"),goog.array.remove(e,"roomType");var t={};return goog.array.forEach(e,function(n){var i=sync.util.getURLParameter(n);i!==null&&(t[n]=decodeURIComponent(i))}),t};T.prototype.getNewBranchSuffix_=function(){return"-patch"};T.prototype.handleErrors=function(e){var t=this;this.setStatus("none");var n=tr(msgs.COMMIT_FAILED_);if(e.error===404){t.gitAccessProvider_().canFork(function(s){s?(t.setStatus("loading"),t.gatherForkDetails_()):(t.errorReporter_.showError(A,n,sync.api.Dialog.ButtonConfiguration.OK),t.registerActionPerformedEnd(t.errorReporter_))});return}else if(e.error===409){if(e.autoMergeResult.resultType===J.IDENTICAL){t.setStatus("loading"),t.repo.commitToHead(t.ctx.branch,t.filePath,t.ctx.content,t.ctx.message,goog.bind(t.finalizeCommit_,t,t.repo,t.ctx.branch,t.ctx.content));return}for(var i=this.createMergeDialog_(e,{merge:!0,branch:!0,overwrite:!0}),o=i.querySelectorAll("#gh-commit-diag-content > .gh-commit-diag-choice"),r=0;r<o.length;r++)o[r].addEventListener("click",goog.bind(this.handleCommitIsNotAFastForward,this,e.commit,o[r].getAttribute("id")));return}else if(e.error===401)n=tr(msgs.NOT_AUTHORIZED_),t.credentialsStore_.removeCredentials(F(t.gitAccessProvider_));else if(e.error===422){var a=JSON.parse(e.request.responseText);n=a.message}t.errorReporter_.showError(A,n,sync.api.Dialog.ButtonConfiguration.OK),t.registerActionPerformedEnd(t.errorReporter_)};T.prototype.handleCommitIsNotAFastForward=function(e,t){var n=this,i=n.repo;switch(n.unregisterActionPerformedEnd(),t){case T.COMMIT_ON_NEW_BRANCH_ID:n.errorReporter_.hide(),n.setStatus("loading");var o=n.ctx.branch+n.getNewBranchSuffix_()+"-1";n.checkBranchExists_(i,o,function r(a){if(a){var s=o.match(/(.+-)(\d+)$/),u=s[1],h=parseInt(s[2])+1;o=u+h,n.checkBranchExists_(i,o,r);return}n.ctx.branch=o,n.createBranch_(i,n.ctx,function(_){_?(n.setStatus("none"),n.errorReporter_.showError(A,tr(msgs.COULD_NOT_CREATE_NEW_BRANCH_),sync.api.Dialog.ButtonConfiguration.OK),n.registerActionPerformedEnd(n.errorReporter_)):i.commitToHead(o,n.filePath,n.ctx.content,n.ctx.message,goog.bind(n.finalizeCommit_,n,i,n.ctx.branch,n.ctx.content))})});break;case T.MERGE_AND_COMMIT_ID:n.errorReporter_.hide(),n.setStatus("loading"),i.updateCommit(e,n.branch,goog.bind(n.finalizeCommit_,n,i,n.branch,n.ctx.content));break;case T.KEEP_ONLY_MY_CHANGES_ID:n.errorReporter_.hide(),n.setStatus("loading"),i.commitToHead(n.ctx.branch,n.filePath,n.ctx.content,n.ctx.message,goog.bind(n.finalizeCommit_,n,i,n.ctx.branch,n.ctx.content));break}};T.prototype.handleCommitIsNotAFastForwardJGit_=function(e,t,n){switch(this.unregisterActionPerformedEnd(),n){case T.MERGE_AND_COMMIT_ID:this.errorReporter_.hide(),this.setStatus("loading"),e.newFileContent=t.mergedString,e.initialSha=t.latestSha,e.merged=!0,this.performCommitJGit_(e,goog.bind(this.commitJGitFinalized_,this,e));break;case T.KEEP_ONLY_MY_CHANGES_ID:this.errorReporter_.hide(),this.setStatus("loading"),this.performWriteJGit_(e,goog.bind(this.commitJGitFinalized_,this,e));break;case T.COMMIT_ON_NEW_BRANCH_ID:this.setStatus("loading"),this.gatherBranchingDetails_(e);break}};T.prototype.handleCommitIsNotAFastForwardOnFork=function(e,t,n,i,o,r){var a=this;switch(a.unregisterActionPerformedEnd(),t){case T.MERGE_AND_COMMIT_ID:a.errorReporter_.hide(),a.setStatus("loading"),n.updateCommit(e,i,function(s,u){s?(a.setStatus("none"),a.errorReporter_.showError(A,tr(msgs.COMMIT_FAILED_),sync.api.Dialog.ButtonConfiguration.OK),a.registerActionPerformedEnd(a.errorReporter_)):a.finalizeCommitOnFork_(u,i,n,o,r)});break;case T.KEEP_ONLY_MY_CHANGES_ID:a.errorReporter_.hide(),a.setStatus("loading"),n.commitToHead(i,a.filePath,a.ctx.content,a.ctx.message,function(s,u){s?(a.setStatus("none"),a.errorReporter_.showError(A,tr(msgs.COMMIT_FAILED_),sync.api.Dialog.ButtonConfiguration.OK),a.registerActionPerformedEnd(a.errorReporter_)):a.finalizeCommitOnFork_(u,i,n,o,r)});break}};T.prototype.doFork=function(e,t){var n=this;n.setStatus("loading");var i=n.fileLocation_.repositoryUri;n.gitAccessProvider_().createFork(i,function(o,r){o?t(o):function a(s){n.checkIfBranchExists_(r,e,function(u,h){if(u){if(u.status===500&&u.message.indexOf("access denied or repository not exported")!==-1&&s-- >0)return setTimeout(function(){a(s)},500);t(u);return}var _=n.branch;n.gitAccessProvider_().branchFromRepoToRepo(i,_,r,h.availableName,function(p,f){t(p,{sourceBranch:_,sourceRepositoryUri:i,destinationBranch:f,forkedRepositoryUri:r})})})}(10)})};T.prototype.checkBranchExists_=function(e,t,n){var i="/repos/"+e.getUser()+"/"+e.getRepo()+"/contents/";Github.apiRequest("HEAD",i+"?ref="+encodeURIComponent(t),null,function(o){n(!o,t)})};T.prototype.commitToForkedRepo_=function(e,t,n){var i=this;i.getLatestFileVersion(t,e,function(o,r){var a=i.repo;if(o==="not found")e.createFile(t,i.filePath,i.ctx.content,i.ctx.message,function(u,h){if(u){i.setStatus("none"),i.errorReporter_.showError(A,tr(msgs.FAILED_TO_CREATE_FILE_ON_FORK_),sync.api.Dialog.ButtonConfiguration.OK),i.actionPerformedEnd();return}i.currentDocument_.update(h.content.sha,h.commit.sha,i.ctx.content),i.previousBranch=i.branch,i.branch=i.ctx.branch,i.repo=e;var _=h.commit.html_url;if(n.doPullRequest){i.openPullRequest_(e,a,t,n,_);return}i.setStatus("success");var p='<a target="_blank" href="'+_+'">'+i.ctx.branch+"</a>";i.errorReporter_.showError(A,tr(msgs.COMMIT_SUCCESSFUL_ON_BRANCH_,{$BRANCH_NAME:p}),sync.api.Dialog.ButtonConfiguration.OK);var f=i.getGitHubBaseUrl_(),c=f+e.getUser()+"/"+e.getRepo();goog.events.listenOnce(i.errorReporter_.errDialog.dialog,goog.ui.Dialog.EventType.SELECT,goog.bind(i.handleReloadOnNewBranch,i,!0,null,c))});else if(o)i.setStatus("none"),i.errorReporter_.showError(A,tr(msgs.COULD_NOT_COMMIT_ON_FORK_REPO_),sync.api.Dialog.ButtonConfiguration.OK),i.registerActionPerformedEnd(i.errorReporter_);else if(r.sha===i.currentDocument_.getDocumentSha())e.commitToHead(t,i.filePath,i.ctx.content,i.ctx.message,function(u,h){var _;if(u&&u.error===404)i.setStatus("none"),_=tr(msgs.REPOSITORY_NOT_FOUND_);else if(u)i.setStatus("none"),_=tr(msgs.ERROR_);else{i.currentDocument_.update(h.blobSha,h.sha,i.ctx.content),Github.apiRequest("GET",h.head.url,null,function(p,f){var c,d=null;if(p||(d=f.html_url),n.doPullRequest){i.openPullRequest_(e,a,t,n,d);return}var C=p?i.ctx.branch:'<a target="_blank" href="'+d+'">'+t+"</a>";c=tr(msgs.COMMIT_SUCCESSFUL_ON_BRANCH_,{$BRANCH_NAME:C}),i.setStatus("success"),i.errorReporter_.showError(A,c,sync.api.Dialog.ButtonConfiguration.OK);var l=i.getGitHubBaseUrl_(),g=l+e.getUser()+"/"+e.getRepo();goog.events.listenOnce(i.errorReporter_.errDialog.dialog,goog.ui.Dialog.EventType.SELECT,goog.bind(i.handleReloadOnNewBranch,i,!0,t,g))}),i.previousBranch=i.branch,i.branch=t,i.repo=e;return}i.errorReporter_.showError(A,_,sync.api.Dialog.ButtonConfiguration.OK),i.registerActionPerformedEnd(i.errorReporter_)});else{var s=goog.object.clone(i.ctx);s.branch=t,i.startMergingCommit_(e,s,r.content,function(u){if(u.error===409){i.setStatus("none");for(var h=i.createMergeDialog_(u,{merge:!0,overwrite:!0}),_=h.querySelectorAll("#gh-commit-diag-content > .gh-commit-diag-choice"),p=0;p<_.length;p++)_[p].addEventListener("click",goog.bind(i.handleCommitIsNotAFastForwardOnFork,i,u.commit,_[p].getAttribute("id"),e,t,a,n))}else i.handleErrors(u)},!0)}})};T.prototype.createMergeDialogNEW_=function(e,t,n){return new goog.Promise(function(i){var o=goog.dom.createDom,r=workspace.createDialog();r.setTitle(A),r.setButtonConfiguration(sync.api.Dialog.ButtonConfiguration.CANCEL);var a=tr(msgs.MERGE_WITH_CONFLICTS_);e&&(a=tr(msgs.MERGE_CLEAN_));var s="";t&&!this.canUseDiffApi_()&&(s=trDom(msgs.CLICK_HERE_THEN_CHOOSE_,{$ANCHOR_START:{end:"$ANCHOR_END",node:o("a",{target:"_blank",href:t})}}),goog.dom.appendChild(s,goog.dom.createTextNode(": ")));var u=[];if(e||this.canUseDiffApi_()){var h=o("span","gh-commit-diag-icon gh-commit-merge");h.style.backgroundImage='url("'+sync.util.computeHdpiIcon("../plugin-resources/github-static/git_merge36.png")+'")';var _=o("div",{id:T.MERGE_AND_COMMIT_ID,className:"gh-commit-diag-choice gh-default-choice",title:tr(msgs.MERGE_AND_COMMIT_TITLE_)},h,o("div","gh-commit-diag-title",tr(msgs.MERGE_AND_COMMIT_)+(this.canUseDiffApi_()?"...":"")));goog.events.listenOnce(_,goog.events.EventType.CLICK,l),u.push(_)}var p=o("span","gh-commit-diag-icon gh-commit-fresh");p.style.backgroundImage='url("'+sync.util.computeHdpiIcon("../plugin-resources/github-static/git_branch36.png")+'")';var f=tr(msgs.COMMIT_ON_NEW_BRANCH_);n&&(f=tr(msgs.COMMIT_ON_BRANCH_)+" "+n);var c=o("div",{id:T.COMMIT_ON_NEW_BRANCH_ID,className:"gh-commit-diag-choice btn-4",title:tr(msgs.COMMIT_ON_NEW_BRANCH_TITLE_)},p,o("div","gh-commit-diag-title",f));goog.events.listenOnce(c,goog.events.EventType.CLICK,l),u.push(c);var d=o("span","gh-commit-diag-icon gh-commit-overwrite");if(d.style.backgroundImage='url("'+sync.util.computeHdpiIcon("../plugin-resources/github-static/git_commit36.png")+'")',!this.canUseDiffApi_()){var C=o("div",{id:T.KEEP_ONLY_MY_CHANGES_ID,className:"gh-commit-diag-choice",title:tr(msgs.GIT_OVERWRITE_CHANGES_TITLE_)},d,o("div","gh-commit-diag-title",tr(msgs.GIT_OVERWRITE_CHANGES_)));goog.events.listenOnce(C,goog.events.EventType.CLICK,l),u.push(C)}r.getElement().appendChild(o("div",{id:"gh-commit-diag-content"},o("div","gh-commit-info-prolog",a,s),u)),r.setPreferredSize(475,null),r.onSelect(goog.bind(function(g){r.dispose(),g==="cancel"&&this.actionPerformedEnd()},this)),r.show();function l(g){r.dispose(),i(g.currentTarget.id)}},this)};T.prototype.canUseDiffApi_=function(){var e=sync.internal_api.DiffApi.isPrototypeOf(pe)&&!this.editor_.options.editReferencesInPlace&&!this.isConcurrentEditing_();return e&&new pe(this.editor_).canMerge()};T.prototype.isConcurrentEditing_=function(){var e=!1,t=this.editor_.getEditingSupport();if(t){var n=t.getConcurrentEditingManager();n&&(e=n.isInRoom())}return e};T.prototype.createMergeDialog_=function(e,t,n){var i=e.autoMergeResult,o=tr(msgs.COMMIT_MAY_HAVE_CONFLICTS_);if(n)o=n;else if(i&&!i.differentBranch)switch(i.resultType){case J.CLEAN:o=tr(msgs.MERGE_CLEAN_);break;case J.WITH_CONFLICTS:o=tr(msgs.MERGE_WITH_CONFLICTS_);break}else switch(i.resultType){case J.CLEAN:case J.WITH_CONFLICTS:o=tr(msgs.MERGE_DIFFERENT_BRANCH_);break}var r="",a=goog.dom.createDom,s=e.diff.permalink_url;s&&(r=trDom(msgs.CLICK_HERE_THEN_CHOOSE_,{$ANCHOR_START:{end:"$ANCHOR_END",node:a("a",{target:"_blank",href:s})}}),goog.dom.appendChild(r,goog.dom.createTextNode(": ")));var u="gh-commit-diag-icon",h="gh-commit-diag-choice",_="gh-commit-diag-title",p=[];i.resultType===J.CLEAN&&t.merge&&p.push(a("div",{id:"commitAnyway",className:h+" gh-default-choice",title:tr(msgs.MERGE_AND_COMMIT_TITLE_)},a("span",{className:u+" gh-commit-fresh",style:"background-image: url("+sync.util.computeHdpiIcon("../plugin-resources/github-static/git_merge36.png")+");"}),a("div",_,tr(msgs.MERGE_AND_COMMIT_)))),t.branch&&p.push(a("div",{id:"createBranch",className:h,title:tr(msgs.COMMIT_ON_NEW_BRANCH_TITLE_)},a("span",{className:u+" gh-commit-fresh",style:"background-image: url("+sync.util.computeHdpiIcon("../plugin-resources/github-static/git_branch36.png")+");"}),a("div",_,tr(msgs.COMMIT_ON_NEW_BRANCH_)))),t.overwrite&&p.push(a("div",{id:"overwriteChanges",className:h,title:tr(msgs.GIT_OVERWRITE_CHANGES_TITLE_)},a("span",{className:u+" gh-commit-overwrite",style:"background-image: url("+sync.util.computeHdpiIcon("../plugin-resources/github-static/git_commit36.png")+");"}),a("div",_,tr(msgs.GIT_OVERWRITE_CHANGES_))));var f=a("div",{id:"gh-commit-diag-content"},a("div","gh-commit-info-prolog",o,r),p);this.errorReporter_.showError(A,f,sync.api.Dialog.ButtonConfiguration.CANCEL),this.registerActionPerformedEnd(this.errorReporter_);var c=this.errorReporter_.errDialog.getElement();return this.errorReporter_.errDialog.setPreferredSize(450,null),c};T.prototype.openPullRequest_=function(e,t,n,i,o){var r=this;t.createPullRequest({title:i.pullTitle,head:e.getUser()+":"+n,base:r.previousBranch,body:i.pullMessage},function(a,s){var u=A;if(a){var h;o?h=goog.dom.createDom("a",{target:"_blank",href:o},n):h=n;var _=trDom(msgs.COMMIT_SUCCESSFUL_PULL_FAILED_EXTENDED_,{$BRANCH_NAME:h,$LINE_BREAK:goog.dom.createDom("br")});_.appendChild(goog.dom.createDom("div",null,tr(msgs.COMMIT_STATUS_BRANCH_RELOAD_))),r.errorReporter_.showError(u,_,sync.api.Dialog.ButtonConfiguration.OK)}else{var p=goog.dom.createDom("a",{target:"_blank",href:s.html_url},tr(msgs.PULL_REQUEST_)),f=trDom(msgs.PULL_REQUEST_SUCCESSFUL_,{$PULL_REQUEST:p});f.appendChild(goog.dom.createDom("div",null,tr(msgs.COMMIT_STATUS_BRANCH_RELOAD_))),r.errorReporter_.showError(u,f,sync.api.Dialog.ButtonConfiguration.OK)}r.setStatus("success");var c=r.getGitHubBaseUrl_(),d=c+e.getUser()+"/"+e.getRepo();goog.events.listenOnce(r.errorReporter_.errDialog.dialog,goog.ui.Dialog.EventType.SELECT,goog.bind(r.handleReloadOnNewBranch,r,!0,n,d))})};T.prototype.getGitHubBaseUrl_=function(){var e=sync.options.PluginsOptions.getClientOption("github.api_url"),t;return e?e.lastIndexOf("/")!==e.length-1&&(t=e+"/"):t="https://github.com/",t};T.prototype.listen=function(e,t){this.eventTarget_.listen(e,t)};T.prototype.setStatus=function(e){this.status=e,this.eventTarget_.dispatchEvent({type:"status_changed",status:e})};T.prototype.actionPerformedEnd=function(){this.actionPerformedCallback_&&(this.actionPerformedCallback_(),this.actionPerformedCallback_=null),this.signOffTrailer_&&this.signOffTrailer_.dispose()};T.prototype.registerActionPerformedEnd=function(e){this.actionPerformedEndKey=goog.events.listenOnce(e.errDialog.dialog,goog.ui.Dialog.EventType.SELECT,goog.bind(this.actionPerformedEnd,this))};T.prototype.unregisterActionPerformedEnd=function(){goog.events.unlistenByKey(this.actionPerformedEndKey)};T.prototype.actionPerformed=function(e){if(this.actionPerformedCallback_=e,this.status!=="loading"){this.setStatus("none"),this.temporaryDisabled=!1;var t;if((this.gitAccessProvider_()instanceof B||this.gitAccessProvider_()instanceof P||this.gitAccessProvider_()instanceof y)&&re===!1&&Ae){t=this.getNoAccessDialog(),t.onSelect(goog.bind(function(n,i){if(this.temporaryDisabled&&n!=="cancel"){i.preventDefault();return}if(n==="cancel")return t.dispose(),this.actionPerformedEnd();this.capableOfMultiCommit(this.gitAccessProvider_)?this.doCommitNew_(!0):this.noAccessDetailsProvided(n),t.dispose()},this)),t.show();return}t=this.getDialog(),t.onSelect(goog.bind(function(n,i){if(this.temporaryDisabled&&n!=="cancel"){i.preventDefault();return}if(n==="cancel")return t.dispose(),this.actionPerformedEnd();this.capableOfMultiCommit()?this.doCommitNew_(!1):this.detailsProvided(n),t.dispose()},this)),t.show()}};T.prototype.capableOfMultiCommit=function(){return this.editor_.getEditorType()===sync.api.Editor.EditorTypes.AUTHOR};T.prototype.doCommitNew_=function(e){this.setStatus("loading");var t=this.retrieveCommitContext();this.ctx=t;var n;this.gatherCommitParametersNew_(t.branch,t.message,t.doPullRequest).then(function(i){return n=i,e?this.doForkAndFindBranch(i):i},null,this).then(function(i){return n=i,this.commitDocuments(n).then(function(o){return n.doPullRequest?this.openPullRequestNew_(n).then(function(r){this.handleSuccessAfterPullRequest(r,n.merged),this.registerListenerOnFinishedPullRequestDialog(n)},null,this).thenCatch(function(r){var a=e?n.forkedRepositoryUri:n.repositoryUri;this.handleErrorAfterPullRequest(a,n.destinationBranch,{documentInfo:{commitSha:this.currentDocument_.getDocumentCommit()}},n.merged),this.registerListenerOnFinishedPullRequestDialog(n)},this):this.handleCommitResultOkNew(n,o)},null,this).thenCatch(function(o){if(o instanceof Re)this.actionPerformedEnd();else if(F(this.gitAccessProvider_)===E.GITHUB&&o.status===404&&re===!0)this.showAuthorizeNewOrganizationDialog_();else{var r=e?n.forkedRepositoryUri:n.repositoryUri;this.handleGenericError_(r,o)}},this)},null,this).thenCatch(function(i){this.handleGenericError_(n.repositoryUri,i)},this)};T.prototype.gatherCommitParametersNew_=function(e,t,n){var i=this,o=F(i.gitAccessProvider_),r,a;try{r=localStorage.getItem(o+V),a=localStorage.getItem(o+Z)}catch(s){console.warn(s)}return goog.Promise.resolve({connector:j(i.gitAccessProvider_),repositoryUri:i.fileLocation_.repositoryUri,sourceBranch:i.fileLocation_.branch,destinationBranch:e,freshDestinationBranch:"",commitMessage:t,committer:r,email:a,sourceBranchInfo:{initialCommitSha:i.currentDocument_.getDocumentCommit(),latestCommitSha:i.currentDocument_.getDocumentCommit()},doPullRequest:n,merged:!1})};T.prototype.doForkAndFindBranch=function(e){return this.gitAccessProvider_().createFork(e.repositoryUri).then(function(t){return e.forkedRepositoryUri=t,e.destinationBranch.match(/^.*-patch(-\d+)?$/)||(e.destinationBranch+="-patch"),this.checkIfBranchExists_(t,e.destinationBranch)},null,this).then(function(t){return e.destinationBranch=t.availableName,e}).thenCatch(function(t){if(this.shouldRetryCheckingIfBranchExists(t)){var n=this;return function i(o){return n.checkIfBranchExists_(e.forkedRepositoryUri,e.destinationBranch).then(function(r){return e.destinationBranch=r.availableName,goog.Promise.resolve(e)}).thenCatch(function(r){return n.shouldRetryCheckingIfBranchExists(r)&&o-- >0?ke(500).then(function(){return i(o)}):goog.Promise.reject(r)})}(10)}return goog.Promise.reject(t)},this)};T.prototype.shouldRetryCheckingIfBranchExists=function(e){var t=F(this.gitAccessProvider_)===E.GITHUB||F(this.gitAccessProvider_)===E.BITBUCKET;return t&&e.status===500&&(e.message.indexOf("access denied or repository not exported")!==-1||e.message.indexOf("git-upload-pack not permitted on")!==-1)};T.prototype.commitDocuments=function(e){return this.multiCommit(e).thenCatch(function(t){switch(t.type){case be.MERGE:this.setStatus("none");var n=t.result;e.sourceBranchInfo.latestCommitSha=n.latestCommitSha,e.freshDestinationBranch=e.destinationBranch;var i;return e.bitbucketServer?i=this.createMergeDialogNEW_(n.clean,n.diffUrl,e.bitbucketServer.newBranchName):i=this.createMergeDialogNEW_(n.clean,n.diffUrl),i.then(function(r){return this.parseChosenConflictResolution(r,e)},null,this).then(function(r){return this.setStatus("loading"),this.commitDocuments(r)},null,this);default:var o=t.result;return o?goog.Promise.reject(o.error):goog.Promise.reject(t)}},this)};T.prototype.multiCommit=function(e){var t=this.editor_.getActionsManager();return t.invokeOperation("com.oxygenxml.examples.webauthorgitapi.CommitDocumentsOperation",e).then(function(n){var i=JSON.parse(n);switch(i.type){case be.OK:return goog.Promise.resolve(i.result);default:return goog.Promise.reject(i)}})};T.prototype.parseChosenConflictResolution=function(e,t){var n={};switch(e){case T.MERGE_AND_COMMIT_ID:return goog.Promise.resolve().then(()=>this.canUseDiffApi_()?this.mergeWithLatestVersion_(t.sourceBranchInfo).then(()=>{n.resolution=null}):(n.resolution="merge_and_commit",goog.Promise.resolve())).then(()=>(t.conflict=n,this.gitAccessProvider_()instanceof k&&this.editor_.options.editReferencesInPlace&&(t.destinationBranch=t.sourceBranch),t.merged=!0,t));case T.COMMIT_ON_NEW_BRANCH_ID:if(n.resolution="commit_on_new_branch",t.conflict=n,t.bitbucketServer&&t.bitbucketServer.committedOnNewBranchAtConflict)return t.conflict.resolution="commit_on_previously_created_new_branch",t.destinationBranch=t.bitbucketServer.newBranchName,goog.Promise.resolve(t);var i=t.destinationBranch;return i.match(/-patch$/)||(i+="-patch"),this.checkIfBranchExists_(t.repositoryUri,i).then(function(o){return t.destinationBranch=o.availableName,this.gitAccessProvider_()instanceof k&&this.editor_.options.editReferencesInPlace&&(t.bitbucketServer={},t.bitbucketServer.committedOnNewBranchAtConflict=!0,t.bitbucketServer.newBranchName=o.availableName),goog.Promise.resolve(t)}.bind(this),null);case T.KEEP_ONLY_MY_CHANGES_ID:return n.resolution="keep_only_my_changes",t.conflict=n,t.destinationBranch=t.sourceBranch,goog.Promise.resolve(t)}};T.prototype.mergeWithLatestVersion_=function(e){return goog.Promise.resolve().then(()=>{var t=new pe(this.editor_).withSubmitLabel(tr(msgs.GIT_COMMIT_)).withRightLabel(tr(msgs.DIFF_LATEST_VERSION_)+" ("+e.latestCommitSha+")");return sync.util.promise.googPromise(t.mergeWith(this.editor_.getUrl(),Ne(this.currentDocument_,this.gitAccessProvider_))).then(n=>{if(n)this.setStatus("loading");else throw new Re})})};T.prototype.handleCommitResultOkNew=function(e,t){var n=this;n.currentDocument_.updateDocumentCommit(t.commitSha);var i;if(e.forkedRepositoryUri?i=e.forkedRepositoryUri:i=e.repositoryUri,n.gitAccessProvider_()instanceof k&&this.editor_.options.editReferencesInPlace){var o=e.sourceBranchInfo.initialCommitSha;n.gitAccessProvider_().getUrlOfCommit(i,t.commitSha,r,o)}else n.gitAccessProvider_().getUrlOfCommit(i,t.commitSha,r);function r(a){if(a)var s=goog.dom.createDom("a",{target:"_blank",href:a},e.destinationBranch);n.showSuccessDialog_(i,e.destinationBranch,s,e.merged),n.setStatus("success"),n.markEditorAsSaved(n.errorReporter_)}};T.prototype.registerListenerOnFinishedPullRequestDialog=function(e){e.forkedRepositoryUri?goog.events.listenOnce(this.errorReporter_.errDialog.dialog,goog.ui.Dialog.EventType.SELECT,goog.bind(this.handleReloadOnNewBranch,this,!0,e.destinationBranch,e.forkedRepositoryUri)):goog.events.listenOnce(this.errorReporter_.errDialog.dialog,goog.ui.Dialog.EventType.SELECT,goog.bind(this.handleReloadOnNewBranch,this,!0,e.destinationBranch,e.repositoryUri))};T.prototype.openPullRequestNew_=function(e){var t=this.pullRequestTitleFromCommitMessage_(e.commitMessage),n="",i,o=e.repositoryUri,r=e.sourceBranch,a=e.destinationBranch;return e.forkedRepositoryUri?i=e.forkedRepositoryUri:i=o,this.gitAccessProvider_().openPullRequest(i,o,a,r,n,t)};T.prototype.pullRequestTitleFromCommitMessage_=function(e){var t=e.split(`
`,1)[0];return t.trim()};function M(){this.prefix_="gcs::"}M.prototype.getCredentials=function(e){switch(e){case"github":return this.getGitHubCredentials();case"bitbucket":return this.getBitbucketCredentials();case"bitbucket-server":return this.getBitbucketServerCredentials();case"gitlab":return this.getGitlabCredentials();case"gitlab-e":return this.getGitlabEnterpriseCredentials();default:return this.getUsrPassCredentials()}};M.prototype.removeCredentials=function(e){switch(e){case"github":this.removeGitHubCredentials();break;case"bitbucket":this.removeBitbucketCredentials();break;case"bitbucket-server":this.removeBitbucketServerCredentials();break;case"gitlab":this.removeGitlabCredentials();break;case"gitlab-e":this.removeGitlabEnterpriseCredentials();break;default:this.removeUsrPassCredentials();break}var t=new XMLHttpRequest;t.open("POST","../plugins-dispatcher/git/reset_access",!1),t.setRequestHeader("Content-Type","application/json"),t.setRequestHeader("X-Requested-With","g"),t.send(JSON.stringify({connector:e}))};window.credentialsStorage=[];function se(e,t){window.credentialsStorage[e]=t}function ae(e){return window.credentialsStorage[e]}function ue(e){window.credentialsStorage[e]=null}M.prototype.setGitHubCredentials=function(e){try{se(this.prefix_+H(E.GITHUB),JSON.stringify(e))}catch(t){console.warn(t)}};M.prototype.getGitHubCredentials=function(){var e;try{e=JSON.parse(ae(this.prefix_+H(E.GITHUB)))}catch(n){console.warn(n)}if(e){var t=sync.options.PluginsOptions.getClientOption("github.api_url");t&&(e.apiUrl=t+"/api/v3")}return e};M.prototype.removeGitHubCredentials=function(){try{ue(this.prefix_+H(E.GITHUB))}catch(e){console.warn(e)}};M.prototype.setBitbucketCredentials=function(e){try{se(this.prefix_+H(E.BITBUCKET),e)}catch(t){console.warn(t)}};M.prototype.getBitbucketCredentials=function(){var e;try{e=ae(this.prefix_+H(E.BITBUCKET))}catch(t){console.log(t)}if(e)return{type:"bitbucket",token:e}};M.prototype.removeBitbucketCredentials=function(){try{ue(this.prefix_+H(E.BITBUCKET))}catch(e){console.warn(e)}};M.prototype.setBitbucketServerCredentials=function(e){try{se(this.prefix_+H(E.BITBUCKET_SERVER),e)}catch(t){console.warn(t)}};M.prototype.getBitbucketServerCredentials=function(){var e;try{e=ae(this.prefix_+H(E.BITBUCKET_SERVER))}catch(t){console.log(t)}if(e)return{type:"bitbucket-server",token:e}};M.prototype.removeBitbucketServerCredentials=function(){try{ue(this.prefix_+H(E.BITBUCKET_SERVER))}catch(e){console.warn(e)}};M.prototype.setGitlabCredentials=function(e){try{se(this.prefix_+H(E.GITLAB),e)}catch(t){console.warn(t)}};M.prototype.getGitlabCredentials=function(){var e;try{e=ae(this.prefix_+H(E.GITLAB))}catch(t){console.warn(t)}if(e)return{type:"gitlab",token:e}};M.prototype.removeGitlabCredentials=function(){try{ue(this.prefix_+H(E.GITLAB))}catch(e){console.warn(e)}};M.prototype.setGitlabEnterpriseCredentials=function(e){try{se(this.prefix_+H(E.GITLAB_E),e)}catch(t){console.warn(t)}};M.prototype.getGitlabEnterpriseCredentials=function(){var e;try{e=ae(this.prefix_+H(E.GITLAB_E))}catch(t){console.warn(t)}if(e)return{type:"gitlab-e",token:e}};M.prototype.removeGitlabEnterpriseCredentials=function(){try{ue(this.prefix_+H(E.GITLAB_E))}catch(e){console.warn(e)}};M.prototype.setUsrPassCredentials=function(e,t){try{se(this.prefix_+H(E.USERPASS),JSON.stringify({username:e,email:t}))}catch(n){console.warn(n)}};M.prototype.getUsrPassCredentials=function(){var e;try{e=ae(this.prefix_+H(E.USERPASS))}catch(n){console.warn(n)}if(e){var t=JSON.parse(e);return t.type="userpass",t}};M.prototype.removeUsrPassCredentials=function(){try{ue(this.prefix_+H(E.USERPASS))}catch(e){console.warn(e)}};M.prototype.removeAll=function(){this.removeGitHubCredentials(),this.removeBitbucketCredentials(),this.removeBitbucketServerCredentials(),this.removeGitlabCredentials(),this.removeGitlabEnterpriseCredentials(),this.removeUsrPassCredentials()};function ce(){this.documentSha=void 0,this.documentCommit=void 0,this.initialDocument=void 0}ce.prototype.update=function(e,t,n){this.documentSha=e,this.documentCommit=t,this.initialDocument=n};ce.prototype.getDocumentSha=function(){return this.documentSha};ce.prototype.getDocumentCommit=function(){return this.documentCommit};ce.prototype.updateDocumentCommit=function(e){this.documentCommit=e};ce.prototype.getInitialDocument=function(){return this.initialDocument};function he(){this.errDialog=null}he.prototype.showError=function(e,t,n){var i=this.getErrorDialog(n);i.setTitle(e);var o=i.getElement();goog.dom.removeChildren(o);var r=goog.dom.createDom("div",{style:"max-width:550px;min-width:200px"});r.style.textAlign="center",goog.dom.isNodeLike(t)?goog.dom.appendChild(r,t):typeof t=="string"&&(r.innerHTML=t),o.appendChild(r),i.show(),i.focus()};he.prototype.onSelect=function(e){var t=this;t.errDialog.onSelect(e)};he.prototype.hide=function(){this.errDialog.hide()};he.prototype.getErrorDialog=function(e){return this.errDialog||(this.errDialog=workspace.createDialog()),this.errDialog.setButtonConfiguration(e),this.errDialog};function $(e){D.call(this),this.repositoryStore_=e,this.user_=void 0,this.userMail_=void 0}goog.inherits($,D);$.prototype.setUserInformation=function(e,t){this.user_=e,this.userMail_=t};$.prototype.getUserInformation=sync.util.promise.promisify(function(e){e(null,{user:this.user_,email:this.userMail_})});$.prototype.getUserRepositories=function(e){var t=this.repositoryStore_.getSavedRepositories(E.USERPASS),n=sync.options.PluginsOptions.getClientOption("git.default.jgit.repos");n=n.split(`
`);var i=new Set(goog.array.join(t,n)),o=[];i.forEach(function(r){r&&o.push(r)}),e(null,o)};$.prototype.getDocument=sync.util.promise.promisify(function(e,t,n,i){var o=0;(function r(){goog.net.XhrIo.send("../plugins-dispatcher/git/content",function(a){var s=a.target,u=s.getStatus();if(u===200){var h=s.getResponseText(),_=s.getResponseHeader("OXY-FILE-HASH"),p=s.getResponseHeader("OXY-COMMIT-SHA");i(null,{documentSha:_,documentContent:h,commitSha:p})}else if(u===0&&o++<5)r();else{var f=s.getResponseText();i({status:u,message:f})}},"POST",JSON.stringify({repositoryUri:e,branch:t,path:n}),{"X-Requested-With":"g"})})()});$.prototype.getBranches=function(e,t){N.branches(e,function(n){var i=n.getStatus();if(i===200){var o=n.getResponseHeader(N.branches.RET_HEADER);if(o===N.branches.RET_ERROR){var r=n.getResponseText();t({status:500,message:r})}else{var a=n.getResponseText(),s=JSON.parse(a);t(null,s)}}else t(i===401?{status:i,message:n.getResponseText()}:{status:0,message:tr(msgs.CONNECTION_ERROR_)})})};$.prototype.getUrlOfCommit=function(e,t,n){e.match(/^https?:\/\/bitbucket.org/)?n(e+"/commits/"+t):e.match(/^https?:\/\/(?:(?:(?:www\.)?github)|gitlab)\.com/)?(e.endsWith(".git")&&(e=e.slice(0,-4)),n(e+"/commit/"+t)):n("")};$.prototype.canFork=function(e){e(!1)};$.prototype.canPush=function(e,t,n){n(void 0)};function W(e,t,n){this.credentialsStore_=e,this.repositoryStore_=t,this.gitConnector_=n}W.prototype.login=function(e,t,n){var i=n?_e(n).repositoryUri:null;z.authenticateUser(t,this.gitConnector_,i,!0,!1)};W.prototype.getUserName=function(){return z.getUserName(this.gitConnector_)};W.prototype.logout=function(e){this.credentialsStore_.removeCredentials(this.gitConnector_),z.removeGitAccess(this.gitConnector_),e(),window.location.reload()};W.prototype.createRootUrlComponent=function(e,t,n){return new L(this.repositoryStore_,this.gitConnector_,goog.bind(this.logout,this),e).createRootUrlComponent(e,t,n)};W.prototype.getUrlInfo=function(e,t,n){if(!!Ce(e)){var i=null,o=null,r=Ee(e);if(r){o=new sync.util.Url(r).getFolderUrl();var a=new sync.util.Url(o);a.setPathName("/"+encodeURIComponent(_e(r).branch)+"/"),i=a.getUrl()}i&&o?t(i,o):n("Could not determine the Git repository and branch.")}};W.prototype.listFiles=function(e,t,n){var i=!1,o=e.match(/git:\/\/([^/]+)/);if(o){var r=sync.util.dotEncodeURIComponent(o[1]);setTimeout(function(){!i&&goog.net.XhrIo.send("../plugins-dispatcher/git/clonestatus/"+r,function(s){var u=s.target;if(u.getStatus()===200){var h=u.getResponseText();if(h==="true"&&!i){var _=goog.dom.getElementByClass("file-browser-list");_&&_.setAttribute("oxycaption",tr(msgs.CLONING_FIRST_TIME_))}}})},500)}var a=0;(function s(){sync.rest.callAsync(RESTFileBrowser.retrieveFiles,{url:encodeURIComponent(e)}).then(function(){var u=goog.dom.getElementByClass("file-browser-list");u&&u.removeAttribute("oxycaption"),i=!0,t.apply(this,arguments)}).thenCatch(function(u){if(u.statusCode===0&&u.type==="net_error"&&a++<2)return s();var h=goog.dom.getElementByClass("file-browser-list");h&&h.removeAttribute("oxycaption"),i=!0,n.apply(this,arguments)})})()};L.vAlignChildrenClass_="vertical-align-children";function L(e,t,n,i){this.defaultRepos_={},this.branchesForUrl_={},this.gitConnector_=t,this.repositoryStore_=e,this.logoutFunction_=n,i&&(this.renderedRepo=_e(i).repositoryUri),this.renderedRepo?this.repoDetails_=this.extractRepoDetails_(this.renderedRepo):this.repoDetails_=null}L.prototype.createRootUrlComponent=function(e,t,n){if(this.repoContainerElement=goog.dom.createDom("div",{className:"git-repo-info-container",id:this.gitConnector_+"repo-container"}),this.rootUrl_=e,!e&&!z.getGitAccess(this.gitConnector_)){var i=goog.dom.getElementByClass("file-server-login-container");z.authenticateUser(goog.bind(function(){goog.dom.removeChildren(i),this.renderRootUrl_(t,n)},this),this.gitConnector_,null,!1,!1,i)}else this.renderRootUrl_(t,n);return this.repoContainerElement};L.prototype.renderRootUrl_=function(e,t){this.rootUrl_?this.switchToRepoPreview_(e,t):this.switchToRepoConfig_(e,!1)};L.prototype.createBranchRepresentationTextNode_=function(e){return goog.dom.createTextNode("["+e+"]")};L.prototype.cancelRepoConfig_=function(e){this.switchToRepoPreview_(e,!1);var t=this.repoContainerElement.querySelector("button");t&&t.focus()};L.prototype.switchToRepoPreview_=function(e,t){var n=this.repoContainerElement;goog.dom.classlist.remove(n,"github-repo-connect-area"),goog.dom.classlist.addAll(n,["github-browsing-repo-preview",L.vAlignChildrenClass_]),goog.dom.removeChildren(n);var i=goog.dom.createDom,o;if(this.rootUrl_.match(/^git[^:]*:\/\//)){var r=this.rootUrl_.match(/^git[^:]*:\/\/([^/]+)\/?([^/]+)?/),a=decodeURIComponent(r[1]);o=decodeURIComponent(r[2]);var s=a.match(/^https?:\/\/[^/]+\/(.+)/);if(!s){this.switchToRepoConfig_(e,!1);return}var u=document.createDocumentFragment();goog.dom.append(u,i("span","repo-icon"),i("span","repo-text",goog.dom.createTextNode(s[1])),i("span",["github-repo-right",L.vAlignChildrenClass_],i("span","branch-icon"),this.createBranchRepresentationTextNode_(o))),n.appendChild(u)}else if(this.rootUrl_.match(/^github:\/\/getFileContent/)){var h=this.rootUrl_.match(/github:\/\/getFileContent\/([^/]*)\/([^/]*)\/([^/]*)\/.*/);goog.dom.append(n,i("span","repo-icon"),goog.dom.createTextNode(h[1]+"/"+h[2]),i("span",["github-repo-right",L.vAlignChildrenClass_],i("span","branch-icon"),this.createBranchRepresentationTextNode_(decodeURIComponent(h[3]))))}else{var _=this.rootUrl_.match(/github:\/\/getFileList\/([^/]+)\/([^/]+)\/?.*/),p=_[1];p=decodeURIComponent(p);var f=p.match("https?://[^/]+/([^/]+)/([^/]+).*");o=_[2],goog.dom.append(n,i("span","repo-icon"),goog.dom.createTextNode(f[1]+"/"+f[2]),i("span",["github-repo-right",L.vAlignChildrenClass_],i("span","branch-icon"),this.createBranchRepresentationTextNode_(decodeURIComponent(o))))}if(!t){var c=goog.dom.createDom("button",{className:"github-repo-edit",title:tr(msgs.EDIT_GIT_REPO_AND_BRANCH_)});goog.dom.appendChild(n,c),goog.events.listen(c,goog.events.EventType.CLICK,goog.bind(this.switchToRepoConfig_,this,e,!0))}};L.prototype.switchToRepoConfig_=function(e,t){goog.dom.classlist.removeAll(this.repoContainerElement,["vertical-align-children","github-browsing-repo-preview"]),goog.dom.removeChildren(this.repoContainerElement);var n=goog.dom.createDom;if(!t){var i=n("button",{class:"gh-repo-config-logout-btn",type:"button"},tr(msgs.DISCONNECT_));goog.events.listen(i,goog.events.EventType.CLICK,goog.bind(function(){this.logoutFunction_(goog.nullFunction)},this)),goog.dom.appendChild(this.repoContainerElement,i)}var o=tr(msgs.GIT_REPOSITORY_)+":",r=this.gitConnector_===E.USERPASS?tr(msgs.GIT_ENTER_REPO_URL_):tr(msgs.GIT_ENTER_OR_CHOOSE_REPO_URL_),a=n("input",{className:"oxy-input",type:"text",title:r});this.renderedRepo&&(a.value=this.renderedRepo),a.setAttribute("autocapitalize","none"),a.setAttribute("autocorrect","off"),this.repoDetailsElement_=n("div","github-repo-preview-area");var s=n("div","github-repo-div",n("label","github-repo-ac",o,a));this.repoInputButtons_=n("div",this.gitConnector_+"-repo-buttons-container"),this.insertConnectAndCancelRepoButtons_(this.repoInputButtons_,e,this.gitConnector_===E.USERPASS,t),s.appendChild(this.repoInputButtons_);var u=n("div","",s,this.repoDetailsElement_);goog.dom.appendChild(this.repoContainerElement,u),this.handleEnterEscWhileEditing_(u,t,e),a.focus(),this.repoChooser=new Q(a,Object.keys(this.defaultRepos_),this.gitConnector_,this.renderedRepo),goog.events.listen(this.repoChooser,"github-repo-chosen",goog.bind(this.repositoryChosen_,this,e,t)),goog.events.listen(this.repoChooser,"github-repo-set",goog.bind(this.handleOpenRepo_,this,e)),this.repoDetails_&&this.showRepoChooseControls_(e,!0)};L.prototype.handleEnterEscWhileEditing_=function(e,t,n){var i=goog.events.KeyCodes,o=goog.events.EventType;goog.events.listen(e,[o.KEYDOWN,o.KEYPRESS],goog.bind(function(r){(r.keyCode===i.ESC||r.keyCode===i.ENTER)&&r.stopPropagation()})),t&&goog.events.listen(e,o.KEYDOWN,goog.bind(function(r){r.keyCode===i.ESC&&this.cancelRepoConfig_(n)},this))};L.prototype.repositoryChosen_=function(e,t,n){var i=n.url;if(!i||!i.match(/^(git:\/\/|https?:\/\/)/)){this.handleRepoChoosingError_(tr(msgs.NO_REPOSITORY_CHOSEN_));return}var o=this.extractRepoDetails_(i);o.repositoryUri=n.repo||o.repositoryUri,this.repoDetails_=o,this.renderedRepo=i,this.showRepoChooseControls_(e,t),this.defaultRepos_[i]=!0};L.prototype.extractRepoDetails_=function(e){var t=null,n=/^([a-zA-Z\-]+)\/([a-zA-Z\-]+)$/.exec(e);if(n)t={owner:n[1],repo:n[2]};else{var i=/^https?:\/\/(?:(?:www\.)?github\.com)\/([^\/]+)\/([^\/]+)(\/.*)?$/.exec(e);i?t={host:"https://github.com",owner:i[1],repo:i[2],rest:i[3]}:t={repositoryUri:e}}return t};L.prototype.handleRepoChoosingError_=function(e){goog.dom.removeChildren(this.repoDetailsElement_),goog.dom.appendChild(this.repoDetailsElement_,goog.dom.createDom("div","github-repo-error inplace-notification inplace-notification-shown inplace-notification-warn",e)),this.repoInputButtons_&&goog.dom.classlist.remove(this.repoInputButtons_,"git-display-none"),goog.dom.classlist.remove(this.repoContainerElement,"github-repo-connect-area"),this.renderedRepo=null};L.prototype.insertConnectAndCancelRepoButtons_=function(e,t,n,i){var o=goog.dom.createDom;if(n){var r=o("button",{id:"git-repo-edit-ok-btn",class:"oxy-button oxy-small-button oxy-primary-button",title:tr(msgs.CONNECT_),type:"submit"},o("span","git-repo-edit-ok-btn",tr(msgs.CONNECT_)));e.appendChild(r),goog.events.listen(r,goog.events.EventType.CLICK,goog.bind(this.handleOpenRepo_,this,t))}if(i){var a=o("button",{id:"git-repo-edit-cancel-btn",class:"oxy-button oxy-small-button",title:tr(msgs.CANCEL_),type:"button"},o("span","git-repo-edit-cancel-btn",tr(msgs.CANCEL_)));e.appendChild(a),goog.events.listen(a,goog.events.EventType.CLICK,goog.bind(this.cancelRepoConfig_,this,t))}};L.prototype.showRepoChooseControls_=function(e,t){var n=goog.dom.createDom;this.rootUrl_&&goog.dom.classlist.add(this.repoContainerElement,"github-repo-connect-area"),this.repoInputButtons_&&goog.dom.classlist.add(this.repoInputButtons_,"git-display-none");var i,o;if(this.repoDetails_.repositoryUri){o=this.repoDetails_.repositoryUri;var r=o;i=n("div","",n("div",["github-repo-section",L.vAlignChildrenClass_],n("span","repo-icon"),n("span","github-repo-name",n("a",{target:"_blank",href:r},r))),n("div",["github-branch-section",L.vAlignChildrenClass_],n("span","branch-icon"),n("label","",tr(msgs.BRANCH_)+":",n("select",{id:"gh-settings-branch-select",className:"oxy-combo",style:"margin-left: 10px;"}))),n("div",{className:"github-file-section "+L.vAlignChildrenClass_,style:"display:none;"},n("span","github-file-icon"),n("span","github-path")))}else{var a=this.repoDetails_.repoDescriptor,s=this.repoDetails_.owner,u=this.repoDetails_.repo,h=this.repoDetails_.host;o=h+"/"+s+"/"+u;var _=s+"/"+u;i=n("div","",n("div",["github-repo-section",L.vAlignChildrenClass_],n("span","repo-icon"),n("span","github-repo-name",n("a",{target:"_blank",tabIndex:-1,href:h+"/"+s},s),"/",n("a",{target:"_blank",tabIndex:-1,href:h+"/"+_},u))),n("div",["github-branch-section",L.vAlignChildrenClass_],n("span","branch-icon"),n("label","",tr(msgs.BRANCH_)+":"),n("select",{id:"gh-settings-branch-select",className:"oxy-combo",tabIndex:0})),n("div",{className:"github-file-section "+L.vAlignChildrenClass_,style:"display:none;"},n("span","github-file-icon"),n("span","github-path"))),a&&a.description&&i.appendChild(n("div","github-description-preview",a.description)),a&&a.language&&i.appendChild(n("div","",tr(msgs.LANGUAGE_)+": "+a.language))}goog.dom.removeChildren(this.repoDetailsElement_),this.repoDetailsElement_.appendChild(i),this.insertConnectAndCancelRepoButtons_(this.repoDetailsElement_,e,!0,t);var p=goog.dom.getElement("gh-settings-branch-select"),f=this.repoDetailsElement_.querySelector(".github-path");goog.dom.classlist.add(p,"github-loading");var c=a&&a.default_branch;if(this.branchesForUrl_[o])this.branchesReceived_(this.branchesForUrl_[o],p,f,c);else{var d=z.getGitAccess(this.gitConnector_);d?this.getBranches_(o,d,p,f,c):z.authenticateUser(goog.bind(function(C){this.getBranches_(o,C(),p,f,c)},this),this.gitConnector_,null,!1,!1,null)}};L.prototype.getBranches_=function(e,t,n,i,o){var r=goog.dom.createDom,a=!1,s=this;t.getBranches(e,function u(h,_){if(h)h.status===401?z.showMessage(h.message,!0,function(c){c().getBranches(e,goog.bind(u,s))},s.gitConnector_,e,!0):(s.repoDetails_.error=tr(msgs.FAILED_TO_OPEN_REPO_),s.handleRepoChoosingError_(r("span","",r("span","github-error-icon"),tr(msgs.FAILED_TO_OPEN_REPO_)+": "+e)));else if(s.repositoryStore_.saveRepository(s.gitConnector_,e),!a)a=!0,s.branchesForUrl_[e]||(s.branchesForUrl_[e]=[]),s.branchesForUrl_[e]=s.branchesForUrl_[e].concat(_),s.branchesReceived_(s.branchesForUrl_[e],n,i,o);else{s.branchesForUrl_[e]=s.branchesForUrl_[e].concat(_);for(var p=0;p<_.length;p++){var f=r("option",{value:_[p]},_[p]);n.appendChild(f)}}})};L.prototype.branchesReceived_=function(e,t,n,i){if(goog.events.unlistenByKey(this.keyHandleBranchSelected),t){goog.dom.removeChildren(t);for(var o=0;o<e.length;o++){var r=goog.dom.createDom("option",{value:e[o]},e[o]);t.appendChild(r)}var a=null;if(this.repoDetails_.rest){var s=/\/([^\/]+)\/(.*)/.exec(this.repoDetails_.rest);if(a=s&&s[2],a){var u=null;for(o=0;o<e.length;o++)if(a.indexOf(e[o]+"/")===0){t.selectedIndex=o,u=e[o];break}var h=/([^\/]+)(.*)/.exec(a);if(h!==null&&(u=h[1]),u&&(this.repoDetails_.isFile=s[1]==="blob",this.repoDetails_.branch=u,n)){var _=!1;if(a.length>u.length){var p=a.substring(u.length+1);p.length>0&&(this.repoDetails_.path=p,n.textContent=decodeURIComponent(p),_=!0)}n.parentNode.style.display=_?"block":"none"}}}if(this.repoDetails_.branch)f=e.indexOf(this.repoDetails_.branch),t.selectedIndex=f;else{var f=-1;i&&(f=e.indexOf(i)),f===-1&&(f=e.indexOf("master")),f===-1&&(f=0),this.repoDetails_.branch=e[f],t.selectedIndex=f}goog.dom.classlist.remove(t,"github-loading"),this.keyHandleBranchSelected&&goog.events.unlistenByKey(this.keyHandleBranchSelected),this.keyHandleBranchSelected=goog.events.listen(t,goog.events.EventType.CHANGE,goog.bind(this.handleBranchSelected_,this))}};L.prototype.handleBranchSelected_=function(e){var t=e.target;this.repoDetails_.branch=t.options[t.selectedIndex].text};L.prototype.handleOpenRepo_=function(e){var t=this.repoDetails_;if(t&&t.branch){var n=t.repositoryUri,i=t.branch,o=t.path?t.path:"",r=t.host,a=t.owner,s=t.repo;n||(r?n=r+"/"+a+"/"+s:n="https://github.com/"+a+"/"+s);var u=j(this.gitConnector_),h="git"+u+"://"+encodeURIComponent(n)+"/"+encodeURIComponent(i)+"/",_=h+o;!this.repoDetails_.isFile&&!goog.string.endsWith(_,"/")&&(_=_+"/"),e(h,_)}else t?t.error&&this.handleRepoChoosingError_(t.error):this.handleRepoChoosingError_(tr(msgs.NO_REPOSITORY_CHOSEN_))};function B(e){D.call(this),this.github_=e}goog.inherits(B,D);B.prototype.getGithubRepo_=function(e){var t=e.match(/([^/]+)\/([^/]+)\/?$/),n=t[1],i=t[2];return this.getGithub().getRepo(n,i)};B.prototype.setGithub=function(e){this.github_=e};B.prototype.getGithub=function(){return this.github_};B.prototype.setUserInformation=function(e){};B.prototype.getUserInformation=sync.util.promise.promisify(function(e){var t=this.getGithub().getUser();t.show(null,function(n,i){if(!n&&(i.name||i.login)){var o=i.name||i.login;e(null,{user:o})}else e(tr(msgs.FAILED_TO_GET_USER_INFO_))})});B.prototype.getUserRepositories=function(e){this.getGithub().getUser().repos(function(t,n){t?e({status:t.error,message:tr(msgs.FAILED_TO_GET_USER_REPOS_)}):(n=n.map(function(i){return i.html_url}),e(null,n))})};B.prototype.getTeams=sync.util.promise.promisify(function(e,t){return this.getGithub().getUser().userTeams(function(n,i){n?t({status:n.error,message:tr(msgs.FAILED_TO_GET_USER_TEAMS_)}):(i=i.filter(function(o){return e===o.organization.login}).map(function(o){return o.slug}),t(null,i))})});B.prototype.getDocument=sync.util.promise.promisify(function(e,t,n,i){var o=this.getGithubRepo_(e),r=o.getContents(t,n),a=o.getHead(t).thenCatch(function(u){return u.error===404?o.getCommit(t):goog.Promise.reject(u)});goog.Promise.allSettled([r,a]).then(function(u){var h=u[0],_=u[1],p=s(h,_);if(p)i(p);else{try{var f=sync.util.decodeB64(h.value.content)}catch{f=h.value.content}i(null,{documentSha:h.value.sha,documentContent:f,commitSha:_.value.sha})}});function s(u,h){var _;return u.fulfilled||(u.reason.error===401?_={status:401,message:tr(msgs.NOT_AUTHORIZED_TO_ACCESS_REPO_)}:u.reason==="not found"?_={status:404,message:tr(msgs.REQUESTED_FILE_NOT_FOUND_)}:_={status:500,message:tr(msgs.ERROR_)}),!_&&!h.fulfilled&&(_=h.reason),_}});B.prototype.getBranches=function(e,t){var n=this.getGithubRepo_(e);n.getBranches(function(i,o){i?t({status:i.error,message:tr(msgs.FAILED_TO_GET_BRANCHES_)}):t(null,o)},!0)};B.prototype.canPush=function(e,t,n){var i=this.getGithubRepo_(e);i.getDetails(function(o){o&&o.permissions?n(o.permissions.push):n(void 0)})};B.prototype.canFork=function(e){e(!0)};B.prototype.createFork=sync.util.promise.promisify(function(e,t){var n=this.getGithubRepo_(e),i=this;(function o(r){n.fork(function(a,s){if(a){if(a.error===0&&--r>0)return o(r);t({status:a.error,message:tr(msgs.FAILED_TO_FORK_REPOSITORY_)})}else{var u=s.owner.login,h=s.name,_=i.getGitHubBaseUrl_()+"/"+u+"/"+h;t(null,_)}})})(3)});B.prototype.getGitHubBaseUrl_=function(){var e=sync.options.PluginsOptions.getClientOption("github.api_url"),t;return e?t=e:t="https://github.com",t};B.prototype.branchFromRepoToRepo=function(e,t,n,i,o){var r=this.getGithubRepo_(e),a=this.getGithubRepo_(n);r.getRef("heads/"+encodeURIComponent(t),function(s,u){if(s)return o({status:s.error||500,message:s.message||tr(msgs.COMMIT_TO_NEW_BRANCH_ERROR_)});a.createRef({sha:u,ref:"refs/heads/"+i},function h(_,p){if(_&&_.error===422){var f=i.match(/(.+-)(\d+)$/);if(f==null)return console.log("Invalid destination branch given to branchFromRepoToRepo"),o({status:500,message:tr(msgs.INVALID_DESTINATION_BRANCH_)});var c=f[1],d=parseInt(f[2])+1;i=c+d,a.createRef({sha:u,ref:"refs/heads/"+i},h);return}else if(_){o({status:500,message:tr(msgs.COMMIT_TO_NEW_BRANCH_ERROR_)});return}o(null,i)})})};B.prototype.getUrlOfCommit=function(e,t,n){var i=this.getGithubRepo_(e);n(this.getGitHubBaseUrl_()+"/"+i.getUser()+"/"+i.getRepo()+"/commit/"+t)};B.prototype.openPullRequest=sync.util.promise.promisify(function(e,t,n,i,o,r,a){var s=this.getGithubRepo_(e),u=this.getGithubRepo_(t);u.createPullRequest({title:r,head:s.getUser()+":"+n,base:i,body:o},function(h,_){h?a({status:500,message:tr(msgs.PULL_REQUEST_FAILED_)},null):a(null,_.html_url)})});B.prototype.deleteBranch=function(e,t,n){let i=this.getGithub().getRepo(e,t);return sync.util.promise.nativePromise(sync.util.promise.promisify(i.deleteRef)("heads/"+n))};(function(){"use strict";var e,t,n;t=window._,n=sync.util.encodeB64,typeof window!="undefined"&&typeof window.XMLHttpRequest!="undefined"&&(e=window.XMLHttpRequest);var i=function(o){function r(h){return h.split("/").map(encodeURIComponent).join("/")}var a=o.apiUrl||"https://api.github.com";function s(h,_,p,f,c,d){function C(){var v=_.indexOf("//")>=0?_:a+_;return v+(/\?/.test(v)?"&":"?")+new Date().getTime()}var l=new e;if(l.open(h,C(),!d),d||(l.onreadystatechange=function(){if(this.readyState===4)if(this.status>=200&&this.status<300||this.status===304)f(null,c?this.responseText:this.responseText?JSON.parse(this.responseText):!0,this);else{var v;try{var m=JSON.parse(this.responseText),R=m.errors;R.length&&(v=R[0].code)}catch{}f({path:_,request:this,error:this.status,errorCode:v})}}),c?l.setRequestHeader("Accept","application/vnd.github.v3.raw+json"):(l.dataType="json",l.setRequestHeader("Accept","application/vnd.github.v3+json")),l.setRequestHeader("Content-Type","application/json;charset=UTF-8"),o.token||o.username&&o.password){var g=o.token?"token "+o.token:"Basic "+n(o.username+":"+o.password);l.setRequestHeader("Authorization",g)}if(p?l.send(JSON.stringify(p)):l.send(),d)return l.response}i.apiRequest=s;function u(h,_,p){var f=[];(function c(){s("GET",h,null,function(d,C,l){if(d)return _(d);f.push.apply(f,C);var g=(l.getResponseHeader("link")||"").split(/\s*,\s*/g),v=null;g.forEach(function(m){v=/rel="next"/.test(m)?m:v}),v&&(v=(/<(.*)>/.exec(v)||[])[1]),v?(p&&(_(d,f),f=[]),h=v,c()):_(d,f)})})()}i.User=function(){this.repos=function(h){u("/user/repos?type=all&per_page=1000&sort=updated",function(_,p){h(_,p)})},this.orgs=function(h){s("GET","/user/orgs",null,function(_,p){h(_,p)})},this.gists=function(h){s("GET","/gists",null,function(_,p){h(_,p)})},this.notifications=function(h){s("GET","/notifications",null,function(_,p){h(_,p)})},this.show=function(h,_){var p=h?"/users/"+h:"/user";s("GET",p,null,function(f,c){_(f,c)})},this.userRepos=function(h,_){u("/users/"+encodeURIComponent(h)+"/repos?type=all&per_page=1000&sort=updated",function(p,f){_(p,f)})},this.userGists=function(h,_){s("GET","/users/"+encodeURIComponent(h)+"/gists",null,function(p,f){_(p,f)})},this.userTeams=function(h){u("/user/teams?per_page=1000",function(_,p){h(_,p)})},this.orgRepos=function(h,_){u("/orgs/"+encodeURIComponent(h)+"/repos?type=all&&page_num=1000&sort=updated&direction=desc",function(p,f){_(p,f)})},this.follow=function(h,_){s("PUT","/user/following/"+encodeURIComponent(h),null,function(p,f){_(p,f)})},this.unfollow=function(h,_){s("DELETE","/user/following/"+encodeURIComponent(h),null,function(p,f){_(p,f)})},this.createRepo=function(h,_){s("POST","/user/repos",h,_)}},i.Repository=function(h){var _=h.name,p=h.user;this.repo_=_,this.user_=p;var f=this,c="/repos/"+p+"/"+_,d={branch:null,sha:null};this.getRepo=function(){return this.repo_},this.getUser=function(){return this.user_},this.getDetails=function(l){s("GET",c,null,function(g,v){l(v)})},this.commitToHead=function(l,g,v,m,R){f.createCommit(l,g,v,m,function(S,I){if(S)return R(S);f.updateCommit(I,l,R)})},this.createCommit=function(l,g,v,m,R){f.getHead(l,function(S,I){if(S)return R(S);s("GET",I.url,null,function(b,w){if(b)return R(b);var G=w.tree.sha;f.postBlob(v,function(K,X){if(K)return R(K);f.updateTree(G,g,X,function(ie,De){if(ie)return R(ie);f.commit(I.sha,De,m,function(ye,Le){if(ye)return R(ye);R(null,{blobSha:X,sha:Le,head:I})})})})})})},this.updateCommit=function(l,g,v){f.updateHead(g,l.sha,function(m,R){if(m)return v(m);l.head=R.object,v(null,l)})},this.deleteRepo=function(l){s("DELETE",c,h,l)};function C(l,g){if(l===d.branch&&d.sha)return g(null,d.sha);f.getRef("heads/"+encodeURIComponent(l),function(v,m){d.branch=l,d.sha=m,g(v,m)})}this.getRef=function(l,g){s("GET",c+"/git/refs/"+l,null,function(v,m){if(v)return g(v);m instanceof Array?g({error:500}):g(null,m.object.sha)})},this.createRef=function(l,g){s("POST",c+"/git/refs",l,g)},this.deleteRef=function(l,g){s("DELETE",c+"/git/refs/"+encodeURIComponent(l),h,g)},this.createRepo=function(l,g){s("POST","/user/repos",l,g)},this.deleteRepo=function(l){s("DELETE",c,h,l)},this.listTags=function(l){s("GET",c+"/tags",null,function(g,v){if(g)return l(g);l(null,v)})},this.listPulls=function(l,g){s("GET",c+"/pulls"+(l?"?state="+l:""),null,function(v,m){if(v)return g(v);g(null,m)})},this.getPull=function(l,g){s("GET",c+"/pulls/"+l,null,function(v,m){if(v)return g(v);g(null,m)})},this.compare=function(l,g,v){s("GET",c+"/compare/"+encodeURIComponent(l)+"..."+encodeURIComponent(g),null,function(m,R){if(m)return v(m);v(null,R)})},this.getHeads=function(l){s("GET",c+"/git/refs/heads",null,function(g,v){if(g)return l(g);l(null,t.map(v,function(m){return t.last(m.ref.split("/"))}))})},this.getBranches=function(l,g){u(c+"/branches",function(v,m){if(v)return l(v);l(null,m.map(function(R){return R.name}))},g)},this.getBlob=function(l,g){s("GET",c+"/git/blobs/"+l,null,g,"raw")},this.getCommit=sync.util.promise.promisify(function(l,g){s("GET",c+"/git/commits/"+l,null,function(v,m){if(v)return g(v);g(null,m)})}),this.getSha=sync.util.promise.promisify(function(l,g,v){if(!g)return f.getRef("heads/"+encodeURIComponent(l),v);s("GET",c+"/contents/"+r(g)+(l?"?ref="+encodeURIComponent(l):""),null,function(m,R){if(m)return v(m);v(null,R.sha)})}),this.getTree=function(l,g){s("GET",c+"/git/trees/"+encodeURIComponent(l),null,function(v,m){if(v)return g(v);g(null,m.tree)})},this.getTreeRecursive=sync.util.promise.promisify(function(l,g){s("GET",c+"/git/trees/"+encodeURIComponent(l)+"?recursive=true",null,function(v,m){if(v)return g(v);g(null,m.tree)})}),this.postBlob=function(l,g){typeof l=="string"?l={content:l,encoding:"utf-8"}:l={content:n(String.fromCharCode.apply(null,new Uint8Array(l))),encoding:"base64"},s("POST",c+"/git/blobs",l,function(v,m){if(v)return g(v);g(null,m.sha)})},this.updateTree=function(l,g,v,m){var R={base_tree:l,tree:[{path:g,mode:"100644",type:"blob",sha:v}]};s("POST",c+"/git/trees",R,function(S,I){if(S)return m(S);m(null,I.sha)})},this.postTree=function(l,g){s("POST",c+"/git/trees",{tree:l},function(v,m){if(v)return g(v);g(null,m.sha)})},this.commit=function(l,g,v,m){var R={message:v,parents:[l],tree:g};s("POST",c+"/git/commits",R,function(S,I){if(S)return m(S);d.sha=I.sha,m(null,I.sha)})},this.getHead=sync.util.promise.promisify(function(l,g){s("GET",c+"/git/refs/heads/"+encodeURIComponent(l),null,function(v,m){if(v)return g(v);var R=null;if(m instanceof Array){for(var S=0;S<m.length;S++)if(m[S].ref=="refs/heads/"+l){R=m[S];break}}else R=m;R?g(null,R.object):g({error:404,message:"Branch not found"})})}),this.updateHead=function(l,g,v){s("PATCH",c+"/git/refs/heads/"+encodeURIComponent(l),{sha:g},v)},this.show=function(l){s("GET",c,null,l)},this.contributors=function(l,g){g=g||1e3;var v=this;s("GET",c+"/stats/contributors",null,function(m,R,S){if(m)return l(m);S.status===202?setTimeout(function(){v.contributors(l,g)},g):l(m,R)})},this.contents=function(l,g,v){s("GET",c+"/contents"+(g?"/"+r(g):""),{ref:l},v)},this.fork=function(l){s("POST",c+"/forks",null,l)},this.branch=function(l,g,v){arguments.length===2&&typeof arguments[1]=="function"&&(v=g,g=l,l="master"),this.getRef("heads/"+encodeURIComponent(l),function(m,R){if(m&&v)return v(m);f.createRef({ref:"refs/heads/"+g,sha:R},v)})},this.createPullRequest=function(l,g){s("POST",c+"/pulls",l,g)},this.listHooks=function(l){s("GET",c+"/hooks",null,l)},this.getHook=function(l,g){s("GET",c+"/hooks/"+l,null,g)},this.createHook=function(l,g){s("POST",c+"/hooks",l,g)},this.editHook=function(l,g,v){s("PATCH",c+"/hooks/"+l,g,v)},this.deleteHook=function(l,g){s("DELETE",c+"/hooks/"+l,null,g)},this.read=function(l,g,v){s("GET",c+"/contents/"+r(g)+(l?"?ref="+encodeURIComponent(l):""),null,function(m,R){if(m&&m.error===404)return v("not found",null,null);if(m)return v(m);v(null,R)},!0)},this.createFile=function(l,g,v,m,R){s("PUT",c+"/contents/"+r(g),{content:n(v),message:m,branch:l},function(S,I){if(S)return R(S);R(null,I)})},this.getContents=sync.util.promise.promisify(function(l,g,v){var m=this;s("GET",c+"/contents/"+r(g)+(l?"?ref="+encodeURIComponent(l):""),null,function(R,S){if(R&&R.error===404)return v("not found",null,null);if(R)return R.errorCode==="too_large"?m.getLargeContents(l,g,v):v(R);v(null,S)})}),this.getLargeContents=function(l,g,v){this.getSha(l,"").then(m=>({sha:m})).thenCatch(m=>{if(m.error===404)return this.getCommit(l);throw m}).then(({sha:m})=>this.getTreeRecursive(m)).then(m=>{for(var R of m)if(R.path===g){s("GET",R.url,null,v);break}}).thenCatch(v)},this.remove=function(l,g,v){f.getSha(l,g,function(m,R){if(m)return v(m);s("DELETE",c+"/contents/"+r(g),{message:g+" is removed",sha:R,branch:l},v)})},this.delete=function(l,g,v){f.getSha(l,g,function(m,R){if(!R)return v("not found",null);var S=c+"/contents/"+r(g),I={message:"Deleted "+g,sha:R};S+="?message="+encodeURIComponent(I.message),S+="&sha="+encodeURIComponent(I.sha),S+="&branch="+encodeURIComponent(l),s("DELETE",S,null,v)})},this.move=function(l,g,v,m){C(l,function(R,S){f.getTree(S+"?recursive=true",function(I,b){t.each(b,function(w){w.path===g&&(w.path=v),w.type==="tree"&&delete w.sha}),f.postTree(b,function(w,G){f.commit(S,G,"Deleted "+g,function(K,X){f.updateHead(l,X,function(ie){m(ie)})})})})})},this.write=function(l,g,v,m,R){f.getSha(l,g,function(S,I){if(S&&S.error!==404)return R(S);s("PUT",c+"/contents/"+r(g),{message:m,content:n(v),branch:l,sha:I},R)})},this.getCommits=function(l,g){l=l||{};var v=c+"/commits",m=[];if(l.sha&&m.push("sha="+encodeURIComponent(l.sha)),l.path&&m.push("path="+encodeURIComponent(l.path)),l.since){var R=l.since;R.constructor===Date&&(R=R.toISOString()),m.push("since="+encodeURIComponent(R))}if(l.until){var S=l.until;S.constructor===Date&&(S=S.toISOString()),m.push("until="+encodeURIComponent(S))}l.page&&m.push("page="+l.page),l.perpage&&m.push("per_page="+l.perpage),m.length>0&&(v+="?"+m.join("&")),s("GET",v,null,g)}},i.Gist=function(h){var _=h.id,p="/gists/"+_;this.read=function(f){s("GET",p,null,function(c,d){f(c,d)})},this.create=function(f,c){s("POST","/gists",f,c)},this.delete=function(f){s("DELETE",p,null,function(c,d){f(c,d)})},this.fork=function(f){s("POST",p+"/fork",null,function(c,d){f(c,d)})},this.update=function(f,c){s("PATCH",p,f,function(d,C){c(d,C)})},this.star=function(f){s("PUT",p+"/star",null,function(c,d){f(c,d)})},this.unstar=function(f){s("DELETE",p+"/star",null,function(c,d){f(c,d)})},this.isStarred=function(f){s("GET",p+"/star",null,function(c,d){f(c,d)})}},i.Issue=function(h){var _="/repos/"+h.user+"/"+h.repo+"/issues";this.list=function(p,f){var c=[];for(var d in p)p.hasOwnProperty(d)&&c.push(encodeURIComponent(d)+"="+encodeURIComponent(p[d]));u(_+"?"+c.join("&"),f)}},this.getIssues=function(h,_){return new i.Issue({user:h,repo:_})},this.getRepo=function(h,_){return new i.Repository({user:h,name:_})},this.getUser=function(){return new i.User},this.getGist=function(h){return new i.Gist({id:h})}};window.Github=i}).call(Ue);function E(e,t){this.gitCredentialsStore_=e,this.repositoryStore_=t,this.connectorToGitAccessMap_=[],this.retryPopupFlowDone_=!1}E.GITHUB_LOGIN_BTN_ID="github-oauth-button";E.BITBUCKET_LOGIN_BTN_ID="bitbucket-oauth-button";E.BITBUCKET_SERVER_LOGIN_BTN_ID="bitbucket-server-oauth-button";E.GITLAB_LOGIN_BTN_ID="gitlab-oauth-button";E.GITLAB_E_LOGIN_BTN_ID="gitlab-e-oauth-button";E.USR_PASS_LOGIN_FORM_ID="git-login-form";E.prototype.renderLoginInputElements_=function(e,t,n){var i=document.createDocumentFragment();t&&i.appendChild(t),i.appendChild(n),e.appendChild(i)};E.prototype.renderInlineLoginForm_=function(e,t,n){var i=goog.dom.createDom("div","git-login-form");return goog.dom.classlist.add(i,"modal-dialog-inner-content"),goog.dom.removeChildren(e),goog.dom.appendChild(e,i),this.renderLoginInputElements_(i,t,n),i};E.prototype.renderLoginDialog_=function(e,t,n){var i=workspace.createDialog();return i.setTitle(tr(msgs.GIT_CONNECT_DIALOG_TITLE_)),i.setButtonConfiguration(sync.api.Dialog.ButtonConfiguration.CANCEL),this.renderLoginInputElements_(i.getElement(),e,t),i.onSelect(n),i.show(),i};E.prototype.showLoginDialog=function(e,t,n,i){var o=goog.dom.createDom,r=null;function a(b){r=b}var s=goog.bind(function(b){if(typeof b=="string"){t&&(window.location.href=window.location.protocol+"//"+window.location.hostname+(window.location.port?":"+window.location.port:"")+window.location.pathname),I(m);return}switch(b.preventDefault(),b.stopPropagation(),b.currentTarget.id){case E.GITHUB_LOGIN_BTN_ID:r(E.GITHUB);break;case E.BITBUCKET_LOGIN_BTN_ID:r(E.BITBUCKET);break;case E.BITBUCKET_SERVER_LOGIN_BTN_ID:r(E.BITBUCKET_SERVER);break;case E.GITLAB_LOGIN_BTN_ID:r(E.GITLAB);break;case E.GITLAB_E_LOGIN_BTN_ID:r(E.GITLAB_E);break;case E.USR_PASS_LOGIN_FORM_ID:if(R())r(E.USERPASS,C.value,l.value,g.value);else return;break;default:console.error("Invalid login button");return}I(m)},this),u=null;if(e){var h=goog.dom.createDom("a",{href:e,style:"word-wrap: break-word;",target:"blank_"},e);h.addEventListener("click",function(){window.open(e,"_blank")}),u=trDom(msgs.REPO_NEED_AUTH_,{$REPO:h})}else u=tr(msgs.CONNECT_TO_ACCESS_REPOSITORIES_);var _=o("div",null,u),p,f="github-icon-octocat-large",c=function(b,w,G){var K=o("span",f),X=o("button",{title:tr(msgs.CONNECT_WITH_TOOLTIP_,{$WITH:b}),id:w},K,o("span","github-oauth-text",tr(msgs.CONNECT_WITH_,{$WITH:b})));return K.style.backgroundImage='url("'+sync.util.computeHdpiIcon("../plugin-resources/github-static/"+G)+'")',goog.events.listen(X,goog.events.EventType.CLICK,s),X};switch(n){case E.GITHUB:Y(E.GITHUB)?p=c("GitHub",E.GITHUB_LOGIN_BTN_ID,"Github70.png"):(_=null,p=S());break;case E.BITBUCKET:Y(E.BITBUCKET)?p=c("Bitbucket",E.BITBUCKET_LOGIN_BTN_ID,"bitbucket_logo_dark.png"):(_=null,p=S());break;case E.BITBUCKET_SERVER:Y(E.BITBUCKET_SERVER)?p=c("Bitbucket Server",E.BITBUCKET_SERVER_LOGIN_BTN_ID,"bitbucket_logo_dark.png"):(_=null,p=S());break;case E.GITLAB:Y(E.GITLAB)?p=c("GitLab",E.GITLAB_LOGIN_BTN_ID,"gitlab.png"):(_=null,p=S());break;case E.GITLAB_E:Y(E.GITLAB_E)?p=c("GitLab on-premise",E.GITLAB_E_LOGIN_BTN_ID,"gitlab-mono.png"):(_=null,p=S());break;default:var d=o("span","git-logo-image");d.style.backgroundImage='url("'+sync.util.computeHdpiIcon("../plugin-resources/github-static/Git-logo24.png")+'")';var C=o("input",{autofocus:"autofocus",className:"oxy-input",type:"text",autocorrect:"off",autocapitalize:"off"});C.setAttribute("autocomplete","username");var l=o("input",{type:"password",className:"oxy-input"});l.setAttribute("autocomplete","current-password");var g=o("input",{type:"text",className:"oxy-input"}),v=o("button",{id:"git-login-button",title:tr(msgs.CONNECT_USER_PASS_TOOLTIP_),type:"submit"},d,o("span","git-login-text",tr(msgs.CONNECT_USER_PASS_)));p=o("form",{id:E.USR_PASS_LOGIN_FORM_ID},o("span",null,tr(msgs.USERNAME_)+":"),o("div","git-req",C),o("span",null,tr(msgs.PASSWORD_)+":"),o("div","git-req",l),o("span",{title:tr(msgs.EMAIL_TO_SIGN_COMMITS_)},tr(msgs.EMAIL_)+" ",o("span",{style:"color:#7e7e7e;font-size:0.85em;"},"("+tr(msgs.OPTIONAL_)+"):")),g,v),goog.events.listen(p,goog.events.EventType.SUBMIT,s);break}var m=null;return i?this.renderInlineLoginForm_(i,_,p):m=this.renderLoginDialog_(_,p,s),a;function R(){var b=!0;return C.value||(b=!1,w(C)),l.value||(b=!1,w(l)),b;function w(G){G.style.backgroundColor="rgb(249, 185, 180)",setTimeout(function(){G.style.backgroundColor="rgb(255, 255, 255)"},400)}}function S(){var b=goog.dom.createDom("div",{style:"max-width:625px"}),w=tr(msgs.GH_PLUGIN_BAD_CONFIG_).split(/({\$ANCHOR_START}[^{]+{\$ANCHOR_END})/);return w.forEach(function(G){if(G.indexOf("{$ANCHOR_START}")===0){var K=goog.dom.createDom("a",{href:"admin.html#Plugins"},G.substring(15,G.indexOf("{$ANCHOR_END}")));K.addEventListener("click",function(){window.open("admin.html#Plugins","_blank")}),b.appendChild(K)}else b.appendChild(document.createTextNode(G))}),b}function I(b){b&&(b.hide(),b.dispose())}};E.GITHUB="github";E.BITBUCKET="bitbucket";E.BITBUCKET_SERVER="bitbucket-server";E.GITLAB="gitlab";E.GITLAB_E="gitlab-e";E.USERPASS="userpass";E.prototype.createGitAccess=function(e){var t=this,n=this.gitCredentialsStore_.getCredentials(e);if(n){var i=null;switch(n.type){case E.GITHUB:var o=new Github(n);i=new B(o);break;case E.BITBUCKET:i=new P(n.token,function(s){goog.net.XhrIo.send("../plugins-dispatcher/bitbucket-oauth/refresh",function(u){var h=u.target;h.getStatus()===200?goog.net.XhrIo.send("../plugins-dispatcher/git/credentials",function(_){var p=_.target;if(p.getStatus()===200){var f=p.getResponseJson();t.saveCredentials_(f),t.createGitAccess(E.BITBUCKET);var c=t.gitCredentialsStore_.getBitbucketCredentials();s(c&&c.token)}else s(null)}):s(null)})});break;case E.BITBUCKET_SERVER:i=new k;break;case E.GITLAB:i=new y(n.token,"https://gitlab.com",!1,null,function(s){goog.net.XhrIo.send("../plugins-dispatcher/gitlab-oauth/refresh",function(u){var h=u.target;h.getStatus()===200?goog.net.XhrIo.send("../plugins-dispatcher/git/credentials",function(_){var p=_.target;if(p.getStatus()===200){var f=p.getResponseJson();t.saveCredentials_(f),t.createGitAccess(E.GITLAB);var c=t.gitCredentialsStore_.getGitlabCredentials();s(c&&c.token)}else s(null)}):s(null)})});break;case E.GITLAB_E:var r=sync.options.PluginsOptions.getClientOption("gitlab-e.api_url"),a=sync.options.PluginsOptions.getClientOption("gitlab-e.version");a||(a=void 0),i=new y(n.token,r,!0,a,function(s){goog.net.XhrIo.send("../plugins-dispatcher/gitlab-e-oauth/refresh",function(u){var h=u.target;h.getStatus()===200?goog.net.XhrIo.send("../plugins-dispatcher/git/credentials",function(_){var p=_.target;if(p.getStatus()===200){var f=p.getResponseJson();t.saveCredentials_(f),t.createGitAccess(E.GITLAB_E);var c=t.gitCredentialsStore_.getGitlabEnterpriseCredentials();s(c&&c.token)}else s(null)}):s(null)})});break;case E.USERPASS:i=new $(this.repositoryStore_),i.setUserInformation(n.username,n.email);break}return this.connectorToGitAccessMap_[n.type]=i,goog.bind(function(){return this.connectorToGitAccessMap_[n.type]},this)}};E.prototype.getGitAccess=function(e){return this.connectorToGitAccessMap_[e]};E.prototype.removeGitAccess=function(e){delete this.connectorToGitAccessMap_[e]};E.prototype.showLoadMessage=function(e,t,n,i,o){this.showMessageInternal(e,!0,t,n,i,!0,function(){o.reportUnkownLoadingProblem(e)})};E.prototype.showMessageInternal=function(e,t,n,i,o,r,a){var s=this,u=workspace.createDialog("git-login-failed");u.setPreferredSize(500,null),u.setTitle(tr(msgs.ERROR_)),t&&!(sync.options.PluginsOptions.getClientOption("git.usingEnforcedCredentials")==="true"&&i===E.USERPASS)?u.setButtonConfiguration([{key:"login",caption:tr(msgs.CONNECT_WITH_DIFFERENT_USER_)},{key:"no",caption:tr(msgs.CANCEL_)}]):u.setButtonConfiguration(sync.api.Dialog.ButtonConfiguration.OK),u.getElement().appendChild(goog.dom.createDom("div",{style:"text-align:center;min-width:350px",class:"sync-legacy-line-height"},e)),u.onSelect(function(h){u.dispose(),h==="login"?s.authenticateUser(n,i,o,r):a&&a()}),u.show()};E.prototype.showMessage=function(e,t,n,i,o,r){this.showMessageInternal(e,t,n,i,o,r)};E.prototype.authenticateUser_=function(e,t,n,i,o){var r=this,a=o||goog.dom.getElementByClass("file-list-login-container"),s=r.showLoginDialog(n,i,t,a);s(function(u,h,_,p){var f;switch(u){case E.USERPASS:goog.net.XhrIo.send("../plugins-dispatcher/git/usrpass",function(C){var l=C.target;l.getStatus()===200?d():(console.error("UsrPass request failed"),r.showMessage(tr(msgs.ERROR_)))},"POST",JSON.stringify({username:h,password:_,email:p}),{"Content-Type":"application/json","X-Requested-With":"g"});return;case E.GITHUB:f="../plugins-dispatcher/github-oauth/authzurl";break;case E.BITBUCKET:f="../plugins-dispatcher/bitbucket-oauth/authzurl";break;case E.BITBUCKET_SERVER:f="../plugins-dispatcher/bitbucketserver-oauth/authzurl";break;case E.GITLAB:f="../plugins-dispatcher/gitlab-oauth/authzurl";break;case E.GITLAB_E:f="../plugins-dispatcher/gitlab-e-oauth/authzurl";break}goog.userAgent.EDGE_OR_IE&&(r.retryPopupFlowDone_=!0);var c=r.startPopupFlow_(f,d);c||(console.error("Failed to start popup flow"),r.showMessage(tr(msgs.ERROR_)));function d(){r.getCredentials_(function(C){if(!C)console.error("git/credentials error"),r.showMessage(tr(msgs.AUTH_FAILED_));else{r.saveCredentials_(C);var l=r.createGitAccess(u);if(!l){r.retryPopupFlowDone_?d():(console.error("Failed to retrieve git/credentials error"),r.showMessage(tr(msgs.AUTH_FAILED_)));return}var g=F(l);l().getUserInformation(function(v,m){var R;if(v){R=tr(msgs.ANONYMOUS_);try{localStorage.setItem(g+V,R),localStorage.removeItem(g+Z)}catch(S){console.warn(S)}}else try{!m.user&&!m.email?R=localStorage.getItem(g+V):(R=m.user,localStorage.setItem(g+V,m.user),localStorage.setItem(g+Z,m.email))}catch(S){console.warn(S)}workspace.setUserInfo(R),workspace.getNotificationManager().showInfo(tr(msgs.CONNECTED_AS_,{$USER_NAME:R})),a&&goog.dom.removeChildren(a),e(l)})}})}})};E.prototype.authenticateUser=function(e,t,n,i,o,r){var a=this;a.retryPopupFlowDone_=!1,i===!0&&a.clearCredentials_(t);var s=a.createGitAccess(t);if(s){e(s);return}else return t===E.USERPASS&&sync.options.PluginsOptions.getClientOption("git.usingEnforcedCredentials")==="true"?a.getCredentials_(function(u){if(!u)console.error("git/enforced credentials error"),a.showMessage(tr(msgs.ERROR_));else{a.saveCredentials_(u),workspace.getNotificationManager().showInfo(tr(msgs.CONNECTED_AS_,{$USER_NAME:u.username}));var h=a.createGitAccess(t);e(h)}}):a.getCredentials_(function(u){if(!u)console.error("git/enforced credentials error"),a.showMessage(tr(msgs.ERROR_));else{a.saveCredentials_(u);var h=a.createGitAccess(t);h?e(h):a.authenticateUser_(e,t,n,o,r)}})};E.prototype.getUserName=function(e){return localStorage.getItem(e+V)};E.prototype.getCredentials_=function(e){goog.net.XhrIo.send("../plugins-dispatcher/git/credentials",function(t){var n=t.target;if(n.getStatus()===200){var i=n.getResponseJson();e(i)}else e(null)})};E.prototype.saveCredentials_=function(e){e.githubAccessToken?this.gitCredentialsStore_.setGitHubCredentials({type:E.GITHUB,token:e.githubAccessToken,auth:"oauth"}):this.gitCredentialsStore_.removeGitHubCredentials(),e.bitbucketAccessToken?this.gitCredentialsStore_.setBitbucketCredentials(e.bitbucketAccessToken):this.gitCredentialsStore_.removeBitbucketCredentials(),e.bitbucketServerAccessToken?this.gitCredentialsStore_.setBitbucketServerCredentials(e.bitbucketServerAccessToken):this.gitCredentialsStore_.removeBitbucketServerCredentials(),e.gitlabAccessToken?this.gitCredentialsStore_.setGitlabCredentials(e.gitlabAccessToken):this.gitCredentialsStore_.removeGitlabCredentials(),e.gitlabEnterpriseAccessToken?this.gitCredentialsStore_.setGitlabEnterpriseCredentials(e.gitlabEnterpriseAccessToken):this.gitCredentialsStore_.removeGitlabEnterpriseCredentials(),e.username?this.gitCredentialsStore_.setUsrPassCredentials(e.username,e.email):this.gitCredentialsStore_.removeUsrPassCredentials()};E.prototype.clearCredentials_=function(e){switch(e){case E.GITHUB:this.gitCredentialsStore_.removeGitHubCredentials();break;case E.BITBUCKET:this.gitCredentialsStore_.removeBitbucketCredentials();break;case E.BITBUCKET_SERVER:this.gitCredentialsStore_.removeBitbucketServerCredentials();break;case E.GITLAB:this.gitCredentialsStore_.removeGitlabCredentials();break;case E.GITLAB_E:this.gitCredentialsStore_.removeGitlabEnterpriseCredentials();break;case E.USERPASS:this.gitCredentialsStore_.removeUsrPassCredentials();break;default:this.gitCredentialsStore_.removeAll();break}};E.prototype.startPopupFlow_=function(e,t){var n=window.open(e);if(n){var i=setInterval(function(){n.closed&&(clearInterval(i),t())},500);return!0}else return!1};function F(e){var t;return e()instanceof B?t=E.GITHUB:e()instanceof P?t=E.BITBUCKET:e()instanceof k?t=E.BITBUCKET_SERVER:e()instanceof y?e().isOnPremise()?t=E.GITLAB_E:t=E.GITLAB:t=E.USERPASS,t}function j(e){switch(typeof e!="string"&&(e=F(e)),e){case E.GITHUB:return"gh";case E.BITBUCKET:return"bb";case E.BITBUCKET_SERVER:return"bbsv";case E.GITLAB:return"gl";case E.GITLAB_E:return"gle";case E.USERPASS:default:return""}}function Q(e,t,n,i){this.repos=null,this.defaultRepos=t,this.token_=null,this.handler_=null,this.maxMatches_=null,this.repoUrl=null,this.repositoryUrl=i;var o=z.getGitAccess(n);o?this.getUserRepositories_(o,n):z.authenticateUser(goog.bind(function(s){this.getUserRepositories_(s(),n)},this),n,i,!1,!1),this.renderer=new goog.ui.ac.Renderer(e.parentNode),this.inputhandler=new goog.ui.ac.InputHandler(null,null,!1,300),this.ac=new goog.ui.ac.AutoComplete(this,this.renderer,this.inputhandler),this.inputhandler.attachAutoComplete(this.ac),this.inputhandler.attachInputs(e),this.ac.setAutoHilite(!0);var r=goog.events.EventType,a=new goog.events.EventHandler(this);a.listen(e,r.FOCUS,goog.bind(this.expandSuggestions_,this)),a.listen(e,r.BLUR,goog.bind(function(){this.setRepo(e)},this),!0),a.listen(e,r.PASTE,goog.bind(function(){setTimeout(goog.bind(function(){this.setRepo(e)},this),0)},this),!0),a.listen(e,r.KEYDOWN,goog.bind(function(s){s.keyCode===goog.events.KeyCodes.TAB?this.setRepo(e):s.keyCode===goog.events.KeyCodes.ENTER&&(this.setRepo(e,!0),s.stopPropagation())},this)),a.listen(this.ac,goog.ui.ac.AutoComplete.EventType.UPDATE,goog.bind(function(s){s.row&&this.setRepo(e)},this)),this.eventHandler=a,setTimeout(function(){e.focus(),this.expandSuggestions_()}.bind(this),0),goog.events.EventTarget.call(this)}goog.inherits(Q,goog.events.EventTarget);Q.prototype.expandSuggestions_=function(){this.ac&&this.ac.getSelectionHandler().update(!0)};Q.prototype.getUserRepositories_=function(e,t){var n=this;(function i(){e.getUserRepositories(function(o,r){if(o&&o.status===401){z.authenticateUser(i,t,n.repositoryUrl,!0);return}n.reposReceived_(o,r)})})()};Q.prototype.reposReceived_=function(e,t){e||(this.repos=t,this.repos.length===0&&this.defaultRepos&&(this.repos=this.defaultRepos),this.handler_&&(this.requestMatchingRows(this.token_,this.maxMatches_,this.handler_),this.handler_=null,this.maxMatches_=null,this.token_=null),this.expandSuggestions_())};Q.prototype.disposeInternal=function(){this.eventHandler&&(this.eventHandler.dispose(),this.eventHandler=null),this.ac&&(this.ac.dispose(),this.ac=null),this.renderer&&(this.renderer.dispose(),this.renderer=null),this.inputHandler&&(this.inputHandler.dispose(),this.inputHandler=null)};Q.prototype.requestMatchingRows=function(e,t,n){if(this.repos){var i=this.repos.filter(function(o){return o.toLowerCase().indexOf(e.toLowerCase())!==-1});goog.array.sort(i),n(e,i)}else this.handler_=n,this.token_=e,this.maxMatches_=t};Q.prototype.getRepoByUrl=function(e){var t=null,n=e.match(/https?:\/\/(?:www)?github.com\/([^/]+\/[^/]+)/);if(n&&(e="https://github.com/"+n[1]),this.repos){for(var i=0;i<this.repos.length;i++)if(this.repos[i]===e){t=this.repos[i];break}}return t};Q.prototype.setRepo=function(e,t){var n=e.value.trim();n!==this.repoUrl?n&&(this.repoUrl=n,this.dispatchEvent({type:"github-repo-chosen",url:n,repo:this.getRepoByUrl(n)})):t&&this.dispatchEvent({type:"github-repo-set"})};var de={},Fe=/<([^>]+)>;\srel="next"/;function y(e,t,n,i,o){D.call(this),this.accessToken_=e,this.refresher_=o,this.userName_=null,this.userId_=null,this.apiPrefix_=t||"https://gitlab.com",this.apiVersion_="/api/v4",this.onPremise_=n,this.gitlabVersion_=i,this.gitlabVersion_&&me(this.gitlabVersion_,"9.0.0")<0&&(this.apiVersion_="/api/v3")}goog.inherits(y,D);y.prototype.isOnPremise=function(){return!!this.onPremise_};y.prototype.retryAfterRefresh_=function(e,t){var n=this;this.refresher_(function(i){i?(n.accessToken_=i,e()):t({status:401,message:tr(msgs.NOT_AUTHORIZED_TO_ACCESS_REPO_)})})};y.prototype.__=function(e){var t=this,n=[];[].push.apply(n,arguments),n.shift(),t.version_(function(i){var o=goog.array.find(Me,function(r){return me(r.version,i)<=0&&r.functions[e]});o.functions[e].apply(t,n)})};y.prototype.version_=function(e){var t=this;if(typeof t.gitlabVersion_=="string")return e(t.gitlabVersion_);t.api_("/version",function(n){var i=n.getStatus();if(i===200){var o=n.getResponseJson();if(o.version){var r=o.version.replace(/[^0-9.]/g,"");return me(r,"9.0.0")<0&&(this.apiVersion_="/api/v3"),t.gitlabVersion_=r,e(r)}}else i===401?t.retryAfterRefresh_(t.version_.bind(t,e),e):this.apiVersion_="/api/v3";t.gitlabVersion_="",e(t.gitlabVersion_)})};y.prototype.commit=function(e,t,n,i,o,r,a){this.__("commit",e,t,n,i,o,r,a)};y.prototype.commitCheckedFF=function(e,t,n,i,o,r,a){var s=this;s.repoId_(e,function(u,h){if(u)return oe(u,a);var _="/projects/"+h+"/repository/files/"+encodeURIComponent(n);s.api_(_,"PUT",{branch:t,encoding:"base64",content:sync.util.encodeB64(i),commit_message:o,last_commit_id:r.commitSha},function(p){var f=p.getStatus();if(f===200)s.getDocument(e,t,n,function(C,l){if(C)return oe(C,a);a({type:"ok",documentInfo:l})});else if(f===401)s.retryAfterRefresh_(s.commitCheckedFF.bind(s,e,t,n,i,o,r,a),a);else{var c=p.getResponseJson();if(f===400&&c.message==="You are attempting to update a file that has changed since you started editing it."){s.getDocument(e,t,n,function(C,l){a({type:"merge",mergeParams:{ancestor:r.documentContent,left:i,right:l.documentContent},latestDocumentInfo:l})});return}var d={status:f,message:c.message};oe(d,a)}})})};y.prototype.commitUncheckedFF=function(e,t,n,i,o,r,a){var s=this;s.repoId_(e,function(u,h){if(u)return oe(u,a);if(r===null)return _();s.getDocument(e,t,n,function(p,f){if(p)return oe(p,a);f.documentSha===r.documentSha?_():a({type:"merge",mergeParams:{ancestor:r.documentContent,left:i,right:f.documentContent},latestDocumentInfo:f})});function _(){var p="/projects/"+h+"/repository/files?file_path="+encodeURIComponent(n)+"&ref="+encodeURIComponent(t),f="/projects/"+h+"/repository/files/"+encodeURIComponent(n);s.api_({v3:p,v4:f},"PUT",{branch:t,branch_name:t,encoding:"base64",content:sync.util.encodeB64(i),commit_message:o},function(c){var d=c.getStatus();if(d===200)s.getDocument(e,t,n,function(g,v){if(g)return oe(g,a);a({type:"ok",documentInfo:v})});else if(d===401)s.retryAfterRefresh_(s.commitUncheckedFF.bind(s,e,t,n,i,o,r,a),a);else{var C=c.getResponseJson(),l={status:d,message:C.message};oe(l,a)}})}})};y.prototype.write=function(e,t,n,i,o,r){this.commitUncheckedFF(e,t,n,i,o,null,r)};y.prototype.startMerge=function(e,t,n,i,o,r){i.repositoryUri=e,N.merge("",i,function(a){var s=a.getStatus();if(s===200){var u=a.getResponseText(),h=a.getResponseHeader(N.merge.RET_HEADER);h===J.CLEAN||h===J.IDENTICAL?r(null,{diffUrl:null,mergedFile:u,repositoryUri:e,branch:t,path:n,message:o}):r(null,{diffUrl:null})}else r({status:s,message:tr(msgs.ERROR_)}),console.error(a.getResponseText())})};y.prototype.endMerge=function(e,t,n){var i=e.repositoryUri,o=e.branch,r=e.path,a=e.message,s=e.mergedFile;this.commitUncheckedFF(i,o,r,s,a,t,n)};y.prototype.setUserInformation=function(e,t){};y.prototype.getUserInformationInternal_=function(e){var t=this;t.api_("/user",function(n){var i=n.getStatus();if(i===200){var o=n.getResponseJson(),r=o.name||o.username,a=o.email;t.userName_=o.username,t.userId_=o.id,e(null,{user:r,email:a})}else i===401?t.retryAfterRefresh_(t.getUserInformationInternal_.bind(t,e),e):U(i,e)})};y.prototype.getUserInformation=sync.util.promise.promisify(y.prototype.getUserInformationInternal_);y.prototype.getUserRepositories=function(e){var t=this,n=[];t.api_("/projects?order_by=updated_at&simple=true&membership=true&per_page=100",function(i,o){var r=i.getStatus();if(r===200){var a=i.getResponseJson();n=n.concat(a.map(function(s){return s.web_url})),o&&e(null,n)}else r===401?t.retryAfterRefresh_(t.getUserRepositories.bind(t,e),e):U(r,e)})};y.prototype.getDocumentInternal_=function(e,t,n,i){var o=this;o.repoId_(e,function(r,a){if(r)return i(r);var s=encodeURIComponent(n),u="/projects/"+a+"/repository/files?file_path="+s+"&ref="+encodeURIComponent(t),h="/projects/"+a+"/repository/files/"+s+"?ref="+encodeURIComponent(t);o.api_({v3:u,v4:h},function(_){var p=_.getStatus();if(p===200){var f=_.getResponseJson(),c=f.blob_id,d=sync.util.decodeB64(f.content),C=f.last_commit_id||f.commit_id;Pe()&&(C=f.commit_id),i(null,{documentSha:c,documentContent:d,commitSha:C})}else p===401?o.retryAfterRefresh_(o.getDocumentInternal_.bind(o,e,t,n,i),i):(console.error(p,_.getResponseText()),U(p,i))})})};y.prototype.getDocument=sync.util.promise.promisify(y.prototype.getDocumentInternal_);y.prototype.getBranches=function(e,t){var n=this;n.repoId_(e,function(i,o){n.api_("/projects/"+o+"/repository/branches?per_page=100",function(r,a){var s=r.getStatus();if(s===200){var u=r.getResponseJson();u=u.map(function(h){return h.name}),t(null,u)}else s===401?n.retryAfterRefresh_(n.getBranches.bind(n,e,t),t):U(s,t)})})};y.prototype.canPush=function(e,t,n){this.repoId_(e,(o,r,a)=>{if(o){i(o,n);return}this.canPushOnBranch_(r,t).then(s=>s===!0?{canPushInRepository:!0,canPushOnBranch:!0}:this.canPushInRepo_(r,a).then(u=>({canPushInRepository:u,canPushOnBranch:s}))).then(s=>n(s.canPushInRepository,s.canPushOnBranch)).thenCatch(s=>i(s,n))});function i(o,r){console.error("Failed to determine if user can push ["+o.status+", "+o.message+"]"),r(void 0)}};y.prototype.canPushOnBranch_=sync.util.promise.promisify(function(e,t,n){var i="/projects/"+e+"/repository/branches/"+encodeURIComponent(t);this.api_(i,function(o){var r=o.getStatus();if(r===200){var a=o.getResponseJson();n(null,a.can_push)}else r===401?this.retryAfterRefresh_(this.canPushOnBranch_.bind(this,e,t,n),n):U(r,n,o.getResponseText())}.bind(this))});y.prototype.canPushInRepo_=sync.util.promise.promisify(function(e,t,n){this.ensureUserInfo_().then(({userId:i})=>this.getRepositoryMemberForId_(e,i)).then(i=>n(null,this.memberCanPushInRepo_(i,t))).thenCatch(i=>n(i))});y.prototype.getRepositoryMemberForIdInternal_=function(e,t,n){var i=[];this.api_("/projects/"+e+"/members/all?per_page=100&user_ids="+encodeURIComponent(t),function(o,r){var a=o.getStatus();if(a!==200)U(a,n,o.getResponseText());else if(a===401)this.retryAfterRefresh_(this.getRepositoryMemberForIdInternal_.bind(this,e,t,n),n);else{var s=o.getResponseJson();if(i=i.concat(s),r){var u=goog.array.find(i,function(h){return h.id===t});n(null,u)}}}.bind(this))};y.prototype.getRepositoryMemberForId_=sync.util.promise.promisify(y.prototype.getRepositoryMemberForIdInternal_);y.prototype.memberCanPushInRepo_=function(e,t){var n=30;if(e)return e.access_level>=n;var i=t.projectAccessLevel||t.groupAccessLevel;return i>=n};y.prototype.canFork=function(e){this.__("canFork",e)};y.prototype.yesCanFork=function(e){e(!0)};y.prototype.noCantFork=function(e){e(!1)};y.prototype.createFork=sync.util.promise.promisify(function(e,t){this.__("createFork",e,t)});y.prototype.doCreateFork=function(e,t){var n=this;n.api_("/namespaces",function(i){var o=i.getStatus();if(o===200){var r=i.getResponseJson(),a=goog.array.find(r,function(s){return s.kind==="user"});n.repoId_(e,function(s,u){if(s)return t(s);var h="/projects/"+u+"/fork";me(n.gitlabVersion_,"9.0.0")<0&&(h="/projects/fork/"+u),function _(p){n.api_(h,"POST",{namespace:a.id},function(f){var c=f.getStatus();if(c===201){var d=f.getResponseJson();t(null,d.web_url)}else if(c===401)n.retryAfterRefresh_(n.doCreateFork.bind(n,e,t),t);else{if(c===0&&--p>0)return _(p);if(c===409){var C=f.getResponseText()||"";if(C.indexOf("has already been taken")!==-1){var l=e.substring(e.lastIndexOf("/")+1);return n.ensureUserInfo_(function(g,{userName:v}){if(g)return console.error(g),U(c,t);var m=n.apiPrefix_+"/"+v+"/"+l;t(null,m)})}}U(c,t)}})}(3)})}else o===401?this.retryAfterRefresh_(this.doCreateFork.bind(this,e,t),t):U(o,t)})};y.prototype.failCreateFork=function(e,t){U(400,t)};y.prototype.branchFromRepoToRepo=function(e,t,n,i,o){var r=this;if(e===n)return r.createBranch_(e,t,i,o);var a="gl";r.isOnPremise()&&(a="gle");var s={repositoryUri:n,newBranch:i,sourceRepositoryUri:e,sourceBranch:t};N.createBranch(a,s,function(u){var h=u.getStatus();if(h===200)switch(u.getResponseHeader(N.createBranch.RET_HEADER)){case N.createBranch.RET_SUCCESS:o(null,i);break;case N.createBranch.RET_ERROR:default:U(500,o,u.getResponseText());break}else U(h,o)})};y.prototype.createBranch_=function(e,t,n,i){var o=this;o.repoId_(e,function(r,a){if(r)return i(r);o.api_("/projects/"+a+"/repository/branches/"+encodeURIComponent(t),function(s){var u=s.getStatus();if(u===200){var h=s.getResponseJson(),_=h.commit.id;o.api_("/projects/"+a+"/repository/branches","POST",{branch:n,branch_name:n,ref:_},function(p){var f=p.getStatus();if(f===201){var c=p.getResponseJson();i(null,c.name)}else f===401?o.retryAfterRefresh_(o.createBranch_.bind(o,e,t,n,i),i):U(f,i)})}else u===401?o.retryAfterRefresh_(o.createBranch_.bind(o,e,t,n,i),i):U(u,i)})})};y.prototype.getUrlOfCommit=function(e,t,n){n(e+"/commit/"+t)};y.prototype.openPullRequest=sync.util.promise.promisify(function(e,t,n,i,o,r,a){this.__("openPullRequest",e,t,n,i,o,r,a)});y.prototype.doOpenPullRequest=function(e,t,n,i,o,r,a){var s=this;s.repoId_(t,function(u,h){if(u)return a(u);s.repoId_(e,function(_,p){if(_)return a(_);s.api_("/projects/"+p+"/merge_requests","POST",{title:r,description:o,source_branch:n,target_branch:i,target_project_id:h},function(f){var c=f.getStatus();if(c===201)a(null,"");else if(c===401)s.retryAfterRefresh_(s.doOpenPullRequest.bind(s,e,t,n,i,o,r,a),a);else{try{console.error(f.getResponseText())}catch{}U(c,a)}})})})};y.prototype.failOpenPullRequest=function(e,t,n,i,o,r,a){console.error("OpenPullRequest Not Available"),U(400,a)};y.prototype.api_=function(e,t,n,i){var o=this;arguments.length===2?(i=t,t="GET"):n&&(n=Object.keys(n).map(function(s){return encodeURIComponent(s)+"="+encodeURIComponent(n[s])}).join("&")),typeof e=="object"&&(this.apiVersion_==="/api/v4"?e=e.v4:e=e.v3);var r={"Content-Type":"application/x-www-form-urlencoded"};o.accessToken_.indexOf("<oxy>")===0?r["PRIVATE-TOKEN"]=o.accessToken_.substring(5):r.Authorization="Bearer "+o.accessToken_;var a=this.apiPrefix_+this.apiVersion_+e;(function s(u){goog.net.XhrIo.send(u,function(h){var _=h.target,p=_.getResponseHeader("LINK"),f=Fe.exec(p),c=f&&f[1],d=i.length===2;typeof c=="string"&&d?(i(_,!1),s(c)):i(_,!0)},t,n,r)})(a)};y.prototype.repoId_=function(e,t){var n=this;if(goog.string.endsWith(e,".git")&&(e=e.substring(0,e.lastIndexOf(".git"))),de[e])return t(null,de[e].id,de[e].repoInfo);var i=encodeURIComponent(e.substring(n.apiPrefix_.length+1));n.api_("/projects/"+i,function(o){var r=o.getStatus();if(r===200){var a=o.getResponseJson(),s,u;a.permissions&&(a.permissions.group_access&&(s=a.permissions.group_access.access_level),a.permissions.project_access&&(u=a.permissions.project_access.access_level));var h={groupAccessLevel:s,projectAccessLevel:u};de[e]={id:a.id,repoInfo:h},t(null,a.id,h)}else r===401?n.retryAfterRefresh_(n.repoId_.bind(n,e,t),t):U(r,t)})};y.prototype.ensureUserInfo_=sync.util.promise.promisify(function(e){var t=this;t.userName_?e(null,{userName:t.userName_,userId:t.userId_}):t.getUserInformation(function(n,i){n?e(n,null):e(null,{userName:t.userName_,userId:t.userId_})})});var Me=[{version:"9.3.9",functions:{commit:y.prototype.commitCheckedFF}},{version:"9.2.5",functions:{canFork:y.prototype.yesCanFork}},{version:"7.12.0",functions:{createFork:y.prototype.doCreateFork}},{version:"6.9.0",functions:{openPullRequest:y.prototype.doOpenPullRequest}},{version:"",functions:{commit:y.prototype.commitUncheckedFF,createFork:y.prototype.failCreateFork,canFork:y.prototype.noCantFork,openPullRequest:y.prototype.failOpenPullRequest}}];function oe(e,t){e.status===401||e.status===403?t({type:"no-access",error:e}):t({type:"fail",error:e})}function me(e,t){for(var n=e.split("."),i=t.split("."),o=0;o<3;o++){var r=Number(n[o]),a=Number(i[o]);if(r>a)return 1;if(a>r)return-1;if(!isNaN(r)&&isNaN(a))return 1;if(isNaN(r)&&!isNaN(a))return-1}return 0}var N=function(){var e="OXY-C-STATUS";{let u=function(h,_,p){goog.net.XhrIo.send("../plugins-dispatcher/git/branch-create?auth="+h,function(f){p(f.target)},"POST",JSON.stringify(_),{"X-Requested-With":"g"})};var t=u;u.RET_HEADER=e,u.RET_SUCCESS="success",u.RET_ERROR="error"}{let u=function(h,_,p){goog.net.XhrIo.send("../plugins-dispatcher/git/commit?auth="+h,function(f){p(f.target)},"POST",JSON.stringify(_),{"X-Requested-With":"g"})};var n=u;u.RET_HEADER=e,u.RET_OK="ok",u.RET_FAIL="fail",u.RET_MERGE="merge",u.MERGE_RESULT_HEADER="OXY-M-RESULT",u.LATEST_SHA_HEADER="OXY-LATEST-SHA"}{let u=function(h,_,p){goog.net.XhrIo.send("../plugins-dispatcher/git/write?auth="+h,function(f){p(f.target)},"POST",JSON.stringify(_),{"X-Requested-With":"g"})};var i=u;u.RET_HEADER=e,u.RET_OK="ok",u.RET_FAIL="fail"}{let u=function(h,_,p){goog.net.XhrIo.send("../plugins-dispatcher/git/branch-exists?auth="+h,function(f){p(f.target)},"POST",JSON.stringify(_),{"X-Requested-With":"g"})};var o=u;u.RET_HEADER=e,u.RET_SUCCESS="success",u.RET_ERROR="error"}{let u=function(h,_){goog.net.XhrIo.send("../plugins-dispatcher/git/branches",function(p){_(p.target)},"POST",JSON.stringify({repositoryUri:h}),"",{"X-Requested-With":"g"})};var r=u;u.RET_HEADER=e,u.RET_ERROR="error"}{let u=function(h,_,p){var f="";h&&(f="?auth="+h),goog.net.XhrIo.send("../plugins-dispatcher/git/merge"+f,function(c){p(c.target)},"POST",JSON.stringify(_),{"X-Requested-With":"g"})};var a=u;u.RET_HEADER="OXY-Merge-Result"}var s=function(h,_,p,f,c){var d="";h&&(d="?auth="+h),goog.net.XhrIo.send("../plugins-dispatcher/git/submodule-resolve"+d,function(C){c(C.target)},"POST",JSON.stringify({repositoryUri:_,branch:p,path:f}),{"X-Requested-With":"g"})};return{commit:n,write:i,createBranch:t,branchExists:o,branches:r,merge:a,resolveSubmodule:s}}();window.JGit=N;function Te(){this.prefix_="grs::"}Te.prototype.saveRepository=function(e,t){try{var n=localStorage.getItem(this.prefix_+H(e));n=n?JSON.parse(n):[],n.indexOf(t)===-1&&n.push(t),localStorage.setItem(this.prefix_+H(e),JSON.stringify(n))}catch(i){console.warn(i)}};Te.prototype.getSavedRepositories=function(e){var t;try{t=localStorage.getItem(this.prefix_+H(e)),t=t?JSON.parse(t):[]}catch(n){console.warn(n),t=[]}return t};function le(e,t){sync.actions.Action.call(this,{}),this.fileLocation_=e,this.gitAccess_=t}goog.inherits(le,sync.actions.Action);le.prototype.ID="Git/ViewOn";le.prototype.actionPerformed=function(e){var t,n=this.fileLocation_,i=n.repositoryUri.replace(/\.git$/,""),o=n.branch,r=n.filePath.split("/").map(encodeURIComponent).join("/");switch(F(this.gitAccess_)){case E.BITBUCKET:t=i+"/src/"+this.gitAccess_().getBranchHashOrName(o)+"/"+r;break;case E.BITBUCKET_SERVER:var a=i.match(/^(.*?)\/scm\/([^/]+)\/([^/]+)/),s=a[1],u=a[2],h=a[3];t=s+"/projects/"+u+"/repos/"+h+"/browse/"+r+"?at="+o;break;case E.GITHUB:case E.GITLAB:case E.GITLAB_E:t=i+"/blob/"+o+"/"+r;break;default:console.error("ViewOnAction default case should never happen."),e();return}window.open(t,"_blank"),e()};le.prototype.getDisplayName=function(){return tr(msgs.VIEW_ON_,{$SITE:Oe(F(this.gitAccess_))})};le.prototype.getDescription=function(){return tr(msgs.VIEW_ON_DESCRIPTION_,{$SITE:Oe(F(this.gitAccess_))})};var te=new M,ne=new Te,z=new E(te,ne),Se=new he;Ge();function Ge(){var e=sync.options.PluginsOptions.getClientOption("git.generic_disabled");(e==="off"||e==="")&&workspace.getFileServersManager().registerFileServerConnector({id:"git",name:"Git",icon:sync.util.computeHdpiIcon("../plugin-resources/github-static/Git-logo70.png"),matches:goog.bind(ge,this,E.USERPASS),fileServer:new W(te,ne,E.USERPASS)}),Y(E.GITHUB)&&workspace.getFileServersManager().registerFileServerConnector({id:"github",name:"GitHub",icon:sync.util.computeHdpiIcon("../plugin-resources/github-static/Github70.png"),matches:goog.bind(ge,this,E.GITHUB),fileServer:new W(te,ne,E.GITHUB)}),Y(E.BITBUCKET)&&workspace.getFileServersManager().registerFileServerConnector({id:"bitbucket",name:"Bitbucket",icon:sync.util.computeHdpiIcon("../plugin-resources/github-static/bitbucket_logo_dark.png"),matches:goog.bind(ge,this,E.BITBUCKET),fileServer:new W(te,ne,E.BITBUCKET)}),Y(E.BITBUCKET_SERVER)&&workspace.getFileServersManager().registerFileServerConnector({id:"bitbucket_server",name:"Bitbucket Server",icon:sync.util.computeHdpiIcon("../plugin-resources/github-static/bitbucket_logo_dark.png"),matches:goog.bind(ge,this,E.BITBUCKET_SERVER),fileServer:new W(te,ne,E.BITBUCKET_SERVER)}),Y(E.GITLAB)&&workspace.getFileServersManager().registerFileServerConnector({id:"gitlab",name:"GitLab",icon:sync.util.computeHdpiIcon("../plugin-resources/github-static/gitlab.png"),matches:goog.bind(ge,this,E.GITLAB),fileServer:new W(te,ne,E.GITLAB)}),Y(E.GITLAB_E)&&workspace.getFileServersManager().registerFileServerConnector({id:"gitlab-e",name:"GitLab on-premise",icon:sync.util.computeHdpiIcon("../plugin-resources/github-static/gitlab-mono.png"),matches:goog.bind(ge,this,E.GITLAB_E),fileServer:new W(te,ne,E.GITLAB_E)})}function ge(e,t){if(!!Ce(t)){var n=!1,i=Ee(t);if(i){var o=i.match(/git(?:([^:]+))?/)[1],r=we(o);n=e===r}return n}}goog.events.listenOnce(workspace,sync.api.Workspace.EventType.BEFORE_DASHBOARD_LOADED,function(e){var t=e.options,n=t.gh_repo;if(n){var i=t.gh_branch||"master",o=t.gh_ditamap,r="https://github.com/"+n,a="gitgh://"+encodeURIComponent(r)+"/"+encodeURIComponent(i)+"/",s=o?a+o:null;sync.util.setUrlParameter("gh_repo"),sync.util.setUrlParameter("gh_branch"),sync.util.setUrlParameter("gh_ditamap"),sync.util.setUrlParameter("folderUrl",a),sync.util.setUrlParameter("ditamap",s),window.location.reload()}});goog.events.listen(workspace,sync.api.Workspace.EventType.BEFORE_EDITOR_LOADED,function(e){var t=e.options.url,n=e.editor;if(!Ce(t))return;e.options.inplaceReferenceEditingSupported=!0,e.preventDefault();var i=Ee(t),o=e.options;o.url=i,o.sharedSessionCompatible=!0,O=_e(i);var r=E.USERPASS,a=i.match(/git(?:([^:]+))?/)[1];switch(a){case"gh":r=E.GITHUB;break;case"bb":r=E.BITBUCKET;break;case"bbsv":r=E.BITBUCKET_SERVER;break;case"gl":r=E.GITLAB;break;case"gle":r=E.GITLAB_E;break}z.authenticateUser(u.bind(this,n),r,O.repositoryUri,!1,!0);function s(c){var d=goog.Promise.resolve(),C=sync.util.getURLParameter("author");return C?d:c().getUserInformation().then(function(l){!l.user&&!l.email?o.userName=localStorage.getItem(r+V):(o.userName=l.user,localStorage.setItem(r+V,l.user),localStorage.setItem(r+Z,l.email))}).thenCatch(function(l){o.userName=tr(msgs.ANONYMOUS_),localStorage.setItem(r+V,tr(msgs.ANONYMOUS_)),localStorage.removeItem(r+Z)})}function u(c,d){setTimeout(function(){c.getLoadingIndicator().setVisible(!0)},0),He(d).then(function(){setTimeout(goog.bind(function(){c.getLoadingIndicator().setVisible(!0),Ke(d).then(()=>{var C=d().getDocument(O.repositoryUri,O.branch,O.filePath),l=o.loadTeams==="true"?d().getTeams(O.user):goog.Promise.resolve([]);l=l.then(function(g){o.teams=g}).thenCatch(function(g){console.warn(g)}),goog.Promise.all([C,l,s(d),ze(d,O.repositoryUri,e.options)]).then(function(g){h(d,g[0])}).thenCatch(function(g){p(d,u.bind(this,c),g)})})},this))})}function h(c,d){var C=d.documentContent;ne.saveRepository(F(c),O.repositoryUri);var l=new ce;l.update(d.documentSha,d.commitSha,C),o.content||(o.content=C),F(c)===E.BITBUCKET_SERVER&&!re&&n.setReadOnlyState({readOnly:!0,message:tr(msgs.READ_ONLY_),code:"400"}),goog.events.listen(workspace,sync.api.Workspace.EventType.EDITOR_LOADED,function(g){try{var v=goog.dom.createDom,m=new goog.ui.AdvancedTooltip(document.querySelector("#titleDiv"));m.getElement().appendChild(v("div","tooltip-hovercard gh-location-tooltip",tr(msgs.DOCUMENT_INFORMATION_)+":",v("div","",tr(msgs.REPOSITORY_)+": "+O.repositoryUri,v("br"),tr(msgs.BRANCH_)+": "+O.branch,v("br"),tr(msgs.PATH_)+": "+O.filePath))),m.setHotSpotPadding(new goog.math.Box(20,20,20,20)),m.setShowDelayMs(100)}catch{console.log("Failed to set the document title tooltip")}goog.events.listen(g.editor,sync.api.Editor.EventTypes.CUSTOM_MESSAGE_RECEIVED,function(R){R.context===sync.api.Editor.WebappMessageReceived.Context.SAVE_AS&&R.message&&R.message.userGenerated&&z.showMessage(R.message.message)}),setTimeout(function(){f(g.editor,l,c)})}),goog.events.listenOnce(n,sync.api.Editor.EventTypes.ACTIONS_LOADED,function(g){var v=goog.dom.createDom("div",{id:"git-toolbar-button",title:"Git"},""),m="";c()instanceof B?m="LogoToolbar.png":c()instanceof P||c()instanceof k?m="bitbucket_logo.png":c()instanceof y?c().isOnPremise()?m="Gitlab_onpremise24.png":m="Gitlab24.png":m="Git-logo-white24.png",v.style.backgroundImage='url("'+sync.util.computeHdpiIcon("../plugin-resources/github-static/"+m)+'")',c()instanceof y?v.style.marginRight="4px":v.style.marginRight="2px";var R=n.getEditingSupport().getType()===sync.api.Editor.EditorTypes.DIFF,S=F(c)===E.BITBUCKET_SERVER&&!re;if(R||S)n.getActionsManager().unregisterAction("Author/Save");else{var I;try{I=localStorage.getItem("github.shortcut")}catch(K){console.warn(K)}I&&I==="true"||!I?I=T.SHORTCUT:I==="false"&&(I=null);var b=new T(n,c,O,z,Se,l,te,I);b.listen("status_changed",_.bind(this,v));var w=Je(n,b,I)}var G=new le(O,c);r!==E.USERPASS&&n.getActionsManager().registerAction(G.ID,G),n.getActionsManager().registerAction("Git/DeleteCurrentBranch",new sync.actions.Action({actionPerformed:K=>c().deleteBranch(O.user,O.repo,O.branch).then(()=>workspace.getNotificationManager().showInfo("Successfully deleted branch "+O.branch)).catch(console.error).finally(K)})),qe(g.actionsConfiguration,{type:"list",iconDom:v,name:"Git",children:[{id:w,type:"action"},{id:G.ID,type:"action"}]})}),n.load(o)}function _(c,d){var C=["none","success","oxy-spinner","oxy-spinner-dark-background"],l=d.status,g;l==="loading"?g=["oxy-spinner","oxy-spinner-dark-background"]:g=[l],goog.dom.classlist.removeAll(c,C),goog.dom.classlist.addAll(c,g),clearTimeout(this.toolbarButtonClearSuccessTimeout_),l==="success"&&(this.toolbarButtonClearSuccessTimeout_=setTimeout(function(){goog.dom.classlist.removeAll(c,C),goog.dom.classlist.addAll(c,"none")},3200))}function p(c,d,C){var l=O.repositoryUri,g=C.status,v=C.message;if(c()instanceof B){switch(g){case 401:z.authenticateUser(d,E.GITHUB,l,!0);return;case 404:var m=c().getGithubRepo_(O.repositoryUri);m.show(function(R,S){S?n.reportFileNotFound():z.showLoadMessage(tr(msgs.COULD_NOT_OPEN_FILE_REPO_ACCESS_),d,E.GITHUB,l,n)});return}z.showLoadMessage(tr(msgs.GIT_ERROR_),d,E.GITHUB,l,n)}else z.showLoadMessage(v,d,F(c),l,n)}function f(c,d,C){var l=c.getActionsManager().getActionById("Author/CompareWithRepoVersion");l&&l.setBaseUrl(Ne(d,C))}},!0);var He=sync.util.promise.promisify(function(t,n){sync.options.PluginsOptions.getClientOption("git.resolveSubmodules")==="on"?N.resolveSubmodule(j(t),O.repositoryUri,O.branch,O.filePath,function(i){if(i.getStatus()===200){var o=i.getResponseJson();if(o.repositoryUri!==O.repositoryUri||o.branch!==O.branch||o.path!==O.filePath){xe(t,o);return}}n()}):n()});function xe(e,t){var n=j(e),i="git"+n+"://"+encodeURIComponent(t.repositoryUri)+"/"+encodeURIComponent(t.branch)+"/"+t.path.split("/").map(encodeURIComponent).join("/"),o=window.location.search.substring(1),r={};goog.array.map(o.split("&"),function(s){var u=s.split("=");r[u[0]]=u[1]}),r.url=encodeURIComponent(i);var a=Object.keys(r).map(function(s){return s+"="+r[s]}).join("&");window.location.search="?"+a}function ze(e,t,n){return new goog.Promise(function(i){e().canPush(t,O.branch,function(o,r){re=o,Ie=r,o===!1?e().canFork(function(a){Ae=a,i()}):i()})})}function Ke(e){return new goog.Promise(function(t){var n=F(e),i=j(n);goog.net.XhrIo.send("../plugins-dispatcher/git/try-access?auth="+i,function(o){var r=o.target,a=r.getStatus();a===200?t():a===401?z.authenticateUser(t,n,O.repositoryUri,!0,!0):(console.error("ERROR WHILE ensuring server auth ["+a+"]"),Se.showError(tr(msgs.ERROR_),tr(msgs.FAILED_TO_RETRIEVE_DOCUMENT_CONTENT_),sync.api.Dialog.ButtonConfiguration.OK),goog.events.listenOnce(Se.errDialog.dialog,goog.ui.Dialog.EventType.SELECT,function(){window.location.reload()}))},"POST","",{"X-Requested-With":"g"})})}function qe(e,t){var n=null;if(e.toolbars)for(var i=0;i<e.toolbars.length;i++){var o=e.toolbars[i];if(o.name==="Builtin"){n=o;break}}n&&n.children.splice(o.children.length-2,0,t)}function Je(e,t,n){return e.getActionsManager().unregisterAction("Author/Save"),e.getActionsManager().registerAction(T.ID,t,n),T.ID}});je();})();
/*
 * [js-sha1]{@link https://github.com/emn178/js-sha1}
 *
 * @version 0.4.1
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2016
 * @license MIT
 */
/*!
 * @overview  Github.js
 *
 * @copyright (c) 2013 Michael Aufreiter, Development Seed
 *            Github.js is freely distributable.
 *
 * @license   Licensed under MIT license
 *
 *            For all details and documentation:
 *            http://substance.io/michael/github
 */
